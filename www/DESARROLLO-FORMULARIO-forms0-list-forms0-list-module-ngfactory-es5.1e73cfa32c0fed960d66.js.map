{"version":3,"sources":["webpack:///src/app/DESARROLLO/FORMULARIO/forms0-list/forms0-list.module.ts","webpack:///src/app/DESARROLLO/FORMULARIO/forms0-list/forms-create2/forms-create2.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/forms0-list/forms0-list.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/forms0-list/forms0-list.page.html","webpack:///src/app/DESARROLLO/FORMULARIO/forms0-list/forms-create2/forms-create2.page.html","webpack:///src/app/DESARROLLO/modals/my-modal-combo/my-modal-combo.module.ts","webpack:///src/app/DESARROLLO/modals/my-modal-combo/my-modal-combo.page.html","webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/DESARROLLO/modals/my-modal/my-modal.page.ts","webpack:///src/app/components/skeleton-element/skeleton-element.component.html"],"names":["Forms0ListPageModule","modalController","translateService","authenticationService","navParams","actionSheetController","vcategoria","variables","userinfo","tituloxx","tipofrm","idformdetalle","vgrupo","this","apifoto","getapifoto","setTimeout","inputElement","setFocus","dismiss","get","idllave","Form","compose","required","pattern","subscribe","value","lpermiso","_ID","data","record","_id","controls","setValue","nombre","ejecuta","geoposicion","publico","tipo2","categoria","convertToDataURLviaCanvas","foto","then","base64","fotoimg","estado","subefoto","idempresa","result","url","options","tipo","bitacora","idafiliado","email","permiso","accion","createReg","valid","err","presentAlert","error","submitForm0","submitForm1","op","op2","presentingElement","uub","swipeToClose","backdropDismiss","animated","getTop","modal","uubx","component","componentProps","create","onWillDismiss","direccion","la","lo","present","image","Camera","getPhoto","correctOrientation","height","width","quality","allowEditing","resultType","DataUrl","source","generateFromImage","dataUrl","procesafoto","controlx","length","firstFileToBase64","fotoa","uploadPWA2","nativeElement","files","fileImage","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","Error","click","actionSheet","header","cssClass","buttons","text","role","icon","handler","takePicture2","takePicture","comp","sigraba","catalogot","frmt","labelx","grabax","record2","frm","titlex","datax","routerOutlet","router","alertController","showAgeFilter","showmenu","items","viewType","efecto","seguro","msg","currentSegment","currentSegment2","searchSubject","ReplaySubject","getCurrentNavigation","extras","state","getcopiauser","searchQuery","rangeForm","dual","lower","upper","pideregistros","event","detail","selectedCategory","itemsList","getReg","next","query","filterList","list","filter","item","toLowerCase","includes","target","complete","disabled","title","navigate","user","MyModalComboPageModule","SkeletonElementComponent","borderRadius","rounded","noAnimated","inline","styles","MyModalPage","mapsAPILoader","ngZone","zoom","address","latitude","longitude","load","setCurrentLocationa","setCurrentLocation2a","geoCoder","google","maps","Geocoder","autocomplete","places","Autocomplete","searchElementRef","types","addListener","run","place","getPlace","geometry","location","lat","lng","getAddress","setCurrentLocationa33","watchId","Geolocation","clearWatch","id","isPluginAvailable","watchPosition","timeout","enableHighAccuracy","maximumAge","coords","e","console","log","Number","substring","indexOf","$event","geocode","results","status","formatted_address","window","alert"],"mappings":"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","file":"x","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\nimport { FormsCreate2Page } from './forms-create2/forms-create2.page';\n\n\nimport { Forms0ListPage } from './forms0-list.page';\nimport { MyModalComboPageModule } from '../../modals/my-modal-combo/my-modal-combo.module';\n@NgModule({\n  declarations: [\n    Forms0ListPage,FormsCreate2Page\n  ],\n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule, MyModalComboPageModule,\n    RouterModule.forChild([{ path: '', component: Forms0ListPage }]), TranslateModule.forChild(),\n  ],\n  entryComponents: [\n    FormsCreate2Page\n  ],\n \n})\nexport class Forms0ListPageModule {}\n","import { Component, OnInit , ViewChild ,  ElementRef} from '@angular/core';\nimport { ModalController , NavParams , ActionSheetController, IonInput } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthenticationService } from '../../../services/Authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MyModalPage } from '../../../modals/my-modal/my-modal.page';\nimport { MyModalComboPage } from './../../../modals/my-modal-combo/my-modal-combo.page';\nimport {Plugins,  CameraResultType,  CameraSource} from '@capacitor/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n@Component({\n  selector: 'app-forms-create2',\n  templateUrl: './forms-create2.page.html',\n  styleUrls: ['./forms-create2.page.scss'],\n})\nexport class FormsCreate2Page implements OnInit {\n  @ViewChild('inputId', {  static: false })  inputElement: IonInput;\n  @ViewChild('fotoa', {static: true}) fotoa: ElementRef;\n   public vcategoria: any = [];\n\n  fotoimg: SafeResourceUrl;\n   Form: FormGroup;\n  // @ViewChild('createForm', { static: false }) createForm: FormGroupDirective;\n   variables: any = [];\n   userinfo: any = [];\n   idllave: any ;\n   tituloxx = '';\n   tipofrm='';\n   idformdetalle = '';\n\n   vgrupo: any = [];\n   _ID: any;\n   lpermiso: any;\n   apifoto: String ;\n\n   constructor(\n     private modalController: ModalController,\n     public translateService: TranslateService    , private authenticationService: AuthenticationService,\n     private navParams: NavParams , public actionSheetController: ActionSheetController\n   ) { this.apifoto = this.authenticationService.getapifoto(); }\n   ngAfterViewInit() {    setTimeout(() => {       this.inputElement.setFocus();  }, 400);}\n   dismissModal() {     this.modalController.dismiss('close');      }\n   ionViewDidEnter(): void {               }\n   ngOnInit(): void {\n     this.variables = this.navParams.get('variables');\n     this.userinfo = this.navParams.get('userinfo');\n     this.idllave=  this.navParams.get('idllave');\n     this.tituloxx =  this.navParams.get('title');\n     this.Form = new FormGroup({\n        'nombre': new FormControl('', Validators.compose([Validators.required,Validators.pattern('[a-zA-Z0-9-_()áéíóúÁÉÍÓÚ#*$!? ñÑ&+-/.]*')])),\n        'categoria': new FormControl('', Validators.required),\n        'tipo2': new FormControl('', Validators.required),\n        'foto': new FormControl(''),\n        'ejecuta': new FormControl(''),\n        'publico': new FormControl('', Validators.required),\n      //  'idformdetalle': new FormControl(''),\n        'geoposicion': new FormControl(''),\n        'estado': new FormControl('', Validators.required),\n     });\n     if (this.navParams.get('record') == null) {\n      //  this.Form.controls['categoria'].setValue(this.navParams.data.record.categoria);\n     \n\n     } else {\n        this.translateService.get('ACTUALIZAM').subscribe((value) => {this.tituloxx = value + ' '+ this.tituloxx; this.lpermiso = value; });\n        this._ID \t\t\t\t=\tthis.navParams.data.record._id;\n        this.Form.controls['nombre'].setValue(this.navParams.data.record.nombre);\n        this.Form.controls['ejecuta'].setValue(this.navParams.data.record.ejecuta);\n        this.Form.controls['geoposicion'].setValue(this.navParams.data.record.geoposicion);\n        this.Form.controls['publico'].setValue(this.navParams.data.record.publico);\n        this.Form.controls['tipo2'].setValue(this.navParams.data.record.tipo2);\n             this.Form.controls['categoria'].setValue(this.navParams.data.record.categoria);\n        this.authenticationService.convertToDataURLviaCanvas(this.authenticationService.getapifoto() +  this.navParams.data.record.foto, 'image/jpeg').\n        then( base64 => this.fotoimg = base64);\n        this.Form.controls['foto'].setValue(this.navParams.data.record.foto);\n   /*\n        if(this.navParams.data.record.idformdetalle)   {        this.Form.controls['idformdetalle'].setValue(this.navParams.data.record.idformdetalle);\n \n this.Form.controls['idformdetalle'].setValue(this.navParams.data.record.idformdetalle.nombre);\n this.idformdetalle = this.navParams.data.record.idformdetalle.id;\n        }\n        else\n        {\n         this.Form.controls['idformdetalle'].setValue('');\n         this.idformdetalle=''\n        }\n \n       \n        */\n       this.Form.controls['estado'].setValue(this.navParams.data.record.estado);\n     }\n     \n   }\n   //onSgrupoChange(selectedValue: any) {    this.sgrupo = selectedValue.detail.value ;(ionChange)='onSgrupoChange($event)'   }\n                         submitForm0() {\n                                 this.authenticationService.subefoto('',  'Image2s',  this.fotoimg, '' , '' , '', '' , 'create' ,this.userinfo[0].idempresa._id,'','').then((result) => {\n                                   let data: any = [];\n                                   data = result;\n                                   this.Form.controls['foto'].setValue(data.url);\n                                       const   options: any\t     = {\n        idempresa: this.userinfo[0].idempresa._id,\n        tipo: this.tipofrm,\n        nombre  : this.Form.controls['nombre'].value,\n     //   idformdetalle: { id: this.idformdetalle, nombre: this.Form.controls['idformdetalle'].value },\n        categoria  : this.Form.controls['categoria'].value,\n        tipo2  : this.Form.controls['tipo2'].value,\n        geoposicion  : this.Form.controls['geoposicion'].value,\n        ejecuta  : this.Form.controls['ejecuta'].value,\n        publico  : this.Form.controls['publico'].value,\n        foto  : this.Form.controls['foto'].value,\n        estado  : this.Form.controls['estado'].value,\n                                         bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                                         email: this.userinfo[0].email , permiso : this.lpermiso, accion: this.tituloxx}\n                                     };\n                                       if (options) {\n                                         this.authenticationService.createReg('', options, 'frmmovils').then((result) => {\n                                           if (!this.Form.valid) { return; }\n                                           this.modalController.dismiss('ok');\n                                       }, (err) => {\n                                         this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n                                       });\n                                       }\n                                 }, (err) => {\n                                   this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n                                 });\n                               }\n                               submitForm1() {\n                                 this.authenticationService.subefoto('',  'Image2s', this.fotoimg, '' , '' , '', this.Form.controls['foto'].value,'update',this.userinfo[0].idempresa._id,this._ID ,'').then((result) => {\n                                   let data: any = [];\n                                   data = result;\n                                   this.Form.controls['foto'].setValue(data.url);\n                                       const   options: any\t     = {\n        idempresa: this.userinfo[0].idempresa._id,\n        tipo: this.tipofrm,\n        nombre  : this.Form.controls['nombre'].value,\n        tipo2  : this.Form.controls['tipo2'].value,\n        ejecuta  : this.Form.controls['ejecuta'].value,\n        publico  : this.Form.controls['publico'].value,\n        categoria  : this.Form.controls['categoria'].value,\n        foto  : this.Form.controls['foto'].value,\n     //   idformdetalle: { id: this.idformdetalle, nombre: this.Form.controls['idformdetalle'].value },\n        estado  : this.Form.controls['estado'].value,\n        geoposicion  : this.Form.controls['geoposicion'].value,\n                                         bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                                         email: this.userinfo[0].email , permiso : this.lpermiso, accion: this.tituloxx}\n                                     };\n                                       if (options) {\n                                         this.authenticationService.createReg(this._ID, options, 'frmmovils').then((result) => {\n                                           if (!this.Form.valid) { return; }\n                                           this.modalController.dismiss('ok');\n                                       }, (err) => {\n                                         this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n                                       });\n                                       }\n                                    }, (err) => {\n                                   this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n                                 });\n                               }\n                                 submitForm() {\n                                     if (this.navParams.get('record') == null) {\n                                       this.submitForm0();\n                                     } else {\n                                       this.submitForm1();\n                                     }\n                                 }\n   async dacomponente(op, op2) {\n         let uub = '';\n         if ( op === 'ubicacion') {uub = this.Form.controls['ubicacion'].value; }\n         const modal = await this.modalController.create({\n           component: MyModalPage,      swipeToClose: false,    backdropDismiss: false,     animated: true,\n           presentingElement: await this.modalController.getTop(),\n           componentProps:  { variables:  this.variables, record: null, userinfo: this.userinfo, uubx : uub}\n           // , cssClass: 'modal-fullscreen'\n         });\n         modal.onWillDismiss().then((data) => {\n              if ( data.data === 'close' ) {     }      else      {\n              if (op === 'direccion') {\n               this.Form.controls['direccion'].setValue(data.data.direccion);\n              } else {\n               this.Form.controls['ubicacion'].setValue(data.data.direccion + ' {' + data.data.la + '°' + data.data.lo + '}');\n              }\n             }\n         });\n return await modal.present();\n       }\n   /*************************************************+++++FOTOS */\n   async takePicture(op) {\n   const image = await Plugins.Camera.getPhoto({\n   correctOrientation: true,\n             height: 200,\n             width: 200,\n                 quality: 60,\n   allowEditing: true,\n             resultType: CameraResultType.DataUrl,\n             source: CameraSource.Camera\n           });\n           this.authenticationService.generateFromImage(image.dataUrl, 200, 200, 0.5, data => {\n             switch (op) {\n               case 'fotoa': this.fotoimg = data;   this.Form.controls['foto'].setValue( this.authenticationService.procesafoto(this.Form.controls['foto'].value)); break;\n                 default:\n             }\n         });\n         }\n   uploadPWA2(op , controlx) {\n          const fileList: FileList = controlx;\n          if (fileList && fileList.length > 0) {\n                  this.firstFileToBase64(fileList[0]).then((result: string) => {\n                  this.authenticationService.generateFromImage(result, 200, 300, 0.5, data => {\n                  switch (op) {\n                          case 'fotoa':  this.fotoimg = data;    this.Form.controls['foto'].setValue( this.authenticationService.procesafoto(this.Form.controls['foto'].value)); break;\n                           default:\n                   }\n                  });\n                  }, (err: any) => {\n                  switch (op) {\n                  case 'fotoa':  this.fotoimg = null;  this.Form.controls['foto1'].setValue('');  break;\n                  default:\n                  }\n                  });\n   }}\n   uploadPWA(op) {\n   switch (op) {\n   case 'fotoa':  if (this.fotoa == null ) { return;}\n   this.uploadPWA2(op , this.fotoa.nativeElement.files); break;\n   default:\n   }\n   }\n   private firstFileToBase64(fileImage: File): Promise<{}> {\n   return new Promise((resolve, reject) => {\n   const fileReader: FileReader = new FileReader();\n   if (fileReader && fileImage != null) {\n   fileReader.readAsDataURL(fileImage);\n   fileReader.onload = () => {\n   resolve(fileReader.result);\n   };\n   fileReader.onerror = (error) => {\n   reject(error);\n   };\n   } else {\n   reject(new Error('No file found'));\n   }\n   });\n   }\n         async takePicture2(op) {\n   if ( op === 'fotoa')  {     this.fotoa.nativeElement.click();  }\n         }\n         async fotodatos( op ) {\n           const actionSheet = await this.actionSheetController.create({\n             header: 'Foto',\n             cssClass: 'my-custom-class',\n             buttons: [{   text: 'Galeria',  role: 'destructive',  icon: 'image-outline',\n               handler: () => {\n                 this.takePicture2(op);\n               }\n             }, {\n               text: 'Camara',\n               icon: 'camera-outline',\n               handler: () => {\n                 this.takePicture(op);\n               }\n             }]\n           });\n           await actionSheet.present();\n         }\n       /****************************************COMBO DE DATOS */\n       async combodatoslimpia(comp,sigraba)\n       {\n         this.Form.controls[comp].setValue('');\n         if (sigraba === 'formulariodetalle') { this.idformdetalle ='';}\n       }\n\n       async combodatos( op ,  catalogot, frmt, comp, labelx,sigraba) {\n           const modal = await this.modalController.create({\n             component: MyModalComboPage,   swipeToClose: false,     backdropDismiss: false,    animated: true,\n             presentingElement: await this.modalController.getTop(),\n             componentProps: {grabax: sigraba , variables:  this.variables, userinfo: this.userinfo\n               ,  record2 : null , op:  catalogot, frm: frmt, idllave : this.idllave, titlex: 'Buscar ' + labelx}\n             // , cssClass: 'modal-fullscreen'\n           });\n           modal.onWillDismiss().then((data) => {\n             let datax: any = [];\n             datax = data;\n     if (datax.data !==  'close')       {\n         if (datax.data) {this.Form.controls[comp].setValue(datax.data.nombre);\n             //  this.Form.controls[comp].id = datax.data._id\n             if (sigraba === 'formulariodetalle') { this.idformdetalle = datax.data._id;}\n             } else {        this.Form.controls[comp].setValue('');       }\n           }\n });\n           return await modal.present();\n         }\n }\n","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\n\nimport { FormsCreate2Page } from './forms-create2/forms-create2.page';\n\n@Component({\nselector: 'page-forms-list',\ntemplateUrl: 'forms0-list.page.html',\nstyleUrls: ['./forms0-list.page.scss'],\n})\nexport class Forms0ListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = true; showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidllave: any;\nviewType = 'grid';\ntituloxx = '';\nefecto = 0;\nseguro = '';\nmsg = '';\napifoto: String;\nitemsList: Array<any>;\npublic currentSegment = 'Todos';\npublic currentSegment2 = 'formulario';\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {  this.apifoto = this.authenticationService.getapifoto();\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nngOnInit() {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.tituloxx = this.variables.nombre ;\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value;  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });\n    this.currentSegment = 'todos';\n    this.currentSegment2 = 'formulario';\n    this.pideregistros( this.currentSegment, this.currentSegment2);\n  }\n  filterContacts2(event: any) {\n    const selectedCategory2 = event.detail.value;\n    this.currentSegment2 = selectedCategory2;\n    this.pideregistros(this.currentSegment, this.currentSegment2 );\n  }\n  filterContacts(event: any) {\n    const selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n    this.pideregistros(selectedCategory, this.currentSegment2);\n  }\n  pideregistros0() {\n   this.pideregistros(this.currentSegment, this.currentSegment2);\n  }\n  pideregistros(op, op2) {\n       this.itemsList = [];\n       this.efecto = 0 ;\n      // this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa + '/' + this.idllave, 'formss', 0).then((data) => {\n        this.authenticationService.getReg(this.userinfo[0].idempresa._id + '/categoriagruponombre/' + this.currentSegment2, 'frmmovils', 0).then((data) => {\n\n       this.efecto = 1;\n       this.items =  data;\n       this.itemsList = this.items;\n }, (err) => {\n   this.authenticationService.presentAlert(err.error , this.msg , '');\n });\n  }\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n\n  async  addRecord() {\n\n    let tituloxx = '';\n    if ( this.currentSegment2 === 'formulario') {tituloxx = 'Creación de Formulario';}\n    if ( this.currentSegment2 === 'proceso') {tituloxx = 'Creación de Proceso';}\n    if ( this.currentSegment2 === 'detalle') {tituloxx = 'Creación de Detalle';}\n\n    const modal = await this.modalController.create({\n      component: FormsCreate2Page,\n      swipeToClose: false,\n      backdropDismiss: false,\n     animated: true,\n      presentingElement: await this.modalController.getTop(),\n      componentProps:  { variables:  this.variables, record: null, tipofrm: this.currentSegment2, userinfo: this.userinfo, idllave: this.idllave, title: tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n        this.pideregistros( this.currentSegment, this.currentSegment2);\n      }\n    });\n    return await modal.present();\n   }\n\n  async daforms(item: any) {\n    const navigationExtras: NavigationExtras = {\n      state: {\n        variables: this.variables,\n        user: this.userinfo[0].email,\n        tipo: this.currentSegment2,\n        categoria: item.nombre,\n        title: this.currentSegment2 + ' -> ' + item.nombre\n      }\n    };\n    this.router.navigate(['FormsListPage'], navigationExtras);\n  }\n\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      {{tituloxx}}\n    </ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n        <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n      </ion-button>\n      <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n        <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n      </ion-button>\n      <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n        <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n      </ion-button>\n      <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n        <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n  <ion-toolbar class=\"filters-toolbar\">\n    <ion-row class=\"searchbar-row\" align-items-center>\n      <ion-col>\n        <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n      </ion-col>\n    \n    </ion-row>\n   \n  </ion-toolbar>\n </ion-header>\n <ion-content class=\"user-friends-content\">\n  <ion-item-divider sticky>\n    <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n  </ion-item-divider>\n\n\n\n  <ion-item-divider sticky>\n\n  <ion-segment color=\"tertiary\"  (ionChange)=\"filterContacts2($event)\" value=\"formulario\">\n    <ion-segment-button value=\"formulario\" layout=\"icon-bottom\" checked>\n      <ion-label>Formulario</ion-label> \n      <ion-icon name=\"reader-outline\"></ion-icon>\n      \n    </ion-segment-button>\n    <ion-segment-button layout=\"icon-bottom\" value=\"proceso\">\n      <ion-label>Procesos</ion-label> \n      <ion-icon name=\"cube-outline\"></ion-icon>\n     </ion-segment-button>\n    <ion-segment-button layout=\"icon-bottom\" value=\"detalle\">\n      <ion-label>Detalle</ion-label> \n      <ion-icon name=\"list-outline\"></ion-icon>\n    </ion-segment-button>\n  </ion-segment>\n</ion-item-divider>\n\n  <ion-list *ngIf=\"efecto === 0\" >\n    <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n      <ion-label>\n        <skeleton-element></skeleton-element>\n        <skeleton-element></skeleton-element>\n        <skeleton-element width=\"67%\"></skeleton-element>\n      </ion-label>\n    </ion-item>\n  </ion-list>\n  <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n    <ion-item  *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n <ion-grid>\n <ion-row>\n   <ion-col  (click)=\"daforms(item)\" size=\"12\">\n     <ion-label class=\"ion-text-wrap\">\n         <ion-note slot=\"end\">No. {{i+1}}</ion-note> <br>\n <p>\n        \n         <strong> Categoria:</strong> {{item.nombre}} <br>   \n      \n     \n </p>   \n      </ion-label>\n </ion-col>\n </ion-row>\n\n     </ion-grid>\n    </ion-item>\n  </ion-list>\n  <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n    <ion-row>\n      <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n        <ion-card (click)=\"daforms(item)\"  >\n          <ion-row class=\"user-stats-wrapper user-details-wrapper\">\n            <ion-col>\n              <span class=\"user-stat-value\">No.</span>\n              <span class=\"user-stat-name\">{{i+1}} </span>\n            </ion-col>\n          \n          </ion-row>\n          <ion-item   [routerLink]=\"\">\n           \n            <ion-label   class=\"ion-text-wrap\">\n  <p> \n             \n               <strong> Categoria:</strong> {{item.nombre}} <br>   \n    \n       \n  </p>    </ion-label>\n          </ion-item>\n        \n \n        </ion-card>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n    {{ 'NODATOS' | translate }}  \n  </h3>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n    <ion-infinite-scroll-content\n      loadingSpinner=\"bubbles\"\n      loadingText=\"Espere un momento...\">\n    </ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n </ion-content>\n ","<form class=\"create-user-form ion-page\" [formGroup]=\"Form\" >\n        <ion-header>\n                <ion-toolbar color=\"primary\">\n                        <ion-buttons slot=\"end\">\n                                <ion-button (click)=\"dismissModal()\">\n                                   <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                                </ion-button>\n                        </ion-buttons>\n                        <ion-title>{{tituloxx}}</ion-title>\n                </ion-toolbar>\n        </ion-header>\n        <ion-content class=\"create-form-content\">\n            <section class=\"user-details-fields fields-section\">\n            <ion-list class=\"inputs-list\" lines=\"full\">\n  \n                \n              \n\n              <ion-item class=\"input-item\">\n                      <ion-label  position=\"floating\">Nombre<ion-text color=\"danger\">*</ion-text></ion-label>\n                      <ion-input inputMode=\"text\" #inputId  clearInput=\"true\" formControlName=\"nombre\" required></ion-input>\n              </ion-item>\n        <div class=\"error-container\">\n        <div class=\"error-message\" *ngIf=\"Form.get('nombre').hasError('required') && (Form.get('nombre').dirty || Form.get('nombre').touched)\">\n          <ion-icon name=\"information-circle-outline\"></ion-icon>\n          <span>Ingrese un nombre valido</span>\n        </div>\n         </div>\n        \n              <ion-item class=\"input-item\">\n                      <ion-label  >Categoria<ion-text color=\"danger\">*</ion-text></ion-label>\n                              <ion-input #inputId  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1001-categoria-plantilla','frmcats','categoria','Categoria','sigraba')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"categoria\" required></ion-input>\n                                     <ion-buttons slot=\"end\">\n                                        <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('categoria','sigraba')\">\n                                                <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                                              </ion-button>\n                            \n                                      <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1001-categoria-plantilla','frmcats','categoria','Categoria','sigraba')\">\n                                              <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                                      </ion-button>\n                                     </ion-buttons>\n             </ion-item>\n        <div class=\"error-container\">\n        <div class=\"error-message\" *ngIf=\"Form.get('categoria').hasError('required') && (Form.get('categoria').dirty || Form.get('categoria').touched)\">\n          <ion-icon name=\"information-circle-outline\"></ion-icon>\n          <span>Ingrese un categoria valido</span>\n        </div>\n         </div>\n        \n                      <ion-input [hidden]=\"true\"  inputMode=\"text\" clearInput=\"true\" formControlName=\"foto\"></ion-input>\n                      <input type=\"file\" id=\"fotoa\" style=\"visibility: hidden; height: 0px\"  #fotoa accept=\"image/x-png,image/jpeg\" (change)=\"uploadPWA('fotoa')\">\n              <ion-item class=\"input-item\">\n                      <ion-label  >Foto</ion-label>\n                      <ion-thumbnail  *ngIf=\"fotoimg  !== undefined\" slot=\"end\">  <img  [src]=\"fotoimg\" />   </ion-thumbnail>\n                      <ion-buttons slot=\"end\">\n                      <ion-button title=\"Adjuntar Imagen\" (click)=\"fotodatos('fotoa')\">\n                      <ion-icon slot=\"icon-only\" name=\"camera-outline\"></ion-icon>\n                      </ion-button>\n                      </ion-buttons>   \n              </ion-item>\n        \n              <ion-item class=\"input-item\">\n                <ion-label >Grabar Geoposición</ion-label>\n                <ion-toggle   color=\"secondary\"   clearInput=\"true\" formControlName=\"geoposicion\" ></ion-toggle>\n        </ion-item>\n\n        \n        <ion-item class=\"input-item\">\n                <ion-label >Tipo {{tipofrm}}<ion-text color=\"danger\">*</ion-text></ion-label>\n                <ion-select #inputId  placeholder=\"{{ 'SELECTVALORM' | translate }}\" formControlName=\"tipo2\">\n                <ion-select-option text-wrap value=\"Formulario\">Formulario</ion-select-option>\n                <ion-select-option text-wrap value=\"Repositorio\">Repositorio de datos</ion-select-option>\n                </ion-select>\n        </ion-item>\n        <div class=\"error-container\">\n        <div class=\"error-message\" *ngIf=\"Form.get('tipo2').hasError('required') && (Form.get('tipo2').dirty || Form.get('tipo2').touched)\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon>\n        <span>Ingrese un tipo {{tipofrm}} valido</span>\n        </div>\n        </div>\n\n        <ion-item  *ngIf=\"tipofrm === 'Repositorio de datos'\"    class=\"input-item\">\n                <ion-label position=\"floating\">Ejecutar rutina </ion-label>\n                <ion-input inputMode=\"text\"   clearInput=\"true\" formControlName=\"ejecuta\" ></ion-input>\n        </ion-item>\n\n              <ion-item class=\"input-item\">\n                      <ion-label >Estado<ion-text color=\"danger\">*</ion-text></ion-label>\n                      <ion-select #inputId  placeholder=\"{{ 'SELECTVALORM' | translate }}\" formControlName=\"estado\">\n                      <ion-select-option text-wrap value=\"Activo\">Activo</ion-select-option>\n                      <ion-select-option text-wrap value=\"Inactivo\">Inactivo</ion-select-option>\n                      </ion-select>\n              </ion-item>\n        <div class=\"error-container\">\n        <div class=\"error-message\" *ngIf=\"Form.get('estado').hasError('required') && (Form.get('estado').dirty || Form.get('estado').touched)\">\n          <ion-icon name=\"information-circle-outline\"></ion-icon>\n          <span>Ingrese un estado valido</span>\n        </div>\n         </div>\n\n         \n         <ion-item class=\"input-item\">\n                <ion-label >Publico<ion-text color=\"danger\">*</ion-text></ion-label>\n                <ion-select #inputId  placeholder=\"{{ 'SELECTVALORM' | translate }}\" formControlName=\"publico\">\n                <ion-select-option text-wrap value=\"No\">No</ion-select-option>\n                <ion-select-option text-wrap value=\"Si\">Si</ion-select-option>\n                </ion-select>\n        </ion-item>\n        <div class=\"error-container\">\n        <div class=\"error-message\" *ngIf=\"Form.get('publico').hasError('required') && (Form.get('publico').dirty || Form.get('publico').touched)\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon>\n        <span>Ingrese si el formulario es publico</span>\n        </div>\n        </div>\n        \n         <!--\n     <ion-item  *ngIf=\"tipofrm === 'proceso'\"   class=\"input-item\"  text-wrap>\n\n\n        <ion-label   > Seleccione formulario  </ion-label>\n\n        <ion-input  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1000,'categoria-plantilla','frmcats','idformdetalle','idformdetalle','formulariodetalle')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"idformdetalle\" ></ion-input>\n        <ion-buttons slot=\"end\">\n         <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1000,'categoria-plantilla','frmcats','idformdetalle','idformdetalle','formulariodetalle')\">\n                 <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n         </ion-button>\n        </ion-buttons>\n\n\n        </ion-item>\n-->\n\n\n             </ion-list>\n          </section>\n        </ion-content>\n        <ion-footer>\n          <ion-row class=\"form-actions-wrapper\">\n            <ion-col>\n              <ion-button (click)=\"submitForm()\" color=\"primary\" expand=\"block\" fill=\"outline\" type=\"submit\" [disabled]=\"!Form.valid\">CREAR</ion-button>\n              </ion-col>\n          </ion-row>\n        </ion-footer>\n        </form>   \n        ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\n\n\nimport { MyModalComboPage } from './my-modal-combo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule ,\n    IonicModule, RouterModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MyModalComboPage],\n  entryComponents: [\n    MyModalComboPage\n  ],\n})\nexport class MyModalComboPageModule {}\n","\n<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n          <ion-buttons slot=\"end\">\n            <ion-button [hidden]=\"grabax\" title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n              <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n            </ion-button>\n            <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros()\">\n              <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n            </ion-button>\n                  <ion-button (click)=\"closeModal()\">\n                     <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                  </ion-button>\n                 \n          </ion-buttons>\n          <ion-title>{{tituloxx}}</ion-title>\n         \n  </ion-toolbar>   \n  <ion-toolbar class=\"filters-toolbar\">\n    <ion-row class=\"searchbar-row\" align-items-center>\n      <ion-col>\n        <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n      </ion-col>\n\n    </ion-row>\n   \n  </ion-toolbar>\n\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <ion-list *ngIf=\"tmultiple===true\"  >\n    <ion-item>\n      <ion-label><strong>Seleccionar Todos</strong></ion-label>\n      <ion-checkbox slot=\"start\" \n      [(ngModel)]=\"masterCheck\"\n      [indeterminate]=\"isIndeterminate\"\n        (click)=\"checkMaster($event)\"></ion-checkbox>\n    </ion-item>\n  </ion-list>\n  <ion-list class=\"ion-no-margin\">  \n\n\n    <ion-item class=\"ionic-selectable-item\"  button=\"true\"   detail=\"false\" *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n      <ion-label *ngIf=\"bloquear===item._id\" style=\"text-decoration: underline;\" color=\"danger\" class=\"ion-text-wrap\">\n       \n      Actual:  {{item.nombre}} \n      \n     \n      </ion-label>\n        <ion-label *ngIf=\"bloquear!==item._id\" (click)=\"selectitem(item)\" class=\"ion-text-wrap\">\n       \n        \n          <span *ngIf=\"getKeys(item)\">\n            <div  class=\"first-letter\" *ngFor=\"let key of keys\" [innerHtml]=\"key\">\n               \n            \n         \n            </div> \n          </span>\n        \n       \n        </ion-label>\n        <ion-checkbox slot=\"start\" *ngIf=\"tmultiple===true\"  \n        [(ngModel)]=\"item.isChecked\" \n        (ionChange)=\"checkEvent()\"></ion-checkbox>\n\n     \n    \n\n      <ion-button [hidden]=\"grabax\" title=\"{{ 'ELIMINARM' | translate }}\" \n      class=\"ionic-selectable-item-button\" slot=\"end\" fill=\"outline\"\n      (click)=\"deleteRecord( item)\">\n      <ion-icon slot=\"icon-only\" ios=\"create\" md=\"trash-sharp\"></ion-icon>\n    </ion-button>\n    <ion-button [hidden]=\"grabax\" title=\"{{ 'ACTUALIZARM' | translate }}\"\n      class=\"ionic-selectable-item-button\" slot=\"end\" fill=\"outline\"\n      (click)=\"updateRecord( item)\">\n      <ion-icon slot=\"icon-only\" ios=\"create\" md=\"create-sharp\"></ion-icon>\n    </ion-button>\n\n\n     \n    </ion-item>\n  </ion-list>\n</ion-content>\n\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { MapsAPILoader, AgmMap } from '@agm/core';\nimport { ModalController , NavParams} from '@ionic/angular';\n\nimport { Plugins, Capacitor , CallbackID} from '@capacitor/core';\nconst { Geolocation} = Plugins;\n\n\n@Component({\n  selector: 'app-my-modal',\n  templateUrl: './my-modal.page.html',\n  styleUrls: ['./my-modal.page.scss'],\n})\nexport class MyModalPage implements OnInit {\n\n\n  title = 'AGM project';\n  latitude: number;\n  longitude: number;\n  zoom = 16 ;\n  address: string;\n  uubx: string;\n  watchId: CallbackID;\n  private geoCoder;\n  tituloxx: any;\n\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n\n  constructor( private modalController: ModalController,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n    private navParams: NavParams\n  ) { }\n\n  dismissModal() {     this.modalController.dismiss('close');      }\n\n  dadireccion() {     this.modalController.dismiss({direccion: this.address, la: this.latitude, lo: this.longitude});      }\n  ngOnInit() {\n\n    this.uubx = this.navParams.get('uubx');\n\n\n\n    this.mapsAPILoader.load().then(() => {\n      if (this.uubx === '') {     this.setCurrentLocationa();      } else      {  this.setCurrentLocation2a();      }\n      this.geoCoder = new google.maps.Geocoder;\n\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: ['address']\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          if (place) {\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.getAddress(this.latitude, this.longitude);\n          }\n        });\n      });\n    });\n\n  }\n\n  loadMap() {\n    this.mapsAPILoader.load().then(() => {\n   this.setCurrentLocationa33();\n\n\n    });\n  }\n\n  clearWatch() {\n    if (this.watchId != null) {\n      Plugins.Geolocation.clearWatch({ id: this.watchId });\n    }\n  }\n  // Get Current Location Coordinates\n  setCurrentLocationa33() {\n    if (!Capacitor.isPluginAvailable('Geolocation')) {\n      console.log('Plugin geolocation not available');\n      return;\n    }\n    try {\n      this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n        if (data) {\n          this.latitude = data.coords.latitude;\n          this.longitude = data.coords.longitude;\n      \n  \n        }\n  \n    });\n  } catch (e) {\n    console.error(e);\n  }\n  \n  }\n  setCurrentLocationa() {\n  if (!Capacitor.isPluginAvailable('Geolocation')) {\n    console.log('Plugin geolocation not available');\n    return;\n  }\n  try {\n    this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n      if (data) {\n        this.latitude = data.coords.latitude;\n        this.longitude = data.coords.longitude;\n        this.getAddress(this.latitude, this.longitude);\n\n      }\n\n  });\n} catch (e) {\n  console.error(e);\n}\n\n}\n\nsetCurrentLocation2a() {\n  if (!Capacitor.isPluginAvailable('Geolocation')) {\n    console.log('Plugin geolocation not available');\n    return;\n  }\n  try {\n    this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n    this.latitude = Number( this.uubx.substring(this.uubx.indexOf('{') + 1, this.uubx.indexOf('°') ));\n    this.longitude = Number( this.uubx.substring(this.uubx.indexOf('°') + 1, this.uubx.indexOf('}')) );\n    if (this.latitude !== 0) {\n      if (this.latitude) {\n      this.getAddress(this.latitude, this.longitude);\n      }\n    }\n\n  });\n} catch (e) {\n  console.error(e);\n}\n\n}\n\n\n\n\n  markerDragEnd($event: any) {\n    if (this.latitude !== 0) {\n      if (this.latitude) {\n    this.latitude = $event.coords.lat;\n    this.longitude = $event.coords.lng;\n    this.getAddress(this.latitude, this.longitude);\n      }}\n  }\n\n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      console.log(results);\n      console.log(status);\n      if (status === 'OK') {\n        if (results[0]) {\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n\n    });\n  }\n\n  async closeModal() {\n    this.modalController.dismiss('close');\n  }\n\n}\n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n"]}