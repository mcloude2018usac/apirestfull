{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-menu_3-ios.entry.js"],"names":["Menu","hostRef","this","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","isAnimating","_isOpen","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","ionWillOpen","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","updateState","emit","open","i","c","get","parent","el","parentNode","contentId","console","warn","content","document","getElementById","querySelector","tagName","typeChanged","sideChanged","_register","gesture","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","ev","onWillStart","onStart","onMove","onEnd","error","destroy","_unregister","backdropEl","detail","isPane","timeStamp","composedPath","includes","preventDefault","stopPropagation","close","Promise","resolve","_isActive","animated","setOpen","shouldOpen","_setOpen","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","mode","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","_getOpenSync","checkEdgeSide","window","currentX","progressStart","stepValue","computeDelta","deltaX","progressStep","isOpen","delta","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","playTo","oneTimeCallback","progressEnd","SHOW_MENU","SHOW_BACKDROP","block","unblock","MENU_CONTENT_OPEN","stop","isActive","enable","forceClosing","_setActiveMenu","role","class","part","ref","tappable","g","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","async","menuEl","menu","MenuButton","visible","autoHide","onClick","toggle","visibilityChanged","color","menuIcon","hidden","attrs","Object","assign","icon","lazy","MenuToggle"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { c as config, b as getIonMode } from './ionic-global-fbc9a2ac.js';\nimport { i as isEndSide, b as assert, c as clamp } from './helpers-5c745fbd.js';\nimport './animation-6064ebf7.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { GESTURE_CONTROLLER } from './index-6f647ec8.js';\nimport './hardware-back-button-7b6ede21.js';\nimport { m as menuController } from './index-88d5bee7.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        const el = this.el;\n        const parent = el.parentNode;\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"main-content\"></ion-menu>\n  <div id=\"main-content\">...</div>\n`);\n        }\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.gesture = (await import('./index-6f647ec8.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            blurOnStart: true,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    async componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        this.updateState();\n    }\n    disconnectedCallback() {\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await menuController._createAnimation(this.type, this);\n        if (!config.getBoolean('animated', true)) {\n            this.animation.duration(0);\n        }\n        this.animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction((isReversed) ? 'reverse' : 'normal')\n            .easing((isReversed) ? easingReverse : easing)\n            .onFinish(() => {\n            if (ani.getDirection() === 'reverse') {\n                ani.direction('normal');\n            }\n        });\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, (this._isOpen) ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep((this._isOpen) ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n        /**\n         * TODO: stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         * Not sure if the negative step value is an error or not\n         */\n        const adjustedStepValue = (stepValue < 0) ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = (this._isOpen) ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd((playTo) ? 1 : 0, (this._isOpen) ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled) {\n            menuController._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.direction('reverse');\n        ani.play({ sync: true });\n        this.afterAnimation(false);\n    }\n    render() {\n        const { isEndSide, type, disabled, isPaneVisible } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { role: \"navigation\", class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n    /*STENCIL:MODE:ios*/ ios: menuIosCss,\n    /*STENCIL:MODE:md*/ md: menuMdCss\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n    const menuEl = await menuController.get(menu);\n    return !!(menuEl && await menuEl.isActive());\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? 'menu-outline' : 'menu-sharp');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(color)), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\" }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    get el() { return getElement(this); }\n};\nMenuButton.style = {\n    /*STENCIL:MODE:ios*/ ios: menuButtonIosCss,\n    /*STENCIL:MODE:md*/ md: menuButtonMdCss\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n};\nMenuToggle.style = menuToggleCss;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n"]}