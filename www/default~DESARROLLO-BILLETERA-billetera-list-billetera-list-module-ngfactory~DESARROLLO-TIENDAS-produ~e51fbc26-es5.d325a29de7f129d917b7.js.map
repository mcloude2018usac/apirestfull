{"version":3,"sources":["webpack:///src/app/shell/text-shell/text-shell.component.html","webpack:///src/app/shell/text-shell/text-shell.component.ts"],"names":["TextShellComponent","debugMode","settings","debug","textLoaded","val","this","_data"],"mappings":"6miCAAA,iEAAc,iF,oCCEd,kDAOaA,E,WAqBX,aAAa,wBAnBL,KAAAC,aAAa,IAAeC,WAAY,IAAeA,SAASC,QAAS,IAAeD,SAASC,MAKvE,KAAAC,c,gDAEhBC,GACXC,KAAKL,YACRK,KAAKC,MAAQ,MAACF,EAAqCA,EAAM,IAIzDC,KAAKF,cADHE,KAAKC,OAAwB,KAAfD,KAAKC,W","file":"x","sourcesContent":["<ng-container>{{ _data }}</ng-container>\n","import { Component, Input, HostBinding } from '@angular/core';\n\nimport { AppShellConfig } from '../config/app-shell.config';\n\n@Component({\n  selector: 'app-text-shell',\n  templateUrl: './text-shell.component.html',\n  styleUrls: ['./text-shell.component.scss']\n})\nexport class TextShellComponent {\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\n  private debugMode = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\n\n  // tslint:disable-next-line:variable-name\n  _data: '';\n\n  @HostBinding('class.text-loaded') textLoaded = false;\n\n  @Input() set data(val: any) {\n    if (!this.debugMode) {\n      this._data = (val !== undefined && val !== null) ? val : '';\n    }\n\n    if (this._data && this._data !== '') {\n      this.textLoaded = true;\n    } else {\n      this.textLoaded = false;\n    }\n  }\n\n  constructor() { }\n}\n"]}