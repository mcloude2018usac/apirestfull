{"version":3,"sources":["webpack:///src/app/DESARROLLO/modals/my-modal-combo/my-modal-combo.module.ts","webpack:///src/app/DESARROLLO/modals/my-modal-combo/my-modal-combo.page.html","webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/DESARROLLO/modals/my-modal/my-modal.page.ts","webpack:///src/app/components/skeleton-element/skeleton-element.component.html","webpack:///src/app/DESARROLLO/FORMULARIO/formulariotareas-list/formulariotareas-list.module.ts","webpack:///src/app/DESARROLLO/FORMULARIO/formulariotareas-list/formulariotareas-create/formulariotareas-create.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/formulariotareas-list/formulariotareas-list.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/formulariotareas-list/formulariotareas-list.page.html","webpack:///src/app/DESARROLLO/FORMULARIO/formulariotareas-list/formulariotareas-create/formulariotareas-create.page.html"],"names":["MyModalComboPageModule","SkeletonElementComponent","width","height","borderRadius","rounded","noAnimated","inline","styles","this","MyModalPage","modalController","mapsAPILoader","ngZone","navParams","title","zoom","dismiss","direccion","address","la","latitude","lo","longitude","uubx","get","load","then","setCurrentLocationa","setCurrentLocation2a","geoCoder","google","maps","Geocoder","autocomplete","places","Autocomplete","searchElementRef","nativeElement","types","addListener","run","place","getPlace","geometry","location","lat","lng","getAddress","setCurrentLocationa33","watchId","Geolocation","clearWatch","id","isPluginAvailable","watchPosition","timeout","enableHighAccuracy","maximumAge","data","err","coords","e","console","error","log","Number","substring","indexOf","$event","geocode","results","status","formatted_address","window","alert","formulariotareasListPageModule","translateService","authenticationService","actionSheetController","vusuario","variables","userinfo","tituloxx","vgrupo","tipovisible","datePickerObj","closeOnSelect","mondayFirst","showTodayButton","closeLabel","todayLabel","clearButton","titleLabel","monthsList","weeksList","dateFormat","momentLocale","yearInAscending","btnCloseSetInReverse","btnProperties","expand","fill","size","disabled","strong","color","apifoto","getapifoto","setTimeout","inputElement","setFocus","idllave","Form","compose","required","pattern","subscribe","value","lpermiso","_ID","record","_id","controls","setValue","nombre","dafecha","fechainicio","fechafinal","avance","horas","usuario","idusuario","estado","hh","cc1","upper","lower","options","idempresa","idpapa","cantidadhoras","bitacora","idafiliado","email","permiso","accion","createReg","result","valid","presentAlert","op","op2","uub","modal","create","component","swipeToClose","backdropDismiss","animated","presentingElement","getTop","componentProps","onWillDismiss","present","image","Camera","getPhoto","correctOrientation","quality","allowEditing","resultType","DataUrl","source","generateFromImage","dataUrl","fotoimg","procesafoto","controlx","length","firstFileToBase64","fotoa","uploadPWA2","files","fileImage","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","Error","click","actionSheet","header","cssClass","buttons","text","role","icon","handler","takePicture2","takePicture","comp","catalogot","frmt","labelx","sigraba","grabax","record2","frm","titlex","datax","routerOutlet","router","alertController","showAgeFilter","showmenu","items","arreglo","viewType","efecto","seguro","msg","currentSegment","searchSubject","ReplaySubject","getCurrentNavigation","extras","state","getcopiauser","searchQuery","rangeForm","dual","pideregistros","event","selectedCategory","detail","itemsList","getReg","next","query","filterList","list","filter","item","toLowerCase","includes","inputs","name","type","label","checked","todo","arr","split","navigate","user","message","blah","deleteReg","operacion","nativeEl","target","complete"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\n\n\nimport { MyModalComboPage } from './my-modal-combo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule ,\n    IonicModule, RouterModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MyModalComboPage],\n  entryComponents: [\n    MyModalComboPage\n  ],\n})\nexport class MyModalComboPageModule {}\n","\n<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n          <ion-buttons slot=\"end\">\n            <ion-button [hidden]=\"grabax\" title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n              <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n            </ion-button>\n            <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros()\">\n              <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n            </ion-button>\n                  <ion-button (click)=\"closeModal()\">\n                     <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                  </ion-button>\n                 \n          </ion-buttons>\n          <ion-title>{{tituloxx}}</ion-title>\n         \n  </ion-toolbar>   \n  <ion-toolbar class=\"filters-toolbar\">\n    <ion-row class=\"searchbar-row\" align-items-center>\n      <ion-col>\n        <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n      </ion-col>\n\n    </ion-row>\n   \n  </ion-toolbar>\n\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <ion-list *ngIf=\"tmultiple===true\"  >\n    <ion-item>\n      <ion-label><strong>Seleccionar Todos</strong></ion-label>\n      <ion-checkbox slot=\"start\" \n      [(ngModel)]=\"masterCheck\"\n      [indeterminate]=\"isIndeterminate\"\n        (click)=\"checkMaster($event)\"></ion-checkbox>\n    </ion-item>\n  </ion-list>\n  <ion-list class=\"ion-no-margin\">  \n\n\n    <ion-item class=\"ionic-selectable-item\"  button=\"true\"   detail=\"false\" *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n      <ion-label *ngIf=\"bloquear===item._id\" style=\"text-decoration: underline;\" color=\"danger\" class=\"ion-text-wrap\">\n       \n      Actual:  {{item.nombre}} \n      \n     \n      </ion-label>\n        <ion-label *ngIf=\"bloquear!==item._id\" (click)=\"selectitem(item)\" class=\"ion-text-wrap\">\n       \n        \n          <span *ngIf=\"getKeys(item)\">\n            <div  class=\"first-letter\" *ngFor=\"let key of keys\" [innerHtml]=\"key\">\n               \n            \n         \n            </div> \n          </span>\n        \n       \n        </ion-label>\n        <ion-checkbox slot=\"start\" *ngIf=\"tmultiple===true\"  \n        [(ngModel)]=\"item.isChecked\" \n        (ionChange)=\"checkEvent()\"></ion-checkbox>\n\n     \n    \n\n      <ion-button [hidden]=\"grabax\" title=\"{{ 'ELIMINARM' | translate }}\" \n      class=\"ionic-selectable-item-button\" slot=\"end\" fill=\"outline\"\n      (click)=\"deleteRecord( item)\">\n      <ion-icon slot=\"icon-only\" ios=\"create\" md=\"trash-sharp\"></ion-icon>\n    </ion-button>\n    <ion-button [hidden]=\"grabax\" title=\"{{ 'ACTUALIZARM' | translate }}\"\n      class=\"ionic-selectable-item-button\" slot=\"end\" fill=\"outline\"\n      (click)=\"updateRecord( item)\">\n      <ion-icon slot=\"icon-only\" ios=\"create\" md=\"create-sharp\"></ion-icon>\n    </ion-button>\n\n\n     \n    </ion-item>\n  </ion-list>\n</ion-content>\n\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { MapsAPILoader, AgmMap } from '@agm/core';\nimport { ModalController , NavParams} from '@ionic/angular';\n\nimport { Plugins, Capacitor , CallbackID} from '@capacitor/core';\nconst { Geolocation} = Plugins;\n\n\n@Component({\n  selector: 'app-my-modal',\n  templateUrl: './my-modal.page.html',\n  styleUrls: ['./my-modal.page.scss'],\n})\nexport class MyModalPage implements OnInit {\n\n\n  title = 'AGM project';\n  latitude: number;\n  longitude: number;\n  zoom = 16 ;\n  address: string;\n  uubx: string;\n  watchId: CallbackID;\n  private geoCoder;\n  tituloxx: any;\n\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n\n  constructor( private modalController: ModalController,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n    private navParams: NavParams\n  ) { }\n\n  dismissModal() {     this.modalController.dismiss('close');      }\n\n  dadireccion() {     this.modalController.dismiss({direccion: this.address, la: this.latitude, lo: this.longitude});      }\n  ngOnInit() {\n\n    this.uubx = this.navParams.get('uubx');\n\n\n\n    this.mapsAPILoader.load().then(() => {\n      if (this.uubx === '') {     this.setCurrentLocationa();      } else      {  this.setCurrentLocation2a();      }\n      this.geoCoder = new google.maps.Geocoder;\n\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: ['address']\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          if (place) {\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.getAddress(this.latitude, this.longitude);\n          }\n        });\n      });\n    });\n\n  }\n\n  loadMap() {\n    this.mapsAPILoader.load().then(() => {\n   this.setCurrentLocationa33();\n\n\n    });\n  }\n\n  clearWatch() {\n    if (this.watchId != null) {\n      Plugins.Geolocation.clearWatch({ id: this.watchId });\n    }\n  }\n  // Get Current Location Coordinates\n  setCurrentLocationa33() {\n    if (!Capacitor.isPluginAvailable('Geolocation')) {\n      console.log('Plugin geolocation not available');\n      return;\n    }\n    try {\n      this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n        if (data) {\n          this.latitude = data.coords.latitude;\n          this.longitude = data.coords.longitude;\n      \n  \n        }\n  \n    });\n  } catch (e) {\n    console.error(e);\n  }\n  \n  }\n  setCurrentLocationa() {\n  if (!Capacitor.isPluginAvailable('Geolocation')) {\n    console.log('Plugin geolocation not available');\n    return;\n  }\n  try {\n    this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n      if (data) {\n        this.latitude = data.coords.latitude;\n        this.longitude = data.coords.longitude;\n        this.getAddress(this.latitude, this.longitude);\n\n      }\n\n  });\n} catch (e) {\n  console.error(e);\n}\n\n}\n\nsetCurrentLocation2a() {\n  if (!Capacitor.isPluginAvailable('Geolocation')) {\n    console.log('Plugin geolocation not available');\n    return;\n  }\n  try {\n    this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n    this.latitude = Number( this.uubx.substring(this.uubx.indexOf('{') + 1, this.uubx.indexOf('°') ));\n    this.longitude = Number( this.uubx.substring(this.uubx.indexOf('°') + 1, this.uubx.indexOf('}')) );\n    if (this.latitude !== 0) {\n      if (this.latitude) {\n      this.getAddress(this.latitude, this.longitude);\n      }\n    }\n\n  });\n} catch (e) {\n  console.error(e);\n}\n\n}\n\n\n\n\n  markerDragEnd($event: any) {\n    if (this.latitude !== 0) {\n      if (this.latitude) {\n    this.latitude = $event.coords.lat;\n    this.longitude = $event.coords.lng;\n    this.getAddress(this.latitude, this.longitude);\n      }}\n  }\n\n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      console.log(results);\n      console.log(status);\n      if (status === 'OK') {\n        if (results[0]) {\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n\n    });\n  }\n\n  async closeModal() {\n    this.modalController.dismiss('close');\n  }\n\n}\n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\nimport { formulariotareasCreatePage } from './formulariotareas-create/formulariotareas-create.page';\nimport { formulariotareasListPage } from './formulariotareas-list.page';\nimport { Ionic4DatepickerModule } from '@logisticinfotech/ionic4-datepicker';\nimport { MyModalComboPageModule } from '../../modals/my-modal-combo/my-modal-combo.module';\n@NgModule({\n  declarations: [\n    formulariotareasListPage, formulariotareasCreatePage\n  ],\n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule, Ionic4DatepickerModule, MyModalComboPageModule, \n    RouterModule.forChild([{ path: '', component: formulariotareasListPage }]), TranslateModule.forChild(),\n  ],\n  entryComponents: [\n    formulariotareasCreatePage\n  ],\n})\nexport class formulariotareasListPageModule {}\n","import { Component, OnInit , ViewChild ,  ElementRef} from '@angular/core';\nimport { ModalController , NavParams , ActionSheetController, IonInput } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthenticationService } from '../../../services/Authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MyModalPage } from '../../../modals/my-modal/my-modal.page';\nimport { MyModalComboPage } from './../../../modals/my-modal-combo/my-modal-combo.page';\nimport {Plugins,  CameraResultType,  CameraSource} from '@capacitor/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n@Component({\n  selector: 'app-formulariotareas-create',\n  templateUrl: './formulariotareas-create.page.html',\n  styleUrls: ['./formulariotareas-create.page.scss'],\n})\nexport class formulariotareasCreatePage implements OnInit {\n@ViewChild('inputId', {  static: false })  inputElement: IonInput;\n @ViewChild('fotoa', {static: true}) fotoa: ElementRef;\n  public vusuario: any = [];\n  Form: FormGroup;\n // @ViewChild('createForm', { static: false }) createForm: FormGroupDirective;\n  variables: any = [];\n  userinfo: any = [];\n  idllave: any ;\n  tituloxx = '';\n  vgrupo: any = [];\n  _ID: any;\n  lpermiso: any;\n  tipovisible: any = false;\n  apifoto: String ;\n  idusuario: any;\n  fotoimg: SafeResourceUrl;\n  datePickerObj: any = {\n    closeOnSelect: true, // default false\n    mondayFirst: true, // default false\n  showTodayButton: false,\n\n    closeLabel: 'Cancelar', // default 'Close'\n    todayLabel: 'Hoy',\n    clearButton : false ,\n    titleLabel: 'Fecha: ', // default null\n    monthsList: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n    weeksList: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\n    dateFormat: 'DD-MM-YYYY' , // default DD MMM YYYY\n    momentLocale: 'pt-BR', // Default 'en-US'\n    yearInAscending: true, // Default false\n    btnCloseSetInReverse: false, // Default false\n    btnProperties: {\n      expand: 'block', // Default 'block'\n      fill: '', // Default 'solid'\n      size: '', // Default 'default'\n      disabled: '', // Default false\n      strong: '', // Default false\n      color: '' // Default ''\n    }\n  };\n\n\n  constructor(\n    private modalController: ModalController,\n    public translateService: TranslateService    , private authenticationService: AuthenticationService,\n    private navParams: NavParams , public actionSheetController: ActionSheetController\n  ) { this.apifoto = this.authenticationService.getapifoto(); }\n  ngAfterViewInit() {    setTimeout(() => {       this.inputElement.setFocus();  }, 400); }\n  dismissModal() {     this.modalController.dismiss('close');      }\n  ionViewDidEnter(): void {               }\n  ngOnInit(): void {\n    this.variables = this.navParams.get('variables');\n    this.userinfo = this.navParams.get('userinfo');\n    this.idllave =  this.navParams.get('idllave');\n    this.tituloxx =  this.navParams.get('title');\n    this.tipovisible =  this.navParams.get('tipovisible');\n\n    this.Form = new FormGroup({\n       'nombre': new FormControl('', Validators.compose([Validators.required, Validators.pattern('[a-zA-Z0-9-_()áéíóúÁÉÍÓÚ#*$!? ñÑ&+-/.]*')])),\n       'fechainicio': new FormControl('', Validators.required),\n       'fechafinal': new FormControl('', Validators.required),\n\n       'usuario': new FormControl('', Validators.required),\n       'estado': new FormControl('', Validators.required),\n       'avance': new FormControl(''),\n\n       'horas': new FormControl('')\n\n\n    });\n    if (this.navParams.get('record') == null) {\n\n       this.translateService.get('NUEVOM').subscribe((value) => {   this.tituloxx = value + ' ' + this.tituloxx; this.lpermiso = value; });\n\n    } else {\n       this.translateService.get('ACTUALIZAM').subscribe((value) => {this.tituloxx = value + ' ' + this.tituloxx; this.lpermiso = value; });\n       this._ID \t\t\t\t=\tthis.navParams.data.record._id;\n       this.Form.controls['nombre'].setValue(this.navParams.data.record.nombre);\n       this.Form.controls['fechainicio'].setValue( this.authenticationService.dafecha(this.navParams.data.record.fechainicio, 1));\n       this.Form.controls['fechafinal'].setValue( this.authenticationService.dafecha(this.navParams.data.record.fechafinal, 1));\n\n       this.Form.controls['avance'].setValue(this.navParams.data.record.avance);\n       this.Form.controls['horas'].setValue(this.navParams.data.record.horas);\n            this.Form.controls['usuario'].setValue(this.navParams.data.record.usuario);\n            this.idusuario = this.navParams.data.record.idusuario;\n       this.Form.controls['estado'].setValue(this.navParams.data.record.estado);\n    }\n  }\n  // onSgrupoChange(selectedValue: any) {    this.sgrupo = selectedValue.detail.value ;(ionChange)='onSgrupoChange($event)'   }\n  submitForm() {\n\n    const hh = this.Form.controls['horas'].value;\nlet cc1 = 0;\n\nif (hh) {\n  if (hh.upper) {\n    if ( hh.upper > hh.lower ) {cc1 = hh.upper - hh.lower;\n\n    }\n  }\n}\n\n\n\n    const   options: any\t     = {\n       idempresa: this.userinfo[0].idempresa._id,\n        idpapa: this.idllave,\n       nombre  : this.Form.controls['nombre'].value,\n       idusuario: this.idusuario,\n       fechainicio  : this.authenticationService.dafecha(this.Form.controls['fechainicio'].value, 2),\n       fechafinal  : this.authenticationService.dafecha(this.Form.controls['fechafinal'].value, 2),\n       cantidadhoras  : cc1,\n       usuario  : this.Form.controls['usuario'].value,\n       avance  : this.Form.controls['avance'].value,\n       horas  : this.Form.controls['horas'].value,\n       estado  : this.Form.controls['estado'].value,\n       bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n       email: this.userinfo[0].email , permiso : this.lpermiso, accion: this.tituloxx}\n   };\n   if (this.navParams.get('record') == null) {\n        if (options) {\n          this.authenticationService.createReg('', options, 'formulariotareass').then((result) => {\n            if (!this.Form.valid) { return; }\n            this.modalController.dismiss('ok');\n        }, (err) => {\n          this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n        });\n        }\n   } else {\n    if (options) {\n      this.authenticationService.createReg(this._ID, options, 'formulariotareass').then((result) => {\n         if (!this.Form.valid) { return; }\n         this.modalController.dismiss('ok');\n     }, (err) => {\n      this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n     });\n  }}\n  }\n  async dacomponente(op, op2) {\n        let uub = '';\n        if ( op === 'ubicacion') {uub = this.Form.controls['ubicacion'].value; }\n        const modal = await this.modalController.create({\n          component: MyModalPage,      swipeToClose: false,    backdropDismiss: false,     animated: true,\n          presentingElement: await this.modalController.getTop(),\n          componentProps:  { variables:  this.variables, record: null, userinfo: this.userinfo, uubx : uub}\n          // , cssClass: 'modal-fullscreen'\n        });\n        modal.onWillDismiss().then((data) => {\n             if ( data.data === 'close' ) {     }      else      {\n             if (op === 'direccion') {\n              this.Form.controls['direccion'].setValue(data.data.direccion);\n             } else {\n              this.Form.controls['ubicacion'].setValue(data.data.direccion + ' {' + data.data.la + '°' + data.data.lo + '}');\n             }\n            }\n        });\nreturn await modal.present();\n      }\n  /*************************************************+++++FOTOS */\n  async takePicture(op) {\n  const image = await Plugins.Camera.getPhoto({\n  correctOrientation: true,\n            height: 200,\n            width: 200,\n                quality: 60,\n  allowEditing: true,\n            resultType: CameraResultType.DataUrl,\n            source: CameraSource.Camera\n          });\n          this.authenticationService.generateFromImage(image.dataUrl, 200, 200, 0.5, data => {\n            switch (op) {\n              case 'fotoa': this.fotoimg = data;   this.Form.controls['foto'].setValue( this.authenticationService.procesafoto(this.Form.controls['foto'].value)); break;\n                default:\n            }\n        });\n        }\n  uploadPWA2(op , controlx) {\n         const fileList: FileList = controlx;\n         if (fileList && fileList.length > 0) {\n                 this.firstFileToBase64(fileList[0]).then((result: string) => {\n                 this.authenticationService.generateFromImage(result, 200, 300, 0.5, data => {\n                 switch (op) {\n                         case 'fotoa':  this.fotoimg = data;    this.Form.controls['foto'].setValue( this.authenticationService.procesafoto(this.Form.controls['foto'].value)); break;\n                          default:\n                  }\n                 });\n                 }, (err: any) => {\n                 switch (op) {\n                 case 'fotoa':  this.fotoimg = null;  this.Form.controls['foto1'].setValue('');  break;\n                 default:\n                 }\n                 });\n  }}\n  uploadPWA(op) {\n  switch (op) {\n  case 'fotoa':  if (this.fotoa == null ) { return; }\n  this.uploadPWA2(op , this.fotoa.nativeElement.files); break;\n  default:\n  }\n  }\n  private firstFileToBase64(fileImage: File): Promise<{}> {\n  return new Promise((resolve, reject) => {\n  const fileReader: FileReader = new FileReader();\n  if (fileReader && fileImage != null) {\n  fileReader.readAsDataURL(fileImage);\n  fileReader.onload = () => {\n  resolve(fileReader.result);\n  };\n  fileReader.onerror = (error) => {\n  reject(error);\n  };\n  } else {\n  reject(new Error('No file found'));\n  }\n  });\n  }\n        async takePicture2(op) {\n  if ( op === 'fotoa')  {     this.fotoa.nativeElement.click();  }\n        }\n        async fotodatos( op ) {\n          const actionSheet = await this.actionSheetController.create({\n            header: 'Foto',\n            cssClass: 'my-custom-class',\n            buttons: [{   text: 'Galeria',  role: 'destructive',  icon: 'image-outline',\n              handler: () => {\n                this.takePicture2(op);\n              }\n            }, {\n              text: 'Camara',\n              icon: 'camera-outline',\n              handler: () => {\n                this.takePicture(op);\n              }\n            }]\n          });\n          await actionSheet.present();\n        }\n      /****************************************COMBO DE DATOS */\n      async combodatoslimpia(comp)\n{\n  this.Form.controls[comp].setValue('');\n  this.idusuario = '';\n}\n\n      async combodatos( op ,  catalogot, frmt, comp, labelx, sigraba) {\n        if (this.tipovisible === false) {\n          const modal = await this.modalController.create({\n            component: MyModalComboPage,   swipeToClose: false,     backdropDismiss: false,    animated: true,\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {grabax: sigraba , variables:  this.variables, userinfo: this.userinfo\n              ,  record2 : null , op:  catalogot, frm: frmt, idllave : this.idllave, titlex: 'Buscar ' + labelx}\n            // , cssClass: 'modal-fullscreen'\n          });\n          modal.onWillDismiss().then((data) => {\n            let datax: any = [];\n            datax = data;\n    if (datax.data !==  'close')       {\n        if (datax.data) {this.Form.controls[comp].setValue(datax.data.nombre);\n\n          this.idusuario = datax.data._id;\n            } else {        this.Form.controls[comp].setValue('');       }\n          }\n});\n          return await modal.present();\n        }}\n}\n","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { formulariotareasCreatePage } from './formulariotareas-create/formulariotareas-create.page';\n@Component({\nselector: 'page-formulariotareas-list',\ntemplateUrl: 'formulariotareas-list.page.html',\nstyleUrls: ['./formulariotareas-list.page.scss'],\n})\nexport class formulariotareasListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false;showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidllave:any;\narreglo:any =[];\nviewType = 'grid';\ntituloxx = '';\nefecto = 0;\nseguro ='';\nmsg = '';\ntipovisible:any =false;\napifoto: String;\nitemsList: Array<any>;\npublic currentSegment: string = \"Todos\";\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {  this.apifoto = this.authenticationService.getapifoto();\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nngOnInit() {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n    this.arreglo = this.router.getCurrentNavigation().extras.state.arreglo;\n    if(this.arreglo){this.tipovisible=true;}\n   \n    this.userinfo = this.authenticationService.getcopiauser();\n\n    this.tituloxx =this.router.getCurrentNavigation().extras.state.title ;\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });   \n    if(this.tipovisible===false)\n    {this.currentSegment = 'todos';}\n    else\n    {this.currentSegment = 'Activo';}\n    \n    this.pideregistros( this.currentSegment);\n  }\n  filterContacts(event: any) {\n    let selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n    this.pideregistros(selectedCategory);\n  }\n  pideregistros0() {\n   this.pideregistros(this.currentSegment);\n  }\n  pideregistros(op) {\n       this.itemsList = [];\n       this.efecto = 0 ;\n   if(this.arreglo)\n   {\n\n    this.authenticationService.getReg('tareasusuario2/' +  this.userinfo[0]._id +'°'+op + '/' + this.userinfo[0].idempresa._id+ '/' + this.arreglo, 'formulariotareass', 0).then((data) => {\n      this.efecto=1;\n      this.items =  data;\n      this.itemsList = this.items;\n}, (err) => {\n  this.authenticationService.presentAlert(err.error , this.msg , '');\n});\n   }\n   else\n   {\n    this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id+ '/' + this.idllave, 'formulariotareass', 0).then((data) => {\n      this.efecto=1;\n      this.items =  data;\n      this.itemsList = this.items;\n}, (err) => {\n  this.authenticationService.presentAlert(err.error , this.msg , '');\n});\n   }\n\n\n\n\n  }\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n  async otrasop(item: any) { \n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n       header: 'Seleccione Opción',\n       inputs: [\n         {\n           name: 'Actividades',\n           type: 'radio',\n           label: 'Actividades',\n           checked: true,\n           value: '/formulariotareasdocListPage°Actividades ->' + item.nombre,\n         }\n       ],\n       buttons: [\n         {\n           text: 'Cancel',\n           role: 'cancel',\n           cssClass: 'secondary',\n           handler: (todo) => {\n             console.log(todo);\n           }\n         }, {\n           text: 'Ok',\n           handler: (todo) => {\n             var arr = todo.split('°');\n             const navigationExtras: NavigationExtras = {\n               state: {\n                 variables: this.variables,\n                 user: null,\n                 idllave: item._id,\n                 title: arr[1]\n               }\n             };\n             this.router.navigate([arr[0]], navigationExtras);\n           }\n         }\n       ]\n     });\n     await alert.present();   \n }\n   async deleteRecord(item: any) {\n    const alert = await this.alertController.create({\n      header: this.seguro,\n      message: '',\n      buttons: [\n        {\n          text: 'No',\n         cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n           text: 'Si',\n           handler: () => {\n             const recordID: string\t\t= item._id;\n             this.authenticationService.deleteReg(recordID + '/' + this.userinfo[0].email + '/' + this.userinfo[0].idempresa._id  + '/'\n             + 'na' , 'formulariotareass').then((data) => {\n               this.pideregistros( this.currentSegment);\n               }, (err) => {\n                 this.authenticationService.presentAlert(err.error, this.msg, '');\n             });\n           }\n         }\n       ]\n     });\n     await alert.present();\n   }\n\n    finaliza(item: any) {\n\n      \n\n    const   options: any\t     = {\n    operacion:'cierra tarea',\n      estado  : 'cerrada',\n      bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n      email: this.userinfo[0].email , permiso : 'Actualiza', accion:'cierra tarea proyectos'}\n  };\n\n     this.authenticationService.createReg(item._id, options, 'formulariotareass').then((result) => {\n      this.pideregistros(this.currentSegment);\n    }, (err) => {\n     this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n    });\n }\n    \n\n  async updateRecord(item: any) {\n    const modal = await this.modalController.create({\n      component: formulariotareasCreatePage,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps:  {tipovisible:this.tipovisible, variables:  this.variables, record: item, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n      this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n}\n   async  addRecord() {\n    const modal = await this.modalController.create({\n      component: formulariotareasCreatePage,\n      swipeToClose: false,\n      backdropDismiss: false,\n     animated: true,\n      presentingElement: await this.modalController.getTop(),\n      componentProps:  {tipovisible:false, variables:  this.variables, record: null, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n        this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n   }\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n}\n"," <ion-header>\n <ion-toolbar color=\"primary\">\n   <ion-buttons slot=\"start\">\n    <ion-back-button defaultHref=\"formulariomovilsproceso2CreatePage\"></ion-back-button>\n   </ion-buttons>\n   <ion-title>\n     {{tituloxx}}\n   </ion-title>\n   <ion-buttons slot=\"end\">\n     <ion-button [hidden]=\"tipovisible\" title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n       <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n     </ion-button>\n     <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n       <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n       <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n       <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n     </ion-button>\n   </ion-buttons>\n </ion-toolbar>\n <ion-toolbar class=\"filters-toolbar\">\n   <ion-row class=\"searchbar-row\" align-items-center>\n     <ion-col>\n       <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n     </ion-col>\n     <ion-col [hidden]=\"!showAgeFilter\" class=\"call-to-action-col\">\n       <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" title=\" {{ 'FILTROM' | translate }}\" (click)=\"showAgeFilter = !showAgeFilter\">\n         <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n       </ion-button>\n     </ion-col>\n   </ion-row>\n   <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n     <ion-row class=\"range-item-row\">\n       <ion-col size=\"12\">\n         <div class=\"range-header\">\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n           <span class=\"range-label\">Filter by age</span>\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n         </div>\n       </ion-col>\n       <ion-col size=\"12\">\n         <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n       </ion-col>\n     </ion-row>\n   </form>\n </ion-toolbar>\n</ion-header>\n<ion-content class=\"user-friends-content\">\n <ion-item-divider sticky>\n   <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n </ion-item-divider>\n\n\n <ion-segment *ngIf=\"tipovisible===false\"  (ionChange)=\"filterContacts($event)\" value=\"todos\">\n   <ion-segment-button value=\"todos\" checked>\n     {{ 'TODOSM' | translate }}\n   </ion-segment-button>\n   <ion-segment-button value=\"Activo\">\n     {{ 'ACTIVOSM' | translate }}  \n    </ion-segment-button>\n   <ion-segment-button value=\"Inactivo\">\n     {{ 'INACTIVOSM' | translate }}\n   </ion-segment-button>\n </ion-segment>\n\n <ion-segment *ngIf=\"tipovisible===true\"   (ionChange)=\"filterContacts($event)\" value=\"Activo\">\n  \n   <ion-segment-button value=\"Activo\">\n     {{ 'ACTIVOSM' | translate }}\n    </ion-segment-button>\n   <ion-segment-button value=\"Cerrada\">\nCerradas\n   </ion-segment-button>\n </ion-segment>\n\n <ion-list *ngIf=\"efecto === 0\" >\n   <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n     <ion-label>\n       <skeleton-element></skeleton-element>\n       <skeleton-element></skeleton-element>\n       <skeleton-element width=\"67%\"></skeleton-element>\n     </ion-label>\n   </ion-item>\n </ion-list>\n <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n   <ion-item  *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n<ion-grid>\n<ion-row>\n  <ion-col  (click)=\"updateRecord(item)\" size=\"12\">\n     <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n    <ion-label class=\"ion-text-wrap\">\n        <ion-note slot=\"end\">No. {{i+1}}</ion-note> <br>\n<p>\n        <strong>Descripción de la tarea:</strong> {{item.nombre}} <br>    \n         <strong>Fecha inicio:</strong> {{item.fechainicio.substring(0,10)}} <br>  \n         <strong>Fecha final:</strong> {{item.fechafinal.substring(0,10)}} <br>  \n         <strong>Horario:</strong> {{item.horas.lower}} - {{item.horas.upper}} hrs. <br>  \n         <strong>Cantidad horas:</strong> {{item.cantidadhoras}} <br>  \n         <strong> AVANCE:</strong>  {{item.avance}} %<br>\n        <strong> Usuario:</strong> {{item.usuario}} <br>   \n    \n</p>   <ion-badge color=\"medium\">{{item.estado}}</ion-badge>\n     </ion-label>\n</ion-col>\n</ion-row>\n  <ion-row>\n<ion-col size=\"12\">\n      <ion-toolbar  color=\"transparent\">\n        <ion-buttons *ngIf=\"item.estado!=='Cerrada'\" [hidden]=\"!tipovisible\" slot=\"secondary\">\n          <ion-button  title=\"Finalizar tarea\"  (click)=\"finaliza(item)\" >\n            <ion-icon slot=\"icon-only\"  name=\"send-outline\"></ion-icon>\n          \n          </ion-button>\n        </ion-buttons>\n        <ion-buttons [hidden]=\"tipovisible\" slot=\"secondary\">\n          <ion-button  title=\"{{ 'ELIMINARM' | translate }}\"  (click)=\"deleteRecord(item)\" >\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      \n      </ion-toolbar>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n   </ion-item>\n </ion-list>\n <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n   <ion-row>\n     <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n       <ion-card  >\n         <ion-row class=\"user-stats-wrapper user-details-wrapper\">\n           <ion-col>\n             <span class=\"user-stat-value\">No.</span>\n             <span class=\"user-stat-name\">{{i+1}} </span>\n           </ion-col>\n           <ion-col>\n             <span class=\"user-stat-value\">{{item.estado}} </span>\n           </ion-col>\n         </ion-row>\n         <ion-item   [routerLink]=\"\">\n           <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n           <ion-label (click)=\"updateRecord(item)\"   class=\"ion-text-wrap\">\n <p>   \n              <strong>Descripción de la tarea:</strong> {{item.nombre}} <br>    \n              <strong> Fecha inicio:</strong> {{item.fechainicio.substring(0,10) }} <br>\n              <strong> Fecha final:</strong> {{item.fechafinal.substring(0,10) }} <br>\n              <strong>Horario:</strong> {{item.horas.lower}} - {{item.horas.upper}} hrs <br>  \n              <strong> Cantidad horas:</strong> {{item.cantidadhoras}} <br>\n\n              <strong> AVANCE:</strong>  {{item.avance}}% <br>\n\n              <strong> Usuario:</strong> {{item.usuario}} <br>   \n      \n </p>    </ion-label>\n         </ion-item>\n         <ion-card-content>\n         </ion-card-content>\n         <ion-row no-padding>\n           <ion-col  size=\"12\" >\n      <ion-toolbar  color=\"transparent\">\n        <ion-buttons *ngIf=\"item.estado!=='Cerrada'\" [hidden]=\"!tipovisible\" slot=\"secondary\">\n          <ion-button  title=\"Finalizar tarea\"  (click)=\"finaliza(item)\" >\n            <ion-icon slot=\"icon-only\"  name=\"send-outline\"></ion-icon>\n          \n          </ion-button>\n        </ion-buttons>\n      \n        <ion-buttons  [hidden]=\"tipovisible\" slot=\"secondary\">\n          <ion-button  title=\"{{ 'ELIMINARM' | translate }}\"  (click)=\"deleteRecord(item)\" >\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      \n      </ion-toolbar>\n           </ion-col>\n         </ion-row>\n       </ion-card>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n   {{ 'NODATOS' | translate }}  \n </h3>\n <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n   <ion-infinite-scroll-content\n     loadingSpinner=\"bubbles\"\n     loadingText=\"Espere un momento...\">\n   </ion-infinite-scroll-content>\n </ion-infinite-scroll>\n</ion-content>\n","<form class=\"create-user-form ion-page\" [formGroup]=\"Form\" >\n<ion-header>\n        <ion-toolbar color=\"primary\">\n                <ion-buttons slot=\"end\">\n                        <ion-button (click)=\"dismissModal()\">\n                           <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                        </ion-button>\n                </ion-buttons>\n                <ion-title>{{tituloxx}}</ion-title>\n        </ion-toolbar>\n</ion-header>\n<ion-content class=\"create-form-content\">\n    <section class=\"user-details-fields fields-section\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Descripción de la tarea<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-textarea [disabled]=\"tipovisible\"  rows='7' inputMode=\"text\" #inputId  clearInput=\"true\" formControlName=\"nombre\" required></ion-textarea>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('nombre').hasError('required') && (Form.get('nombre').dirty || Form.get('nombre').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese una descripción de la tarea valida</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Fechai nicio<ion-text color=\"danger\">*</ion-text></ion-label>\n            <ion-input  [disabled]=\"tipovisible\" style=\"text-align: right; \" readonly formControlName=\"fechainicio\"  [liIonic4Datepicker]=\"datePickerObj\"  ></ion-input>   \n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('fechainicio').hasError('required') && (Form.get('fechainicio').dirty || Form.get('fechainicio').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un fecha inicio valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Fecha final<ion-text color=\"danger\">*</ion-text></ion-label>\n            <ion-input  [disabled]=\"tipovisible\" style=\"text-align: right; \" readonly formControlName=\"fechafinal\"  [liIonic4Datepicker]=\"datePickerObj\"  ></ion-input>   \n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('fechafinal').hasError('required') && (Form.get('fechafinal').dirty || Form.get('fechafinal').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un fecha final valido</span>\n</div>\n </div>\n\n <ion-item  class=\"input-item\">\n  <ion-label >Horario por dia (Hrs 24)</ion-label>\n<ion-range  [disabled]=\"tipovisible\" min=\"0\" max=\"24\" dualKnobs=\"true\" color=\"secondary\" pin snaps=\"true\" formControlName=\"horas\" ticks>\n  <ion-label slot=\"start\">0</ion-label>\n  <ion-label slot=\"end\">24</ion-label>\n</ion-range>\n\n</ion-item>\n\n<ion-item class=\"input-item\">\n  <ion-label >Avance (%)</ion-label>\n<ion-range   min=\"0\" max=\"100\" color=\"secondary\" pin snaps=\"true\" formControlName=\"avance\" ticks>\n  <ion-label slot=\"start\">0</ion-label>\n  <ion-label slot=\"end\">100</ion-label>\n</ion-range>\n\n</ion-item>\n      <ion-item class=\"input-item\">\n              <ion-label  >Usuario<ion-text color=\"danger\">*</ion-text></ion-label>\n                      <ion-input  [disabled]=\"tipovisible\"  #inputId  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'usuario-plantilla','frmcats','usuario','Usuario','personals')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"usuario\" required></ion-input>\n                             <ion-buttons [hidden]=\"tipovisible\"  slot=\"end\">\n                              <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('usuario')\">\n                                <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                              </ion-button>\n\n                              <ion-button  title=\"Seleccione Información\" (click)=\"combodatos(1,'usuario-plantilla','frmcats','usuario','Usuario','personals')\">\n                                      <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                              </ion-button>\n                             </ion-buttons>\n     </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('usuario').hasError('required') && (Form.get('usuario').dirty || Form.get('usuario').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un usuario valido</span>\n</div>\n </div>\n\n\n\n      <ion-item  class=\"input-item\">\n              <ion-label >Estado<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-select [disabled]=\"tipovisible\"   placeholder=\"{{ 'SELECTVALORM' | translate }}\" formControlName=\"estado\">\n              <ion-select-option text-wrap value=\"Activo\">Activo</ion-select-option>\n              <ion-select-option text-wrap value=\"Inactivo\">Inactivo</ion-select-option>\n              </ion-select>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('estado').hasError('required') && (Form.get('estado').dirty || Form.get('estado').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un estado valido</span>\n</div>\n </div>\n\n     </ion-list>\n  </section>\n</ion-content>\n<ion-footer>\n  <ion-row class=\"form-actions-wrapper\">\n    <ion-col>\n      <ion-button (click)=\"submitForm()\" color=\"primary\" expand=\"block\" fill=\"outline\" type=\"submit\" [disabled]=\"!Form.valid\">CREAR</ion-button>\n      </ion-col>\n  </ion-row>\n</ion-footer>\n</form>   \n"]}