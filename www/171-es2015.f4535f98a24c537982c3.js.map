{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js"],"names":["Tab","hostRef","this","loaded","active","setActive","prepareLazyLoaded","isActive","component","a","delegate","el","e","console","error","Promise","resolve","undefined","tab","role","class","g","style","Tabs","transitioning","useRouter","onTabClicked","ev","href","detail","router","document","querySelector","push","select","ionNavWillLoad","ionTabsWillChange","ionTabsDidChange","closest","tabs","length","emit","tabBar","selectedTab","getTab","shouldSwitch","notifyRouter","tabSwitch","id","changed","element","markVisible","tabId","reject","leavingTab","navChanged","Array","from","querySelectorAll","onIonTabButtonClick","name","tabEl","find","t"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, h, H as Host, e as getElement, d as createEvent } from './index-e23c3ffd.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\n\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\n\nconst Tab = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.loaded = false;\n        /** @internal */\n        this.active = false;\n    }\n    async componentWillLoad() {\n        if (this.active) {\n            await this.setActive();\n        }\n    }\n    /** Set the active component for the tab */\n    async setActive() {\n        await this.prepareLazyLoaded();\n        this.active = true;\n    }\n    changeActive(isActive) {\n        if (isActive) {\n            this.prepareLazyLoaded();\n        }\n    }\n    prepareLazyLoaded() {\n        if (!this.loaded && this.component != null) {\n            this.loaded = true;\n            try {\n                return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        return Promise.resolve(undefined);\n    }\n    render() {\n        const { tab, active, component } = this;\n        return (h(Host, { role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n                'ion-page': component === undefined,\n                'tab-hidden': !active\n            } }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"active\": [\"changeActive\"]\n    }; }\n};\nTab.style = tabCss;\n\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\n\nconst Tabs = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.transitioning = false;\n        /** @internal */\n        this.useRouter = false;\n        this.onTabClicked = (ev) => {\n            const { href, tab } = ev.detail;\n            if (this.useRouter && href !== undefined) {\n                const router = document.querySelector('ion-router');\n                if (router) {\n                    router.push(href);\n                }\n            }\n            else {\n                this.select(tab);\n            }\n        };\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n        this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n    }\n    async componentWillLoad() {\n        if (!this.useRouter) {\n            this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n        }\n        if (!this.useRouter) {\n            const tabs = this.tabs;\n            if (tabs.length > 0) {\n                await this.select(tabs[0]);\n            }\n        }\n        this.ionNavWillLoad.emit();\n    }\n    componentWillRender() {\n        const tabBar = this.el.querySelector('ion-tab-bar');\n        if (tabBar) {\n            const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n            tabBar.selectedTab = tab;\n        }\n    }\n    /**\n     * Select a tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async select(tab) {\n        const selectedTab = getTab(this.tabs, tab);\n        if (!this.shouldSwitch(selectedTab)) {\n            return false;\n        }\n        await this.setActive(selectedTab);\n        await this.notifyRouter();\n        this.tabSwitch();\n        return true;\n    }\n    /**\n     * Get a specific tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async getTab(tab) {\n        return getTab(this.tabs, tab);\n    }\n    /**\n     * Get the currently selected tab.\n     */\n    getSelected() {\n        return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n    }\n    /** @internal */\n    async setRouteId(id) {\n        const selectedTab = getTab(this.tabs, id);\n        if (!this.shouldSwitch(selectedTab)) {\n            return { changed: false, element: this.selectedTab };\n        }\n        await this.setActive(selectedTab);\n        return {\n            changed: true,\n            element: this.selectedTab,\n            markVisible: () => this.tabSwitch(),\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        const tabId = this.selectedTab && this.selectedTab.tab;\n        return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n    }\n    setActive(selectedTab) {\n        if (this.transitioning) {\n            return Promise.reject('transitioning already happening');\n        }\n        this.transitioning = true;\n        this.leavingTab = this.selectedTab;\n        this.selectedTab = selectedTab;\n        this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n        selectedTab.active = true;\n        return Promise.resolve();\n    }\n    tabSwitch() {\n        const selectedTab = this.selectedTab;\n        const leavingTab = this.leavingTab;\n        this.leavingTab = undefined;\n        this.transitioning = false;\n        if (!selectedTab) {\n            return;\n        }\n        if (leavingTab !== selectedTab) {\n            if (leavingTab) {\n                leavingTab.active = false;\n            }\n            this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n        }\n    }\n    notifyRouter() {\n        if (this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                return router.navChanged('forward');\n            }\n        }\n        return Promise.resolve(false);\n    }\n    shouldSwitch(selectedTab) {\n        const leavingTab = this.selectedTab;\n        return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n    }\n    get tabs() {\n        return Array.from(this.el.querySelectorAll('ion-tab'));\n    }\n    render() {\n        return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n    }\n    get el() { return getElement(this); }\n};\nconst getTab = (tabs, tab) => {\n    const tabEl = (typeof tab === 'string')\n        ? tabs.find(t => t.tab === tab)\n        : tab;\n    if (!tabEl) {\n        console.error(`tab with id: \"${tabEl}\" does not exist`);\n    }\n    return tabEl;\n};\nTabs.style = tabsCss;\n\nexport { Tab as ion_tab, Tabs as ion_tabs };\n"]}