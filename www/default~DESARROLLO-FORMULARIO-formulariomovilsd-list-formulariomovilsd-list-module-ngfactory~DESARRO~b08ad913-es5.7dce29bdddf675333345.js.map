{"version":3,"sources":["webpack:///node_modules/@logisticinfotech/ionic4-datepicker/fesm2015/logisticinfotech-ionic4-datepicker.js","webpack:///node_modules/@logisticinfotech/ionic4-datepicker/logisticinfotech-ionic4-datepicker.d.ts.Ionic4DatepickerModalComponent.html"],"names":["Ionic4DatepickerService","this","isModalOpen","ngInjectableDef","factory","token","providedIn","moment","Ionic4DatepickerModalComponent","navParams","modalCtrl","datePickerService","mainObj","selectedDate","selctedDateEpoch","disabledDates","highlightedDates","disableWeekdays","data","currentMonth","currentYear","currentMonthSelected","rows","cols","monthsList","weeksList","yearsList","daysList","yearInAscending","momentLocale","isMonthYearSelectorOpen","scrollingMonthOrYearArray","isSelectedDateFound","today","resetHMSM","Date","getTime","get","date","initDatePickerObj","initDatePicker","currentDate","setHours","setMinutes","setSeconds","setMilliseconds","isMonthSelect","selectedYearOrMonth","iditem","indexOf","timeout","length","setTimeout","document","getElementById","scrollIntoView","monthYear","monthNumber","setDate","setMonth","setFullYear","refreshDateList","getMonth","getFullYear","newSelectedDate","setYear","selectedDateString","formatDate","disabled","Object","keys","epoch","closeOnSelect","closeModal","today_obj","getDate","month","year","day","getDay","dateSelected","obj","i","push","hColor","color","hFontColor","fontColor","hDateTime","tempDate","firstDay","lastDay","getYearsList","from","to","firstDayEpoch","lastDayEpoch","fromDate","disableWeekDays","toDate","hightLightDate","isSundayHighlighted","firstDayMonday","mondayFirst","j","unshift","currentYearSelected","numColumns","ipObj","inputDate","shift","setDisabledDates","getTop","formattedDate","format","dateFormat","dismiss","minYear","maxYear","setInitialObj","config","objConfig","showTodayButton","setLabel","todayLabel","closeLabel","titleLabel","clearButton","locale","btnCloseSetInReverse","btnProperties","expand","fill","size","strong","arrowNextPrev","nextArrowSrc","prevArrowSrc","setHightlightedDates","noop","Ionic4DatepickerComponent","el","renderer2","innerValue","onTouchedCallback","onChangeCallback","inputDateConfig","closeIcon","createElement","name","className","style","position","right","bottom","fontSize","zIndex","nativeElement","parentNode","nodeName","setAttribute","appendChild","listen","event","value","visibility","datePickerModal","create","component","cssClass","componentProps","present","onDidDismiss","then","onChangeValue","fn","v","LiIonic4DatepickerDirective","ngModel","control","setValue","update","emit","self","valueChanges","subscribe","openDatePicker","Ionic4DatepickerModule"],"mappings":"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","file":"x","sourcesContent":["import * as moment_ from 'moment';\nimport { CommonModule } from '@angular/common';\nimport { __awaiter } from 'tslib';\nimport { Injectable, Component, ViewChild, Directive, ElementRef, Renderer2, Input, HostListener, defineInjectable, forwardRef, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NgModel, NgControl, FormsModule } from '@angular/forms';\nimport { NavParams, ModalController, IonContent, IonicModule } from '@ionic/angular';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ionic4-datepicker.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Ionic4DatepickerService {\n    constructor() {\n        this.isModalOpen = false;\n    }\n}\nIonic4DatepickerService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nIonic4DatepickerService.ctorParameters = () => [];\n/** @nocollapse */ Ionic4DatepickerService.ngInjectableDef = defineInjectable({ factory: function Ionic4DatepickerService_Factory() { return new Ionic4DatepickerService(); }, token: Ionic4DatepickerService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ionic4-datepicker-modal/ionic4-datepicker-modal.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst moment = moment_;\nclass Ionic4DatepickerModalComponent {\n    /**\n     * @param {?} navParams\n     * @param {?} modalCtrl\n     * @param {?} datePickerService\n     */\n    constructor(navParams, modalCtrl, datePickerService) {\n        this.navParams = navParams;\n        this.modalCtrl = modalCtrl;\n        this.datePickerService = datePickerService;\n        // inputs\n        this.mainObj = {};\n        this.selectedDate = {};\n        // component variables\n        this.selctedDateEpoch = 0;\n        this.disabledDates = [];\n        this.highlightedDates = {};\n        this.disableWeekdays = [];\n        this.data = {\n            currentMonth: '',\n            currentYear: '',\n            currentMonthSelected: ''\n        };\n        this.rows = [0, 7, 14, 21, 28, 35];\n        this.cols = [0, 1, 2, 3, 4, 5, 6];\n        this.monthsList = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n        this.weeksList = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n        this.yearsList = [];\n        this.daysList = [];\n        this.yearInAscending = false;\n        this.momentLocale = 'en-US';\n        // month year scroll variables\n        this.isMonthYearSelectorOpen = false;\n        this.scrollingMonthOrYearArray = [];\n        this.isSelectedDateFound = false;\n        this.today = this.resetHMSM(new Date()).getTime();\n        if (this.navParams.get('selectedDate')) {\n            // console.log('Selected date =>', this.navParams.get('selectedDate'));\n            this.selectedDate.date = this.navParams.get('selectedDate');\n            this.isSelectedDateFound = true;\n        }\n        this.mainObj = this.initDatePickerObj(this.navParams.get('objConfig'));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.datePickerService.isModalOpen = true;\n        this.initDatePicker();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.datePickerService.isModalOpen = false;\n    }\n    // Reset the hours, minutes, seconds and milli seconds\n    /**\n     * @param {?} currentDate\n     * @return {?}\n     */\n    resetHMSM(currentDate) {\n        currentDate.setHours(0);\n        currentDate.setMinutes(0);\n        currentDate.setSeconds(0);\n        currentDate.setMilliseconds(0);\n        return currentDate;\n    }\n    // this method change month or year list to dateList\n    /**\n     * @return {?}\n     */\n    changeToDateList() {\n        // console.log('changeToDateList');\n        this.isMonthYearSelectorOpen = false;\n    }\n    // Virtual scroll create for select year and month\n    /**\n     * @param {?} isMonthSelect\n     * @return {?}\n     */\n    selectMonthYear(isMonthSelect) {\n        // console.log('selectMonthYear', i);\n        this.isMonthYearSelectorOpen = true;\n        this.isMonthSelect = isMonthSelect;\n        this.scrollingMonthOrYearArray = isMonthSelect ? this.mainObj.monthsList : this.yearsList;\n        this.selectedYearOrMonth = isMonthSelect ? this.data.currentMonth : this.data.currentYear;\n        /** @type {?} */\n        const index = this.scrollingMonthOrYearArray.indexOf(this.selectedYearOrMonth);\n        /** @type {?} */\n        const iditem = index + 'list';\n        /** @type {?} */\n        let timeout = 100;\n        if (!isMonthSelect && this.scrollingMonthOrYearArray.length >= 100) {\n            if (this.scrollingMonthOrYearArray.length <= 200) {\n                timeout = 250;\n            }\n            else if (this.scrollingMonthOrYearArray.length <= 300) {\n                timeout = 400;\n            }\n            else if (this.scrollingMonthOrYearArray.length <= 500) {\n                timeout = 550;\n            }\n            else {\n                timeout = 1000;\n            }\n        }\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            document.getElementById(iditem).scrollIntoView();\n        }), timeout);\n    }\n    // select month or year\n    /**\n     * @param {?} monthYear\n     * @return {?}\n     */\n    onChangeMonthYear(monthYear) {\n        // console.log('onChangeMonthYear', monthYear);\n        if (monthYear) {\n            if (this.isMonthSelect) {\n                this.data.currentMonth = monthYear;\n                this.selectedYearOrMonth = this.data.currentMonth;\n                /** @type {?} */\n                const monthNumber = this.monthsList.indexOf(this.data.currentMonth);\n                this.currentDate.setDate(1);\n                this.currentDate.setMonth(monthNumber);\n            }\n            else {\n                this.data.currentYear = monthYear;\n                this.selectedYearOrMonth = this.data.currentYear;\n                this.currentDate.setFullYear(this.data.currentYear);\n                this.refreshDateList(this.currentDate);\n            }\n            this.refreshDateList(this.currentDate);\n        }\n        this.isMonthYearSelectorOpen = false;\n    }\n    // Previous month\n    /**\n     * @return {?}\n     */\n    prevMonth() {\n        // console.log('prevNext', this.currentDate);\n        /** @type {?} */\n        const currentMonth = this.currentDate.getMonth();\n        /** @type {?} */\n        const currentYear = this.currentDate.getFullYear();\n        if (currentYear <= this.yearsList[(this.yearsList.length - 1)] && currentMonth === 0) {\n            return;\n        }\n        if (currentMonth === 1) {\n            this.currentDate.setFullYear(currentYear);\n        }\n        this.currentDate.setMonth(currentMonth - 1);\n        this.data.currentMonth = this.mainObj.monthsList[currentMonth];\n        this.data.currentYear = currentYear;\n        this.refreshDateList(this.currentDate);\n        // this.changeDaySelected();\n    }\n    // Next month\n    /**\n     * @return {?}\n     */\n    nextMonth() {\n        // console.log('nextNext', this.currentDate);\n        /** @type {?} */\n        const currentMonth = this.currentDate.getMonth();\n        /** @type {?} */\n        const currentYear = this.currentDate.getFullYear();\n        if (currentYear >= this.yearsList[0] && currentMonth === 11) {\n            return;\n        }\n        if (currentMonth === 11) {\n            this.currentDate.setFullYear(currentYear);\n        }\n        this.currentDate.setDate(1);\n        this.currentDate.setMonth(currentMonth + 1);\n        this.data.currentMonth = this.mainObj.monthsList[currentMonth];\n        this.data.currentYear = currentYear;\n        this.refreshDateList(this.currentDate);\n        // this.changeDaySelected();\n    }\n    // changeDaySelected ( day selection changes )\n    /**\n     * @return {?}\n     */\n    changeDaySelected() {\n        // console.log('changeDaySelected');\n        /** @type {?} */\n        const newSelectedDate = new Date(this.selctedDateEpoch);\n        newSelectedDate.setMonth(this.currentDate.getMonth());\n        newSelectedDate.setYear(this.currentDate.getFullYear());\n        this.selctedDateEpoch = newSelectedDate.getTime();\n        this.selectedDateString = this.formatDate();\n        // this.closeModal(this.selctedDateEpoch);\n    }\n    // Date selected\n    /**\n     * @param {?} selectedDate\n     * @return {?}\n     */\n    dateSelected(selectedDate) {\n        // console.log('dateSelected =>', selectedDate);\n        if (selectedDate && !selectedDate.disabled) {\n            if (!selectedDate || Object.keys(selectedDate).length === 0) {\n                return;\n            }\n            this.isSelectedDateFound = true;\n            this.selctedDateEpoch = selectedDate.epoch;\n            this.selectedDateString = this.formatDate();\n            if (this.mainObj.closeOnSelect) {\n                this.closeModal(this.selctedDateEpoch);\n            }\n        }\n    }\n    // Set today as date for the modal\n    /**\n     * @return {?}\n     */\n    setIonicDatePickerTodayDate() {\n        // console.log('setIonicDatePickerTodayDate');\n        /** @type {?} */\n        const today = new Date(this.today);\n        /** @type {?} */\n        const today_obj = {\n            date: today.getDate(),\n            month: today.getMonth(),\n            year: today.getFullYear(),\n            day: today.getDay(),\n            epoch: today.getTime(),\n            disabled: false\n        };\n        this.dateSelected(today_obj);\n        this.refreshDateList(new Date());\n        this.selctedDateEpoch = this.resetHMSM(today).getTime();\n        this.selectedDateString = this.formatDate();\n        // this.closeModal(this.selctedDateEpoch);\n    }\n    // Set date for the modal\n    /**\n     * @return {?}\n     */\n    setIonicDatePickerDate() {\n        // console.log('setIonicDatePickerDate');\n        this.closeModal(this.selctedDateEpoch);\n    }\n    // Setting the disabled dates list.\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    setDisabledDates(obj) {\n        // console.log('setDisabledDates =>', obj);\n        if (!obj.disabledDates || obj.disabledDates.length === 0) {\n            this.disabledDates = [];\n        }\n        else {\n            this.disabledDates = [];\n            for (let i = 0; i < obj.disabledDates.length; i++) {\n                // val = resetHMSM(new Date(val));\n                this.disabledDates.push(this.resetHMSM(new Date(obj.disabledDates[i])).getTime());\n            }\n        }\n    }\n    // Set hightlighted dates\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    setHightlightedDates(obj) {\n        if (!obj.highlightedDates || obj.highlightedDates.length === 0) {\n            this.highlightedDates = {};\n        }\n        else {\n            this.highlightedDates = {};\n            for (let i = 0; i < obj.highlightedDates.length; i++) {\n                /** @type {?} */\n                const hDate = obj.highlightedDates[i].date;\n                /** @type {?} */\n                const hColor = obj.highlightedDates[i].color;\n                /** @type {?} */\n                const hFontColor = obj.highlightedDates[i].fontColor;\n                /** @type {?} */\n                const hDateTime = this.resetHMSM(new Date(hDate)).getTime();\n                this.highlightedDates[hDateTime] = { color: hColor, fontColor: hFontColor };\n            }\n        }\n    }\n    // Refresh the list of the dates of a month\n    /**\n     * @param {?} currentDate\n     * @return {?}\n     */\n    refreshDateList(currentDate) {\n        // console.log('refreshDateList =>', currentDate);\n        currentDate = this.resetHMSM(currentDate);\n        this.currentDate = currentDate;\n        /** @type {?} */\n        const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDate();\n        /** @type {?} */\n        const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\n        this.monthsList = [];\n        if (this.mainObj.monthsList && this.mainObj.monthsList.length === 12) {\n            this.monthsList = this.mainObj.monthsList;\n        }\n        else {\n            this.monthsList = this.monthsList;\n        }\n        this.yearsList = this.getYearsList(this.mainObj.from, this.mainObj.to);\n        this.daysList = [];\n        /** @type {?} */\n        let tempDate;\n        /** @type {?} */\n        let disabled;\n        this.firstDayEpoch = this.resetHMSM(new Date(currentDate.getFullYear(), currentDate.getMonth(), firstDay)).getTime();\n        this.lastDayEpoch = this.resetHMSM(new Date(currentDate.getFullYear(), currentDate.getMonth(), lastDay)).getTime();\n        for (let i = firstDay; i <= lastDay; i++) {\n            tempDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), i);\n            disabled = false;\n            /** @type {?} */\n            const day = tempDate.getDay();\n            if (this.disableWeekdays.length > 0) {\n                if (this.disableWeekdays.indexOf(day) >= 0) {\n                    disabled = this.disableWeekdays.indexOf(day) >= 0;\n                }\n                else {\n                    disabled = false;\n                }\n            }\n            if (this.disabledDates.length > 0) {\n                if (this.disabledDates.indexOf(tempDate.getTime()) >= 0) {\n                    disabled = true;\n                }\n            }\n            if (this.fromDate && !disabled) {\n                disabled = (tempDate.getTime() < this.fromDate)\n                    || this.mainObj.disableWeekDays.indexOf(tempDate.getDay()) >= 0;\n            }\n            if (this.toDate && !disabled) {\n                disabled = (tempDate.getTime() > this.toDate)\n                    || this.mainObj.disableWeekDays.indexOf(tempDate.getDay()) >= 0;\n            }\n            /** @type {?} */\n            const hightLightDate = this.highlightedDates[tempDate.getTime()];\n            /** @type {?} */\n            let fontColor = null;\n            if (tempDate.getDay() === 0 && this.mainObj.isSundayHighlighted && this.mainObj.isSundayHighlighted.fontColor) {\n                fontColor = this.mainObj.isSundayHighlighted.fontColor;\n            }\n            else if (hightLightDate && hightLightDate.fontColor) {\n                fontColor = hightLightDate.fontColor;\n            }\n            this.daysList.push({\n                date: tempDate.getDate(),\n                month: tempDate.getMonth(),\n                year: tempDate.getFullYear(),\n                day: tempDate.getDay(),\n                epoch: tempDate.getTime(),\n                disabled: disabled,\n                color: hightLightDate && hightLightDate.color ? hightLightDate.color : null,\n                fontColor: fontColor\n                // fontColor: hightLightDate && hightLightDate.fontColor ? hightLightDate.fontColor : null\n            });\n        }\n        // To set Monday as the first day of the week.\n        /** @type {?} */\n        let firstDayMonday = this.daysList[0].day - this.mainObj.mondayFirst;\n        firstDayMonday = (firstDayMonday < 0) ? 6 : firstDayMonday;\n        for (let j = 0; j < firstDayMonday; j++) {\n            this.daysList.unshift({});\n        }\n        this.rows = [0, 7, 14, 21, 28, 35];\n        this.cols = [0, 1, 2, 3, 4, 5, 6];\n        this.data.currentMonth = this.mainObj.monthsList[currentDate.getMonth()];\n        this.data.currentYear = currentDate.getFullYear();\n        this.data.currentMonthSelected = this.data.currentMonth;\n        this.currentYearSelected = this.data.currentYear;\n        this.numColumns = 7;\n    }\n    // Setting up the initial object\n    /**\n     * @param {?} ipObj\n     * @return {?}\n     */\n    setInitialObj(ipObj) {\n        // console.log('setInitialObj =>', ipObj);\n        this.mainObj = ipObj;\n        if (this.isSelectedDateFound) {\n            this.isSelectedDateFound = true;\n            this.selctedDateEpoch = this.resetHMSM(this.mainObj.inputDate).getTime();\n        }\n        this.selectedDateString = this.formatDate();\n        if (this.mainObj.weeksList && this.mainObj.weeksList.length === 7) {\n            this.weeksList = this.mainObj.weeksList;\n        }\n        if (this.mainObj.mondayFirst) {\n            this.weeksList.push(this.mainObj.weeksList.shift());\n        }\n        if (this.mainObj.yearInAscending) {\n            this.yearInAscending = this.mainObj.yearInAscending;\n        }\n        if (this.mainObj.momentLocale) {\n            this.momentLocale = this.mainObj.momentLocale;\n        }\n        this.disableWeekdays = this.mainObj.disableWeekDays;\n        this.setDisabledDates(this.mainObj);\n        this.refreshDateList(this.mainObj.inputDate);\n    }\n    // for dismiss modal\n    /**\n     * @param {?} selectedDate\n     * @return {?}\n     */\n    closeModal(selectedDate) {\n        // console.log('closeModal => ', selectedDate);\n        this.modalCtrl.getTop();\n        /** @type {?} */\n        const formattedDate = moment(selectedDate).format(this.mainObj.dateFormat);\n        this.modalCtrl.dismiss({ 'date': formattedDate });\n    }\n    // close modal button\n    /**\n     * @return {?}\n     */\n    closeIonicDatePickerModal() {\n        // console.log('closeIonicDatePickerModal');\n        this.closeModal(null);\n    }\n    // get years list  ( GIVE HERE MIN OR MAX YEAR IN DATE_PICKER )\n    /**\n     * @param {?} from\n     * @param {?} to\n     * @return {?}\n     */\n    getYearsList(from, to) {\n        // console.log('getYearsList =>', from, to);\n        /** @type {?} */\n        const yearsList = [];\n        /** @type {?} */\n        let minYear = 1950;\n        /** @type {?} */\n        let maxYear = new Date().getFullYear() + 1;\n        minYear = from ? new Date(from).getFullYear() : minYear;\n        maxYear = to ? new Date(to).getFullYear() : maxYear;\n        // console.log('getYearsList: ', this.yearInAscending);\n        if (this.yearInAscending) {\n            for (let i = minYear; i <= maxYear; i++) {\n                yearsList.push(i);\n            }\n        }\n        else {\n            for (let i = maxYear; i >= minYear; i--) {\n                yearsList.push(i);\n            }\n        }\n        return yearsList;\n    }\n    // Init Date-Picker\n    /**\n     * @return {?}\n     */\n    initDatePicker() {\n        this.fromDate = '';\n        this.toDate = '';\n        // $scope.mainObj = angular.extend({}, config, ipObj);\n        if (this.mainObj.from) {\n            this.fromDate = this.resetHMSM(new Date(this.mainObj.from)).getTime();\n        }\n        if (this.mainObj.to) {\n            this.toDate = this.resetHMSM(new Date(this.mainObj.to)).getTime();\n        }\n        // if (ipObj.disableWeekdays && this.config.disableWeekdays) {\n        //   this.mainObj.disableWeekDays = ipObj.disableWeekdays.concat(this.config.disableWeekdays);\n        // }\n        this.setInitialObj(this.mainObj);\n    }\n    // Init DatePicker Object\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    initDatePickerObj(config) {\n        // const config = this.mainObj;\n        if (config.inputDate && !this.selectedDate.date) {\n            this.isSelectedDateFound = true;\n            this.selectedDate.date = config.inputDate;\n        }\n        /** @type {?} */\n        const objConfig = {};\n        objConfig.from = config.fromDate ? config.fromDate : '';\n        objConfig.to = config.toDate ? config.toDate : '';\n        objConfig.showTodayButton = config.showTodayButton === undefined ? true : config.showTodayButton;\n        objConfig.closeOnSelect = config.closeOnSelect ? config.closeOnSelect : false;\n        objConfig.disableWeekDays = config.disableWeekDays ? config.disableWeekDays : [];\n        objConfig.mondayFirst = config.mondayFirst ? config.mondayFirst : false;\n        objConfig.setLabel = config.setLabel ? config.setLabel : 'Set';\n        objConfig.todayLabel = config.todayLabel ? config.todayLabel : 'Today';\n        objConfig.closeLabel = config.closeLabel ? config.closeLabel : 'Close';\n        objConfig.disabledDates = config.disabledDates ? config.disabledDates : [];\n        objConfig.titleLabel = config.titleLabel ? config.titleLabel : null;\n        objConfig.monthsList = config.monthsList ? config.monthsList : this.monthsList;\n        objConfig.monthsList = [...objConfig.monthsList];\n        objConfig.weeksList = config.weeksList ? config.weeksList : this.weeksList;\n        objConfig.weeksList = [...objConfig.weeksList];\n        objConfig.dateFormat = config.dateFormat ? config.dateFormat : 'DD MMM YYYY';\n        // console.log(this.selectedDate.date, objConfig.dateFormat, moment.locale());\n        objConfig.clearButton = config.clearButton ? config.clearButton : false;\n        objConfig.yearInAscending = config.yearInAscending ? config.yearInAscending : false;\n        objConfig.momentLocale = config.momentLocale ? config.momentLocale : 'en-US';\n        moment.locale(objConfig.momentLocale);\n        objConfig.inputDate = this.selectedDate.date ? moment(this.selectedDate.date, objConfig.dateFormat).toDate() : new Date();\n        objConfig.btnCloseSetInReverse = config.btnCloseSetInReverse ? config.btnCloseSetInReverse : false;\n        objConfig.btnProperties = {};\n        if (config.btnProperties) {\n            /** @type {?} */\n            const btnProperties = config.btnProperties;\n            objConfig.btnProperties.expand = btnProperties.expand ? btnProperties.expand : 'block';\n            objConfig.btnProperties.fill = btnProperties.fill ? btnProperties.fill : 'solid';\n            objConfig.btnProperties.size = btnProperties.size ? btnProperties.size : 'default';\n            objConfig.btnProperties.color = btnProperties.color ? btnProperties.color : '';\n            objConfig.btnProperties.disabled = btnProperties.disabled ? btnProperties.disabled : false;\n            objConfig.btnProperties.strong = btnProperties.strong ? btnProperties.strong : false;\n        }\n        else {\n            objConfig.btnProperties.expand = 'block';\n            objConfig.btnProperties.fill = 'solid';\n            objConfig.btnProperties.size = 'default';\n            objConfig.btnProperties.disabled = false;\n            objConfig.btnProperties.strong = false;\n        }\n        objConfig.arrowNextPrev = {};\n        if (config.arrowNextPrev) {\n            /** @type {?} */\n            const arrowNextPrev = config.arrowNextPrev;\n            objConfig.arrowNextPrev.nextArrowSrc = arrowNextPrev.nextArrowSrc ? arrowNextPrev.nextArrowSrc : false;\n            objConfig.arrowNextPrev.prevArrowSrc = arrowNextPrev.prevArrowSrc ? arrowNextPrev.prevArrowSrc : false;\n        }\n        objConfig.highlightedDates = [];\n        if (config.highlightedDates && config.highlightedDates.length > 0) {\n            objConfig.highlightedDates = config.highlightedDates;\n            this.setHightlightedDates(objConfig);\n        }\n        objConfig.isSundayHighlighted = {};\n        if (config.isSundayHighlighted) {\n            /** @type {?} */\n            const isSundayHighlighted = config.isSundayHighlighted;\n            objConfig.isSundayHighlighted.fontColor = isSundayHighlighted.fontColor ? isSundayHighlighted.fontColor : null;\n        }\n        // console.log('config =>', objConfig);\n        return objConfig;\n    }\n    // Format date\n    /**\n     * @return {?}\n     */\n    formatDate() {\n        // console.log('formatDate: ', this.selctedDateEpoch, new Date(this.selctedDateEpoch));\n        return moment(this.selctedDateEpoch).format(this.mainObj.dateFormat);\n    }\n}\nIonic4DatepickerModalComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'li-ionic4-datepicker-modal',\n                template: \"<ion-header>\\n  <ion-toolbar (click)=\\\"changeToDateList()\\\">\\n    <ion-title>\\n      <h1 *ngIf=\\\"mainObj?.titleLabel\\\">{{mainObj?.titleLabel}}</h1>\\n      {{selectedDateString}}\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content forceOverscroll=\\\"false\\\" class=\\\"ionic_datepicker_modal_content ion-no-padding\\\">\\n  <ion-grid class=\\\"dp-month-year-container ion-no-padding\\\"\\n    [ngClass]=\\\"isMonthYearSelectorOpen ? 'dp-virual-scroller-hide' : 'dp-virual-scroller-show'\\\">\\n    <ion-row>\\n      <ion-col size=\\\"1.5\\\" class=\\\"dp-left-right-arrow\\\" (click)=\\\"prevMonth()\\\">\\n        <ion-button [ngClass]=\\\"{'pointer_events_none':((firstDayEpoch - 86400000) < fromDate)}\\\">\\n          <ion-icon *ngIf=\\\"!mainObj?.arrowNextPrev?.prevArrowSrc\\\" name=\\\"arrow-back\\\"></ion-icon>\\n          <ion-icon *ngIf=\\\"mainObj?.arrowNextPrev?.prevArrowSrc\\\" src=\\\"{{mainObj?.arrowNextPrev?.prevArrowSrc}}\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      <ion-col size=\\\"9\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col class=\\\"dp-select-month-year ion-no-padding\\\" size=\\\"5.5\\\" (click)=\\\"selectMonthYear(true)\\\">\\n              <ion-button class=\\\"dp-buttons\\\">\\n                {{ data.currentMonth }}\\n                <ion-icon name=\\\"md-arrow-dropdown\\\" class=\\\"dp-down-arrow\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\"></ion-col>\\n            <ion-col class=\\\"dp-select-month-year ion-no-padding\\\" size=\\\"5.5\\\" (click)=\\\"selectMonthYear(false)\\\">\\n              <ion-button class=\\\"dp-buttons\\\">\\n                {{ data.currentYear }}\\n                <ion-icon name=\\\"md-arrow-dropdown\\\" class=\\\"dp-down-arrow\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-col>\\n      <ion-col size=\\\"1.5\\\" class=\\\"dp-left-right-arrow\\\" (click)=\\\"nextMonth()\\\">\\n        <ion-button [ngClass]=\\\"{'pointer_events_none':((lastDayEpoch + 86400000)> toDate)}\\\">\\n          <ion-icon *ngIf=\\\"!mainObj?.arrowNextPrev?.nextArrowSrc\\\" name=\\\"arrow-forward\\\"></ion-icon>\\n          <ion-icon *ngIf=\\\"mainObj?.arrowNextPrev?.nextArrowSrc\\\" src=\\\"{{mainObj?.arrowNextPrev?.nextArrowSrc}}\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-grid class=\\\"dp-weeks-container\\\" *ngIf=\\\"daysList\\\" [ngClass]=\\\"isMonthYearSelectorOpen ? 'dp-virual-scroller-hide' : 'dp-virual-scroller-show'\\\">\\n          <ion-row class=\\\" dp-weeks-name\\\">\\n            <ion-col *ngFor=\\\"let weekName of mainObj?.weeksList; let i = index\\\">\\n              <!-- <div class=\\\"weeks\\\">{{weekName}} {{i}}</div> -->\\n              <div class=\\\"weeks\\\" *ngIf=\\\"mainObj?.mondayFirst\\\"\\n              [style.color]=\\\"mainObj?.isSundayHighlighted && i === 6 ? mainObj?.isSundayHighlighted.fontColor : ''\\\">\\n               {{weekName}}</div>\\n              <div class=\\\"weeks\\\" *ngIf=\\\"!mainObj?.mondayFirst\\\"\\n              [style.color]=\\\"mainObj?.isSundayHighlighted && i === 0 ? mainObj?.isSundayHighlighted.fontColor : ''\\\">\\n               {{weekName}}</div>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngFor=\\\"let row of rows;\\\" class=\\\"dp-days-list\\\">\\n            <ion-col *ngFor=\\\"let col of cols; let i = index ;\\\" (click)=\\\"dateSelected(daysList[row + i])\\\"\\n              [style.background-color]=\\\"(daysList[row + i]?.color) ? (daysList[row + i]?.color) : ''\\\"\\n              [style.border-radius]=\\\"(daysList[row + i]?.color) ? '4px' : ''\\\" class=\\\"ion-no-padding\\\" [ngClass]=\\\"{\\n                'dp-selecteddate': (daysList[row + i]?.epoch === selctedDateEpoch),\\n                'dp-today' : (daysList[row + i]?.epoch == today),\\n                'disabled' : (daysList[row + i]?.disabled)}\\\">\\n              <div class=\\\"days\\\" [style.color]=\\\"(daysList[row + i]?.fontColor) ? (daysList[row + i]?.fontColor) : ''\\\">\\n                {{daysList[row + col]?.date}}\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-list class=\\\"dp-month-year-scroll-container\\\" [ngClass]=\\\"isMonthYearSelectorOpen ? 'dp-virual-scroller-show' : 'dp-virual-scroller-hide'\\\">\\n    <ion-item *ngFor=\\\"let monthYear of scrollingMonthOrYearArray;let i=index;\\\" id=\\\"{{i +'list'}}\\\" (click)=\\\"onChangeMonthYear(monthYear)\\\">\\n      <ion-label [ngClass]=\\\"selectedYearOrMonth === monthYear ? 'dp-selected' : ''\\\">{{ monthYear }}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n      <ion-row class=\\\"ion-no-padding\\\" [ngClass]=\\\"mainObj?.btnCloseSetInReverse ? 'dp-btn-set-close-in-reverse' : ''\\\">\\n        <ion-col class=\\\"ion-no-padding\\\">\\n          <ion-button class=\\\"ion-button\\\" expand=\\\"{{mainObj?.btnProperties?.expand}}\\\"\\n            fill=\\\"{{mainObj?.btnProperties?.fill}}\\\" size=\\\"{{mainObj?.btnProperties?.size}}\\\"\\n            color=\\\"{{mainObj?.btnProperties?.color}}\\\" disabled=\\\"{{mainObj?.btnProperties?.disabled}}\\\"\\n            strong=\\\"{{mainObj?.btnProperties?.strong}}\\\" (click)=\\\"closeIonicDatePickerModal()\\\">\\n            {{mainObj?.closeLabel}}\\n          </ion-button>\\n        </ion-col>\\n        <ion-col class=\\\"ion-no-padding\\\" *ngIf=\\\"mainObj?.showTodayButton\\\">\\n          <ion-button class=\\\"ion-button\\\" expand=\\\"{{mainObj?.btnProperties?.expand}}\\\"\\n            fill=\\\"{{mainObj?.btnProperties?.fill}}\\\" size=\\\"{{mainObj?.btnProperties?.size}}\\\"\\n            color=\\\"{{mainObj?.btnProperties?.color}}\\\" disabled=\\\"{{mainObj?.btnProperties?.disabled}}\\\"\\n            strong=\\\"{{mainObj?.btnProperties?.strong}}\\\" (click)=\\\"setIonicDatePickerTodayDate()\\\">\\n            {{mainObj?.todayLabel}}\\n          </ion-button>\\n        </ion-col>\\n        <ion-col class=\\\"ion-no-padding\\\" *ngIf=\\\"!mainObj?.closeOnSelect\\\">\\n          <ion-button class=\\\"ion-button\\\" expand=\\\"{{mainObj?.btnProperties?.expand}}\\\"\\n            fill=\\\"{{mainObj?.btnProperties?.fill}}\\\" size=\\\"{{mainObj?.btnProperties?.size}}\\\"\\n            color=\\\"{{mainObj?.btnProperties?.color}}\\\"\\n            disabled=\\\"{{mainObj?.btnProperties?.disabled || !isSelectedDateFound}}\\\"\\n            strong=\\\"{{mainObj?.btnProperties?.strong}}\\\" (click)=\\\"setIonicDatePickerDate()\\\">\\n            {{mainObj?.setLabel}}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-footer>\",\n                styles: [\":host ion-header{height:60px}:host ion-header ion-toolbar{--background:var(--ion-color-primary);height:100%;align-items:center;display:flex;color:var(--ion-color-primary-contrast)}:host ion-header ion-toolbar ion-title{font-size:20px;font-weight:700;text-align:center;padding:0;display:flex;align-items:center;justify-content:center;height:100%;cursor:pointer}:host ion-header ion-toolbar ion-title h1{font-size:14px;margin:0 0 4px}:host .ionic_datepicker_modal_content .dp-month-year-container ion-col{display:flex;justify-content:center;align-items:center}:host .ionic_datepicker_modal_content .dp-month-year-container ion-col ion-grid{width:100%}:host .ionic_datepicker_modal_content .dp-month-year-container ion-col ion-grid .dp-select-month-year{border-bottom:1.5px solid;border-bottom-color:var(--ion-color-primary)}:host .ionic_datepicker_modal_content .dp-month-year-container ion-col ion-grid .dp-select-month-year .dp-buttons{width:100%;height:40px;margin:0;padding:0;color:var(--ion-color-primary);--background:transparent;--box-shadow:none}:host .ionic_datepicker_modal_content .dp-month-year-container ion-col ion-grid .dp-select-month-year .dp-buttons.activated{--background-activated:transparent;--color-activated:var(--ion-color-primary)}:host .ionic_datepicker_modal_content .dp-month-year-container ion-col ion-grid .dp-select-month-year .dp-down-arrow{position:absolute;width:16px;right:0;top:10px;color:var(--ion-color-primary)}:host .ionic_datepicker_modal_content .dp-month-year-container .dp-left-right-arrow ion-button{--background:transparent;--box-shadow:0;color:var(--ion-color-primary)}:host .ionic_datepicker_modal_content .dp-month-year-container .dp-left-right-arrow ion-button:focus{outline:0}:host .ionic_datepicker_modal_content .dp-month-year-container .dp-left-right-arrow ion-button.activated{--ion-color-primary-shade:transparent;--ion-color-primary-contrast:var(--ion-color-primary-tint)}:host .ionic_datepicker_modal_content .dp-weeks-container{margin:8px 0}:host .ionic_datepicker_modal_content .dp-weeks-container .dp-weeks-name ion-col{display:flex;justify-content:center}:host .ionic_datepicker_modal_content .dp-weeks-container .dp-weeks-name ion-col .weeks{width:14%;display:flex;justify-content:center;font-weight:700}:host .ionic_datepicker_modal_content .dp-weeks-container .dp-days-list ion-col{display:flex;justify-content:center;padding:10px;cursor:pointer}:host .ionic_datepicker_modal_content .dp-weeks-container .dp-days-list ion-col .days{width:14%;display:flex;justify-content:center}:host .ionic_datepicker_modal_content .dp-selecteddate{background:var(--ion-color-primary);color:var(--ion-color-primary-contrast);border-radius:4px;font-weight:500}:host .ionic_datepicker_modal_content .dp-today{border-radius:4px;font-weight:500;border:1px solid;border-color:var(--ion-color-primary)}:host .ionic_datepicker_modal_content .dp-month-year-scroll-container{position:absolute;top:0;bottom:0;left:0;right:0;margin:0;overflow-y:scroll}:host .ionic_datepicker_modal_content .dp-month-year-scroll-container ion-item{--padding-start:0;--inner-padding-end:0;--inner-border-width:0}:host .ionic_datepicker_modal_content .dp-month-year-scroll-container ion-item ion-label{text-align:center;margin:0;font-size:16px}:host .ionic_datepicker_modal_content .dp-month-year-scroll-container ion-item ion-label.dp-selected{color:var(--ion-color-primary);font-size:20px;font-weight:500}:host .disabled{color:#aaa}:host .dp-virual-scroller-show{transition:opacity .3s ease-in;opacity:1;visibility:visible}:host .dp-virual-scroller-hide{opacity:0;visibility:hidden;height:auto}:host ion-footer{height:55px}:host ion-footer ion-toolbar{height:100%;--border-width:0;--padding-top:0px;--padding-bottom:0px;--padding-start:0px;--padding-end:0px}:host ion-footer ion-toolbar .toolbar-container{height:100%}:host ion-footer ion-toolbar .dp-btn-set-close-in-reverse{flex-direction:row-reverse}:host ion-footer ion-toolbar ion-button{--border-radius:0;height:55px;margin:0}:host ion-footer ion-toolbar ion-button:focus{outline:0}:host ion-footer ion-toolbar ion-button.activated{--background-activated:var(--ion-color-primary-tint);--color-activated:var(--ion-color-primary-contrast)}\"]\n            }] }\n];\n/** @nocollapse */\nIonic4DatepickerModalComponent.ctorParameters = () => [\n    { type: NavParams },\n    { type: ModalController },\n    { type: Ionic4DatepickerService }\n];\nIonic4DatepickerModalComponent.propDecorators = {\n    content: [{ type: ViewChild, args: [IonContent,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ionic4-datepicker.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst noop = (/**\n * @return {?}\n */\n() => {\n});\n/** @type {?} */\nconst CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => Ionic4DatepickerComponent)),\n    multi: true\n};\nclass Ionic4DatepickerComponent {\n    /**\n     * @param {?} modalCtrl\n     * @param {?} el\n     * @param {?} renderer2\n     */\n    constructor(modalCtrl, el, renderer2) {\n        this.modalCtrl = modalCtrl;\n        this.el = el;\n        this.renderer2 = renderer2;\n        this.selectedDate = {};\n        this.innerValue = '';\n        // Placeholders for the callbacks which are later provided\n        // by the Control Value Accessor\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.inputDateConfig.clearButton !== false) {\n            this.closeIcon = document.createElement('ion-icon');\n            this.closeIcon.name = 'close-circle';\n            this.closeIcon.className = 'clearButton';\n            this.closeIcon.style.position = 'absolute';\n            this.closeIcon.style.right = '8px';\n            this.closeIcon.style.bottom = '0px';\n            this.closeIcon.style.fontSize = '18px';\n            this.closeIcon.style.color = '#A9A9A9';\n            this.closeIcon.style.zIndex = '5';\n            if (this.el.nativeElement.parentNode.nodeName === 'ION-ITEM') {\n                this.closeIcon.style.bottom = '30%';\n            }\n            this.el.nativeElement.setAttribute('style', 'position: relative; width: 100%;');\n            this.el.nativeElement.appendChild(this.closeIcon);\n            this.renderer2.listen(this.closeIcon, 'click', (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Do something with 'event'\n                // console.log('button clicks');\n                this.selectedDate = new Date();\n                this.value = '';\n            }));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    onChangeValue(value) {\n        // console.log('onChangeValue =>' , value);\n        if (this.inputDateConfig.clearButton !== false) {\n            if (!value) {\n                this.closeIcon.style.visibility = 'hidden';\n            }\n            else {\n                this.closeIcon.style.visibility = 'visible';\n            }\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    openDatePicker(value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // console.log('openDatePicker');\n            if (value) {\n                this.selectedDate.date = value;\n            }\n            /** @type {?} */\n            const datePickerModal = yield this.modalCtrl.create({\n                component: Ionic4DatepickerModalComponent,\n                cssClass: 'li-ionic4-datePicker',\n                componentProps: { 'objConfig': this.inputDateConfig, 'selectedDate': this.selectedDate.date }\n            });\n            yield datePickerModal.present();\n            datePickerModal.onDidDismiss()\n                .then((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                // console.log(data);\n                if (data.data && data.data.date && data.data.date !== 'Invalid date') {\n                    this.selectedDate.date = data.data.date;\n                    this.value = data.data.date;\n                }\n            }));\n        });\n    }\n    // get accessor\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this.innerValue;\n    }\n    // set accessor including call the onchange callback\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this.innerValue) {\n            this.innerValue = v;\n            this.onChangeCallback(v);\n        }\n        this.onChangeValue(v);\n    }\n    // Set touched on blur\n    /**\n     * @return {?}\n     */\n    onBlur() {\n        this.onTouchedCallback();\n    }\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n        this.onChangeValue(value);\n    }\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    // From ControlValueAccessor interface\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n}\nIonic4DatepickerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'li-ionic4-datepicker',\n                template: \"<input type=\\\"text\\\" class=\\\"li-dp-input\\\" (focus)=\\\"$event.preventDefault()\\\" (click)=\\\"openDatePicker(value)\\\" readonly\\n    [(ngModel)]=\\\"value\\\" start />\",\n                providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n                styles: [\":host input{font-size:16px;margin:6px 0;border:0;border-bottom:1px solid #ccc;width:100%;padding:12px}@media (min-width:768px){:host input{font-size:18px}}:host input.has-focus,:host input:focus{outline:0;box-shadow:unset}\"]\n            }] }\n];\n/** @nocollapse */\nIonic4DatepickerComponent.ctorParameters = () => [\n    { type: ModalController },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nIonic4DatepickerComponent.propDecorators = {\n    inputDateConfig: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/li-ionic4-datepicker.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiIonic4DatepickerDirective {\n    /**\n     * @param {?} modalCtrl\n     * @param {?} ngModel\n     * @param {?} control\n     * @param {?} el\n     * @param {?} renderer2\n     * @param {?} datePickerService\n     */\n    constructor(modalCtrl, ngModel, control, el, renderer2, datePickerService) {\n        this.modalCtrl = modalCtrl;\n        this.ngModel = ngModel;\n        this.control = control;\n        this.el = el;\n        this.renderer2 = renderer2;\n        this.datePickerService = datePickerService;\n        this.selectedDate = {};\n        this.isModalOpen = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // console.log('config.yearInAscending : ' + this.inputDateConfig.yearInAscending);\n        if (this.inputDateConfig.clearButton !== false) {\n            this.closeIcon = document.createElement('ion-icon');\n            this.closeIcon.name = 'close-circle';\n            this.closeIcon.className = 'clearButton';\n            this.closeIcon.style.position = 'absolute';\n            this.closeIcon.style.right = '8px';\n            this.closeIcon.style.bottom = '30%';\n            this.closeIcon.style.fontSize = '18px';\n            this.closeIcon.style.color = '#A9A9A9';\n            this.closeIcon.style.zIndex = '5';\n            if (this.el.nativeElement.parentNode.nodeName === 'ION-ITEM') {\n                this.closeIcon.style.bottom = '12px';\n            }\n            this.el.nativeElement.parentNode.appendChild(this.closeIcon);\n            this.renderer2.listen(this.closeIcon, 'click', (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Do something with 'event'\n                // console.log('button clicks');\n                this.selectedDate.date = new Date();\n                this.control.control.setValue('');\n                this.ngModel.update.emit('');\n            }));\n        }\n        /** @type {?} */\n        const self = this;\n        this.ngModel.valueChanges.subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            // console.log('ngModel value =>', value);\n            self.selectedDate.date = value;\n            if (this.inputDateConfig.clearButton !== false) {\n                if (!value) {\n                    this.closeIcon.style.visibility = 'hidden';\n                }\n                else {\n                    this.closeIcon.style.visibility = 'visible';\n                }\n            }\n        }));\n        this.control.control.valueChanges.subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            // console.log('formcontrol value =>', value);\n            self.selectedDate.date = value;\n            if (this.inputDateConfig.clearButton !== false) {\n                if (!value) {\n                    this.closeIcon.style.visibility = 'hidden';\n                }\n                else {\n                    this.closeIcon.style.visibility = 'visible';\n                }\n            }\n        }));\n        if (this.control.control.value) {\n            this.selectedDate.date = this.control.control.value;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onFocus() {\n        if (this.datePickerService.isModalOpen) {\n            return;\n        }\n        this.openDatePicker();\n    }\n    /**\n     * @return {?}\n     */\n    openDatePicker() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // console.log('openDatePicker');\n            // console.log('openDatePicker');\n            /** @type {?} */\n            const datePickerModal = yield this.modalCtrl.create({\n                component: Ionic4DatepickerModalComponent,\n                cssClass: 'li-ionic4-datePicker',\n                componentProps: { 'objConfig': this.inputDateConfig, 'selectedDate': this.selectedDate.date }\n            });\n            yield datePickerModal.present();\n            datePickerModal.onDidDismiss()\n                .then((/**\n             * @param {?} data\n             * @return {?}\n             */\n            (data) => {\n                if (data.data && data.data.date && data.data.date !== 'Invalid date') {\n                    this.selectedDate.date = data.data.date;\n                    this.control.control.setValue(data.data.date);\n                    this.ngModel.update.emit(data.data.date);\n                }\n            }));\n        });\n    }\n}\nLiIonic4DatepickerDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[liIonic4Datepicker]',\n                exportAs: 'liIonic4Datepicker',\n                providers: [NgModel],\n            },] }\n];\n/** @nocollapse */\nLiIonic4DatepickerDirective.ctorParameters = () => [\n    { type: ModalController },\n    { type: NgModel },\n    { type: NgControl },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Ionic4DatepickerService }\n];\nLiIonic4DatepickerDirective.propDecorators = {\n    inputDateConfig: [{ type: Input, args: ['liIonic4Datepicker',] }],\n    onFocus: [{ type: HostListener, args: ['ionFocus',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ionic4-datepicker.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Ionic4DatepickerModule {\n}\nIonic4DatepickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    IonicModule\n                ],\n                declarations: [\n                    Ionic4DatepickerComponent,\n                    LiIonic4DatepickerDirective,\n                    Ionic4DatepickerModalComponent\n                ],\n                exports: [\n                    Ionic4DatepickerComponent,\n                    LiIonic4DatepickerDirective,\n                    Ionic4DatepickerModalComponent,\n                    CommonModule,\n                    FormsModule\n                ],\n                entryComponents: [\n                    // Ionic4DatepickerComponent,\n                    Ionic4DatepickerModalComponent\n                ],\n                providers: []\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: logisticinfotech-ionic4-datepicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Ionic4DatepickerService, CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR, Ionic4DatepickerComponent, Ionic4DatepickerModule, Ionic4DatepickerModalComponent, LiIonic4DatepickerDirective as ɵa };\n\n//# sourceMappingURL=logisticinfotech-ionic4-datepicker.js.map","<ion-header>\n  <ion-toolbar (click)=\"changeToDateList()\">\n    <ion-title>\n      <h1 *ngIf=\"mainObj?.titleLabel\">{{mainObj?.titleLabel}}</h1>\n      {{selectedDateString}}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content forceOverscroll=\"false\" class=\"ionic_datepicker_modal_content ion-no-padding\">\n  <ion-grid class=\"dp-month-year-container ion-no-padding\"\n    [ngClass]=\"isMonthYearSelectorOpen ? 'dp-virual-scroller-hide' : 'dp-virual-scroller-show'\">\n    <ion-row>\n      <ion-col size=\"1.5\" class=\"dp-left-right-arrow\" (click)=\"prevMonth()\">\n        <ion-button [ngClass]=\"{'pointer_events_none':((firstDayEpoch - 86400000) < fromDate)}\">\n          <ion-icon *ngIf=\"!mainObj?.arrowNextPrev?.prevArrowSrc\" name=\"arrow-back\"></ion-icon>\n          <ion-icon *ngIf=\"mainObj?.arrowNextPrev?.prevArrowSrc\" src=\"{{mainObj?.arrowNextPrev?.prevArrowSrc}}\"></ion-icon>\n        </ion-button>\n      </ion-col>\n      <ion-col size=\"9\">\n        <ion-grid>\n          <ion-row>\n            <ion-col class=\"dp-select-month-year ion-no-padding\" size=\"5.5\" (click)=\"selectMonthYear(true)\">\n              <ion-button class=\"dp-buttons\">\n                {{ data.currentMonth }}\n                <ion-icon name=\"md-arrow-dropdown\" class=\"dp-down-arrow\"></ion-icon>\n              </ion-button>\n            </ion-col>\n            <ion-col size=\"1\"></ion-col>\n            <ion-col class=\"dp-select-month-year ion-no-padding\" size=\"5.5\" (click)=\"selectMonthYear(false)\">\n              <ion-button class=\"dp-buttons\">\n                {{ data.currentYear }}\n                <ion-icon name=\"md-arrow-dropdown\" class=\"dp-down-arrow\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-col>\n      <ion-col size=\"1.5\" class=\"dp-left-right-arrow\" (click)=\"nextMonth()\">\n        <ion-button [ngClass]=\"{'pointer_events_none':((lastDayEpoch + 86400000)> toDate)}\">\n          <ion-icon *ngIf=\"!mainObj?.arrowNextPrev?.nextArrowSrc\" name=\"arrow-forward\"></ion-icon>\n          <ion-icon *ngIf=\"mainObj?.arrowNextPrev?.nextArrowSrc\" src=\"{{mainObj?.arrowNextPrev?.nextArrowSrc}}\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-grid class=\"dp-weeks-container\" *ngIf=\"daysList\" [ngClass]=\"isMonthYearSelectorOpen ? 'dp-virual-scroller-hide' : 'dp-virual-scroller-show'\">\n          <ion-row class=\" dp-weeks-name\">\n            <ion-col *ngFor=\"let weekName of mainObj?.weeksList; let i = index\">\n              <!-- <div class=\"weeks\">{{weekName}} {{i}}</div> -->\n              <div class=\"weeks\" *ngIf=\"mainObj?.mondayFirst\"\n              [style.color]=\"mainObj?.isSundayHighlighted && i === 6 ? mainObj?.isSundayHighlighted.fontColor : ''\">\n               {{weekName}}</div>\n              <div class=\"weeks\" *ngIf=\"!mainObj?.mondayFirst\"\n              [style.color]=\"mainObj?.isSundayHighlighted && i === 0 ? mainObj?.isSundayHighlighted.fontColor : ''\">\n               {{weekName}}</div>\n            </ion-col>\n          </ion-row>\n          <ion-row *ngFor=\"let row of rows;\" class=\"dp-days-list\">\n            <ion-col *ngFor=\"let col of cols; let i = index ;\" (click)=\"dateSelected(daysList[row + i])\"\n              [style.background-color]=\"(daysList[row + i]?.color) ? (daysList[row + i]?.color) : ''\"\n              [style.border-radius]=\"(daysList[row + i]?.color) ? '4px' : ''\" class=\"ion-no-padding\" [ngClass]=\"{\n                'dp-selecteddate': (daysList[row + i]?.epoch === selctedDateEpoch),\n                'dp-today' : (daysList[row + i]?.epoch == today),\n                'disabled' : (daysList[row + i]?.disabled)}\">\n              <div class=\"days\" [style.color]=\"(daysList[row + i]?.fontColor) ? (daysList[row + i]?.fontColor) : ''\">\n                {{daysList[row + col]?.date}}\n              </div>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  <ion-list class=\"dp-month-year-scroll-container\" [ngClass]=\"isMonthYearSelectorOpen ? 'dp-virual-scroller-show' : 'dp-virual-scroller-hide'\">\n    <ion-item *ngFor=\"let monthYear of scrollingMonthOrYearArray;let i=index;\" id=\"{{i +'list'}}\" (click)=\"onChangeMonthYear(monthYear)\">\n      <ion-label [ngClass]=\"selectedYearOrMonth === monthYear ? 'dp-selected' : ''\">{{ monthYear }}</ion-label>\n    </ion-item>\n  </ion-list>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <ion-grid class=\"ion-no-padding\">\n      <ion-row class=\"ion-no-padding\" [ngClass]=\"mainObj?.btnCloseSetInReverse ? 'dp-btn-set-close-in-reverse' : ''\">\n        <ion-col class=\"ion-no-padding\">\n          <ion-button class=\"ion-button\" expand=\"{{mainObj?.btnProperties?.expand}}\"\n            fill=\"{{mainObj?.btnProperties?.fill}}\" size=\"{{mainObj?.btnProperties?.size}}\"\n            color=\"{{mainObj?.btnProperties?.color}}\" disabled=\"{{mainObj?.btnProperties?.disabled}}\"\n            strong=\"{{mainObj?.btnProperties?.strong}}\" (click)=\"closeIonicDatePickerModal()\">\n            {{mainObj?.closeLabel}}\n          </ion-button>\n        </ion-col>\n        <ion-col class=\"ion-no-padding\" *ngIf=\"mainObj?.showTodayButton\">\n          <ion-button class=\"ion-button\" expand=\"{{mainObj?.btnProperties?.expand}}\"\n            fill=\"{{mainObj?.btnProperties?.fill}}\" size=\"{{mainObj?.btnProperties?.size}}\"\n            color=\"{{mainObj?.btnProperties?.color}}\" disabled=\"{{mainObj?.btnProperties?.disabled}}\"\n            strong=\"{{mainObj?.btnProperties?.strong}}\" (click)=\"setIonicDatePickerTodayDate()\">\n            {{mainObj?.todayLabel}}\n          </ion-button>\n        </ion-col>\n        <ion-col class=\"ion-no-padding\" *ngIf=\"!mainObj?.closeOnSelect\">\n          <ion-button class=\"ion-button\" expand=\"{{mainObj?.btnProperties?.expand}}\"\n            fill=\"{{mainObj?.btnProperties?.fill}}\" size=\"{{mainObj?.btnProperties?.size}}\"\n            color=\"{{mainObj?.btnProperties?.color}}\"\n            disabled=\"{{mainObj?.btnProperties?.disabled || !isSelectedDateFound}}\"\n            strong=\"{{mainObj?.btnProperties?.strong}}\" (click)=\"setIonicDatePickerDate()\">\n            {{mainObj?.setLabel}}\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-toolbar>\n</ion-footer>"]}