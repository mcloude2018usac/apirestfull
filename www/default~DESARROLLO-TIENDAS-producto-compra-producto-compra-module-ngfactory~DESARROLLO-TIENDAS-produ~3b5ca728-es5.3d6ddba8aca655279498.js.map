{"version":3,"sources":["webpack:///src/app/DESARROLLO/modals/my-modalcard/my-modalcard.page.ts","webpack:///src/app/DESARROLLO/modals/my-modalcard/my-modalcard.module.ts","webpack:///src/app/DESARROLLO/modals/my-modalcard/my-modalcard.page.html"],"names":["MyModalcardPage","alertController","translateService","modalController","navParams","authenticationService","modalCtrl","cart","variables","userinfo","sienvio","vzona","seguro","this","dismiss","get","getcopiauser","subscribe","value","getCart","Form","required","controls","setValue","data","nombre","direccion","telefono","totalenvio2","moneda","product","decreaseProduct","addProduct","removeProduct","selectedValue","detail","arr","split","tt","reduce","i","j","price","amount","tt2","Number","alert","create","header","message","getTotal2","buttons","text","cssClass","handler","blah","cad","length","push","idproveedor","id","name","subtotal","rate","options","idempresa","_id","total","tipopago","idusuario","estado","deliveryasignado","dproductos","direccion2a","nombre2","direccion2","nit","totalenvio","totalproductos","departamento","municipio","zona","pagaracambio","bitacora","idafiliado","email","permiso","accion","createReg","then","result","valid","presentAlert","borrarProduct","err","error","present","op","op2","presentingElement","uub","swipeToClose","backdropDismiss","animated","getTop","modal","record","uubx","component","componentProps","onWillDismiss","la","lo","comp","catalogot","frmt","labelx","sigraba","doblex","doblexxx","grabax","doble","record2","frm","idllave","titlex","datax","depto","muni","getReg","MyModalcardPageModule"],"mappings":"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","file":"x","sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { AlertController , ModalController , NavParams} from '@ionic/angular';\nimport { Product } from '../../services/Authentication.service';\nimport { MyModalPage  } from '../my-modal/my-modal.page';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { MyModalComboPage } from '../../modals/my-modal-combo/my-modal-combo.page';\n\n\n@Component({\n  selector: 'app-my-modalcard',\n  templateUrl: './my-modalcard.page.html',\n  styleUrls: ['./my-modalcard.page.scss'],\n})\nexport class MyModalcardPage implements OnInit {\n\n  Form: FormGroup;\n  cart: Product[] = [];\n  variables: any = [];\n  userinfo: any = [];\n  nombre: any;\n  totalenvio2: any;\n  sienvio: any = false;\n  moneda: any;\n  public vzona: any = [];\n  seguro = '';\n\n  constructor(    public alertController: AlertController,  public translateService: TranslateService\n    ,  private modalController: ModalController,   private navParams: NavParams\n    , private authenticationService: AuthenticationService, private modalCtrl: ModalController) { }\n  dismissModal() {\n    this.modalCtrl.dismiss('close');\n  }\n\n\n  ngOnInit() {\n\n    this.variables = this.navParams.get('variables');\n\n    this.sienvio = this.navParams.get('sienvio');\n\n    if (this.sienvio === undefined || this.sienvio==='false') {\n      this.sienvio = false;\n    }\n    else\n    {\n      this.sienvio=true\n    }\n\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\n\n    this.cart = this.authenticationService.getCart();\n    this.Form = new FormGroup({\n\n       'direccion': new FormControl('', Validators.required),\n\n       'nombre': new FormControl('', Validators.required),\n       'telefono': new FormControl('', Validators.required),\n       'tpago': new FormControl('', Validators.required),\n       'total': new FormControl('', Validators.required),\n       'direccion2a': new FormControl(''),\n       'direccion2': new FormControl(''),\n       'nombre2': new FormControl(''),\n       'nit': new FormControl(''),\n       'totalenvio': new FormControl(''),\n       'departamento': new FormControl('', Validators.required),\n       'municipio': new FormControl('', Validators.required),\n       'zona': new FormControl('', Validators.required),\n       'pagaracambio': new FormControl('')\n\n\n    });\n    this.Form.controls['nombre'].setValue(this.navParams.data.nombre);\n    this.Form.controls['direccion'].setValue(this.navParams.data.direccion);\n    this.Form.controls['telefono'].setValue(this.navParams.data.telefono);\n    this.Form.controls['tpago'].setValue('Efectivo');\n    this.Form.controls['direccion2'].setValue('Ciudad');\n    this.Form.controls['nit'].setValue('CF');\n    this.Form.controls['nombre2'].setValue(this.navParams.data.nombre);\n    this.Form.controls['totalenvio'].setValue('0');\n    this.totalenvio2 = '0';\n\nif (this.sienvio === false) {\n \n  this.Form.controls['municipio'].setValue('na');\n  this.Form.controls['departamento'].setValue('na');\n  this.Form.controls['zona'].setValue('0');\n}\n\n    this.moneda = this.navParams.data.moneda;\n\n\n  }\n\n  decreaseCartItem(product) {\n    this.authenticationService.decreaseProduct(product);\n  }\n\n  increaseCartItem(product) {\n    this.authenticationService.addProduct(product);\n  }\n\n  removeCartItem(product) {\n    this.authenticationService.removeProduct(product);\n  }\n\n\n\n\n  onSelectcategoria(selectedValue: any) {\n    if (selectedValue.detail.value) {   const arr = (selectedValue.detail.value).split('°');\n        this.Form.controls['totalenvio'].setValue(arr[1]);\n        this.totalenvio2 = arr[1];\n    } else {\n      this.Form.controls['totalenvio'].setValue('0');\n      this.totalenvio2 = '0';\n\n\n    }\n\n\n  }\n\n  getTotal() {\n\n    const tt = this.cart.reduce((i, j) => i + j.price * j.amount, 0);\n    if (tt !== 0) {   this.Form.controls['total'].setValue(tt);\n   } else {\n      this.Form.controls['total'].setValue('');\n    }\n\n    return tt;\n  }\n\n  getTotal2() {\n\n    const tt = this.cart.reduce((i, j) => i + j.price * j.amount, 0);\n    if (tt !== 0) {   this.Form.controls['total'].setValue(tt);\n   } else {\n      this.Form.controls['total'].setValue('');\n    }\n\n    let tt2 = this.Form.controls['totalenvio'].value;\n\n    return Number(tt) + Number( tt2);\n  }\n\n  close() {\n    this.modalCtrl.dismiss();\n  }\n\n  async checkout() {\n\n    const alert = await this.alertController.create({\n      header: 'Gracias ' + this.Form.controls['nombre'].value ,\n      message: 'El monto de sus compra es ' +  this.getTotal2() + ' <br>' + this.seguro,\n      buttons: [\n        {\n          text: 'No',\n         cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n           text: 'Si',\n           handler: () => {\n\n\n\n    const cad: any = [];\n    for (let i = 0; i < this.cart.length; i++) {\n      cad.push({\n        idproveedor: this.cart[i].idproveedor,\n        id: this.cart[i].id,\n        name: this.cart[i].name,\n        price: this.cart[i].price,\n        amount: this.cart[i].amount,\n        subtotal: (this.cart[i].price * this.cart[i].amount),\n        rate: this.cart[i].rate\n      });\n\n    }\n\n    const   options: any\t     = {\n      idempresa: this.userinfo[0].idempresa._id,\n      nombre: this.Form.controls['nombre'].value,\n      direccion  : this.Form.controls['direccion'].value,\n      telefono  : this.Form.controls['telefono'].value,\n      total  : this.getTotal2(),\n      tipopago  : this.Form.controls['tpago'].value,\n\n      idusuario  :  this.userinfo[0]._id,\n      estado  : 'Abiertas',\n      deliveryasignado  : '',\n      dproductos  : cad,\n\n\n direccion2a\t\t: this.Form.controls['direccion2a'].value,\n nombre2\t\t: this.Form.controls['nombre2'].value,\n direccion2\t\t: this.Form.controls['direccion2'].value,\n nit\t\t: this.Form.controls['nit'].value,\n totalenvio\t\t: this.Form.controls['totalenvio'].value,\n totalproductos  : this.Form.controls['total'].value,\n departamento: this.Form.controls['departamento'].value,\n municipio: this.Form.controls['municipio'].value,\n zona: this.Form.controls['zona'].value,\n pagaracambio: this.Form.controls['pagaracambio'].value,\n\n\n      bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n      email: this.userinfo[0].email , permiso : 'Crear', accion: 'Creacion de pedido de compra'}\n};\n\n  if (options) {\n    this.authenticationService.createReg('', options, 'orden_compras').then((result) => {\n      if (!this.Form.valid) { return; }\n      this.authenticationService.presentAlert('Pedido creado con exito' , 'Gracias' , '');\n      this.authenticationService.borrarProduct();\n      this.modalCtrl.dismiss('close');\n  }, (err) => {\n    this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n  });\n\n  }\n\n           }\n         }\n       ]\n     });\n     await alert.present();\n\n\n\n  }\n  async dacomponente(op, op2) {\n    let uub = '';\n    if ( op === 'ubicacion') {uub = this.Form.controls['ubicacion'].value; }\n    const modal = await this.modalController.create({\n      component: MyModalPage,\n      swipeToClose: false,\n      backdropDismiss: false,\n     animated: true,\n      presentingElement: await this.modalController.getTop(),\n      componentProps:  { variables:  this.variables, record: null, userinfo: this.userinfo, uubx : uub}\n      // , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data === 'close' ) {     }      else      {\n\n// la  lo\n         if (op === 'direccion') {\n          this.Form.controls['direccion'].setValue(data.data.direccion);\n         } else {\n          this.Form.controls['ubicacion'].setValue(data.data.direccion + ' {' + data.data.la + '°' + data.data.lo + '}');\n\n         }\n\n\n\n        }\n    });\n    return await modal.present();\n\n  }\n\n  \nasync combodatoslimpia(comp)\n{\n  this.Form.controls[comp].setValue('');\n}\n\n  async combodatos( op ,  catalogot, frmt, comp, labelx, sigraba, doblex) {\n\n    let doblexxx = '';\n    if (doblex !== '') {\n    doblexxx =  this.Form.controls[doblex].value;\n    }\n      const modal = await this.modalController.create({\n        component: MyModalComboPage,   swipeToClose: false,     backdropDismiss: false,    animated: true,\n        presentingElement: await this.modalController.getTop(),\n        componentProps: {grabax: sigraba , variables:  this.variables, userinfo: this.userinfo, doble: doblexxx\n          ,  record2 : null , op: this.userinfo[0].idempresa._id + '-' + catalogot, frm: frmt,\n           idllave : '', titlex: 'Buscar ' + labelx}\n        // , cssClass: 'modal-fullscreen'\n      });\n      modal.onWillDismiss().then((data) => {\n        let datax: any = [];\n        datax = data;\nif (datax.data !==  'close')       {\n    if (datax.data) {this.Form.controls[comp].setValue(datax.data.nombre);\n\n\nconst depto = this.Form.controls['departamento'].value;\nconst muni = this.Form.controls['municipio'].value;\nif (depto !== '' && muni !== '') {\n  this.authenticationService.getReg('zona/' + depto + '/' +  this.userinfo[0].idempresa._id + '/' + muni, 'ubicacionentregas', 0).then((data) => {\n    this.vzona = data;\n    }, (err) => {    this.authenticationService.presentAlert(err.error , 'Precaución' , '');  });\n\n\n\n}\n\n\n        //  this.Form.controls[comp].id = datax.data._id\n        } else {        this.Form.controls[comp].setValue('');       }\n      }\n});\n      return await modal.present();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MyModalcardPage } from './my-modalcard.page';\nimport { AgmCoreModule } from '@agm/core';\nimport { environment } from '../../../../environments/environment';\nimport { MyModalPageModule } from '../../modals/my-modal/my-modal.module';\nimport { MyModalComboPageModule} from '../../modals/my-modal-combo/my-modal-combo.module';\n\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, MyModalComboPageModule , \n    IonicModule, ReactiveFormsModule, MyModalPageModule,  TranslateModule.forChild(),\n    AgmCoreModule.forRoot({\n      apiKey: environment.googleMapsAPIKey,\n      libraries: ['places']\n    })\n  ],\n  declarations: [MyModalcardPage],\n  entryComponents: [\n    MyModalcardPage\n  ],\n})\nexport class MyModalcardPageModule {}\n","<form class=\"create-user-form ion-page\" [formGroup]=\"Form\" >\n  <ion-header>\n    <ion-toolbar color=\"primary\">\n      <ion-buttons slot=\"end\">\n        <ion-button (click)=\"dismissModal()\">\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n      <ion-title>Realizar pedido</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content fullscreen>\n  \n  \n        <div class=\"ion-padding\">\n   \n            <ion-list>\n              <ion-item-divider color=\"secondary\">\n                <ion-label>\n                 Detalle del pedido\n                </ion-label>\n              </ion-item-divider>\n\n              \n     \n              <ion-item *ngFor=\"let p of cart\" class=\"ion-text-wrap\">\n                <ion-grid>\n                  <ion-row class=\"ion-align-items-center\">\n                    <ion-col size=\"2\" class=\"ion-align-self-center\">\n                      <ion-button color=\"medium\" fill=\"clear\" (click)=\"decreaseCartItem(p)\">\n                        <ion-icon name=\"remove-circle\" slot=\"icon-only\"></ion-icon>\n                      </ion-button>\n                    </ion-col>\n         \n                    <ion-col size=\"1\" class=\"ion-align-self-center\">\n                      {{ p.amount }}\n                    </ion-col>\n         \n                    <ion-col size=\"2\" class=\"ion-align-self-center\">\n                      <ion-button color=\"medium\" fill=\"clear\" (click)=\"increaseCartItem(p)\">\n                        <ion-icon name=\"add-circle\" slot=\"icon-only\"></ion-icon>\n                      </ion-button>\n                    </ion-col>\n         \n                    <ion-col size=\"2\" offset=\"5\">\n                      <ion-button color=\"medium\" fill=\"clear\" (click)=\"removeCartItem(p)\">\n                        <ion-icon name=\"close-circle\" slot=\"icon-only\"></ion-icon>\n                      </ion-button>\n                    </ion-col>\n                  </ion-row>\n                  <ion-row>\n                    <ion-col size=\"9\">\n                      <b>{{ p.name }}</b>\n                    </ion-col>\n                    <ion-col size=\"3\" class=\"ion-text-end\">\n                      {{ p.amount * p.price | currency:moneda }}\n                    </ion-col>\n                  </ion-row>\n                </ion-grid>\n              </ion-item>\n              <ion-item>\n                <ion-grid>\n                  <ion-row>\n                    <ion-col size=\"9\">\n                   <strong>   Total productos:</strong>\n                    </ion-col>\n                    <ion-col size=\"3\" class=\"ion-text-end\">\n                     <strong> {{ getTotal() | currency:moneda }}</strong>\n                    </ion-col>\n                  </ion-row>\n                </ion-grid>\n              </ion-item>\n            </ion-list>\n  \n            <!--\n     DIRECCION DE ENTREGA\n  ¿Dónde quieres recibir el pedido?\n  HORA DE ENTREGA\n      Programado\n  METODO DE PAGO\n    Selecciona tarjeta\n      Tarjeta de crédito\n        NOMBRE DE LA TARJETA \n        NUMERO DE LA TARJETA\n        FECHA DE NACIMIENTO    CVC/CVV\n        PAIS\n      Pagar en efectivo\n  TELEFONO\n  \n                    \n  \n            -->\n            <section class=\"user-details-fields fields-section\">\n              <ion-list class=\"inputs-list\" lines=\"full\">\n                <ion-input inputMode=\"text\" [hidden]='true' clearInput=\"true\" formControlName=\"total\" required></ion-input> \n\n                <div class=\"error-container\">\n                  <div class=\"error-message\" *ngIf=\"Form.get('total').hasError('required') && (Form.get('total').dirty || Form.get('total').touched)\">\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\n                    <span>Ingrese un producto</span>\n                  </div>\n                   </div>\n\n                   <ion-item-divider color=\"secondary\">\n                    <ion-label>\n                      Datos de envio\n                    </ion-label>\n                  </ion-item-divider>\n\n                   <ion-item class=\"input-item\">\n                    <ion-label position=\"floating\" >Nombre de entrega<ion-text color=\"danger\">*</ion-text></ion-label>\n                    <ion-input inputMode=\"text\" clearInput=\"true\" formControlName=\"nombre\" required></ion-input> \n                  \n                </ion-item>\n                <div class=\"error-container\">\n                  <div class=\"error-message\" *ngIf=\"Form.get('nombre').hasError('required') && (Form.get('nombre').dirty || Form.get('nombre').touched)\">\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\n                    <span>Ingrese una nombre valido</span>\n                  </div>\n                   </div>\n      \n                \n            <ion-item class=\"input-item\">\n              <ion-label position=\"floating\" >Dirección de entrega <ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-textarea  rows=\"4\" inputMode=\"text\" clearInput=\"true\" formControlName=\"direccion\" required></ion-textarea> \n              <ion-buttons slot=\"end\">\n\n                <ion-button title='Seleccione ubicación' (click)=\"dacomponente('direccion','read')\">\n               \n                  <ion-icon slot=\"icon-only\" name=\"map-outline\"></ion-icon>\n                </ion-button>\n               </ion-buttons>\n          </ion-item>\n  \n          <div class=\"error-container\">\n            <div class=\"error-message\" *ngIf=\"Form.get('direccion').hasError('required') && (Form.get('direccion').dirty || Form.get('direccion').touched)\">\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n              <span>Ingrese una dirección valida</span>\n            </div>\n             </div>\n             \n                      \n            <ion-item class=\"input-item\">\n              <ion-label position=\"floating\" >Comentarios/ instrucciones de envio</ion-label>\n              <ion-textarea  rows=\"4\" inputMode=\"text\" clearInput=\"true\" formControlName=\"direccion2a\" ></ion-textarea> \n              \n          </ion-item>\n\n          <ion-item  [hidden]=\"!sienvio\"   class=\"input-item\">\n            <ion-label  >Departamento<ion-text color=\"danger\">*</ion-text></ion-label>\n                    <ion-input   [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-departamento-plantilla','frmcats','departamento','Departamento','nograba','')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"departamento\" required></ion-input>\n                           <ion-buttons slot=\"end\">\n                            <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('departamento')\">\n                              <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                            </ion-button>\n                            <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-departamento-plantilla','frmcats','departamento','Departamento','nograba','')\">\n                                    <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                            </ion-button>\n                           </ion-buttons>\n   </ion-item>\n\n   <ion-item  [hidden]=\"!sienvio\"   class=\"input-item\">\n    <ion-label  >Municipio<ion-text color=\"danger\">*</ion-text></ion-label>\n            <ion-input   [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-municipio-plantilla','frmcats','municipio','Municipio','nograba','municipio')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"municipio\" required></ion-input>\n                   <ion-buttons slot=\"end\">\n                    <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('municipio')\">\n                      <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                    </ion-button>\n                    <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-municipio-plantilla','frmcats','municipio','Municipio','nograba','municipio')\">\n                            <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                    </ion-button>\n                   </ion-buttons>\n</ion-item>\n\n\n\n\n\n<ion-item  [hidden]=\"!sienvio\"  class=\"input-item\">\n  <ion-label  >Zona  <ion-text color=\"danger\">*</ion-text></ion-label>\n    <ion-select  (ionChange)=\"onSelectcategoria($event)\" placeholder=\"{{ 'SELECTVALORM' | translate }}\" formControlName=\"zona\">\n      <ion-select-option style=\"white-space: pre-wrap !important;\"  *ngFor=\"let item of vzona\" [value]=\"item.nombre + '°' + item.costo\">{{item.nombre + ' envio: ' + moneda + item.costo }}</ion-select-option>\n    </ion-select>\n  </ion-item>\n\n  \n\n  <ion-input type=\"number\"  [hidden]=\"true\"  readonly  formControlName=\"totalenvio\" required></ion-input>\n  \n\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"9\">\n     <strong>   Total a envio:</strong>\n      </ion-col>\n      <ion-col size=\"3\" class=\"ion-text-end\">\n       <strong> {{ totalenvio2 | currency:moneda }}</strong>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  \n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"9\">\n     <strong>   Total a productos:</strong>\n      </ion-col>\n      <ion-col size=\"3\" class=\"ion-text-end\">\n       <strong> {{ getTotal() | currency:moneda }}</strong>\n      </ion-col>\n    </ion-row>\n  </ion-grid>  \n<ion-grid>\n  <ion-row>\n    <ion-col size=\"9\">\n   <strong>   Total a cancelar:</strong>\n    </ion-col>\n    <ion-col size=\"3\" class=\"ion-text-end\">\n     <strong> {{ getTotal2() | currency:moneda }}</strong>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n\n          <ion-item class=\"input-item\">\n            <ion-label  position=\"floating\">No. Teléfono<ion-text color=\"danger\">*</ion-text></ion-label>\n            <ion-input type=\"number\"    formControlName=\"telefono\" required></ion-input>\n          </ion-item>\n\n          <div class=\"error-container\">\n            <div class=\"error-message\" *ngIf=\"Form.get('telefono').hasError('required') && (Form.get('telefono').dirty || Form.get('telefono').touched)\">\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n              <span>Ingrese un No. teléfono valido</span>\n            </div>\n             </div>\n\n             <ion-item-divider color=\"secondary\">\n              <ion-label>\n                Datos de facturación\n              </ion-label>\n            </ion-item-divider>\n\n            <ion-item class=\"input-item\">\n              <ion-label position=\"floating\" >Nombre </ion-label>\n              <ion-input inputMode=\"text\" clearInput=\"true\" formControlName=\"nombre2\" ></ion-input> \n            \n          </ion-item>\n          <ion-item class=\"input-item\">\n            <ion-label position=\"floating\" >Dirección</ion-label>\n            <ion-input inputMode=\"text\" clearInput=\"true\" formControlName=\"direccion2\" ></ion-input> \n          \n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label position=\"floating\" >Nit</ion-label>\n          <ion-input inputMode=\"text\" clearInput=\"true\" formControlName=\"nit\" ></ion-input> \n        \n      </ion-item>\n\n      \n<ion-item class=\"input-item\">\n  <ion-label  position=\"floating\">Indica cuanto pagarás para envíar cambio con tu orden</ion-label>\n  <ion-input type=\"number\"    formControlName=\"pagaracambio\" ></ion-input>\n</ion-item>\n\n          <ion-item class=\"input-item\">\n            <ion-label  position=\"floating\">Tipo pago<ion-text color=\"danger\">*</ion-text></ion-label>\n            <ion-select formControlName=\"tpago\">\n            <ion-select-option value=\"Efectivo\">Efectivo</ion-select-option>\n            <ion-select-option value=\"TotalPay\">TotalPay</ion-select-option>\n            \n            </ion-select>\n    </ion-item>\n    <div class=\"error-container\">\n      <div class=\"error-message\" *ngIf=\"Form.get('tpago').hasError('required') && (Form.get('tpago').dirty || Form.get('tpago').touched)\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon>\n        <span>Ingrese un tipo pago valido</span>\n      </div>\n       </div>\n<!--    ENCUESTA ***********************************************************-->\n<!--    ENCUESTA ***********************************************************-->\n<!--    ENCUESTA ***********************************************************-->\n<!--    ENCUESTA ***********************************************************-->\n\n\n\n        </ion-list>\n   </section>\n         \n            <ion-button expand=\"full\" [disabled]=\"!Form.valid\"  (click)=\"checkout()\">\n             CONFIRMAR PEDIDO\n            </ion-button>\n          </div>\n        \n  </ion-content>\n  </form>   "]}