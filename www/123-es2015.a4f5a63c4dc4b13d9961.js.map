{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-col_3.entry.js"],"names":["SIZE_TO_MEDIA","matchBreakpoint","breakpoint","undefined","window","matchMedia","matches","win","SUPPORTS_VARS","CSS","supports","BREAKPOINTS","Col","hostRef","this","property","matched","columns","charAt","toUpperCase","slice","getColumns","colSize","modifier","isRTL","calculatePosition","document","dir","mode","class","style","Object","assign","calculateOffset","calculatePull","calculatePush","calculateSize","Grid","fixed","Row"],"mappings":"+FAAA,4JAGA,MAAMA,EAAgB,CAClB,GAAM,mBACN,GAAM,qBACN,GAAM,qBACN,GAAM,qBACN,GAAM,uBAKJC,EAAmBC,QACFC,IAAfD,GAA2C,KAAfA,KAG5BE,OAAOC,YAEAD,OAAOC,WADKL,EAAcE,IACII,QAOvCC,EAAMH,OACNI,KAAmBD,EAAIE,KAAOF,EAAIE,IAAIC,UAAYH,EAAIE,IAAIC,SAAS,WACnEC,EAAc,CAAC,GAAI,KAAM,KAAM,KAAM,KAAM,MAC3CC,EAAM,MACR,YAAYC,GACR,YAAiBC,KAAMD,GAE3B,WACI,YAAYC,MAIhB,WAAWC,GACP,IAAIC,EACJ,IAAK,MAAMd,KAAcS,EAAa,CAClC,MAAML,EAAUL,EAAgBC,GAG1Be,EAAUH,KAAKC,EAAWb,EAAWgB,OAAO,GAAGC,cAAgBjB,EAAWkB,MAAM,IAClFd,QAAuBH,IAAZc,IACXD,EAAUC,GAKlB,OAAOD,EAEX,gBACI,MAAMC,EAAUH,KAAKO,WAAW,QAKhC,IAAKJ,GAAuB,KAAZA,EACZ,OAGJ,MAAMK,EAAuB,SAAZL,EACX,OAEAT,EAAgB,aAAaS,2CAGvBA,EAAU,GAAM,IAAO,IACnC,MAAO,CACH,KAAQ,OAAOK,IACf,MAAS,GAAGA,IACZ,YAAa,GAAGA,KAIxB,kBAAkBP,EAAUQ,GACxB,MAAMN,EAAUH,KAAKO,WAAWN,GAChC,GAAKE,EAWL,MAAO,CACH,CAACM,GAPUf,EAET,aAAaS,2CAGZA,EAAU,GAAKA,EAAU,GAAOA,EAAU,GAAK,IAAO,IAAM,QAKvE,gBAAgBO,GACZ,OAAOV,KAAKW,kBAAkB,SAAUD,EAAQ,eAAiB,eAErE,cAAcA,GACV,OAAOV,KAAKW,kBAAkB,OAAQD,EAAQ,OAAS,SAE3D,cAAcA,GACV,OAAOV,KAAKW,kBAAkB,OAAQD,EAAQ,QAAU,QAE5D,SACI,MAAMA,EAAyB,QAAjBE,SAASC,IACjBC,EAAO,YAAWd,MACxB,OAAQ,YAAE,IAAM,CAAEe,MAAO,CACjB,CAACD,IAAO,GACTE,MAAOC,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,GAAIlB,KAAKmB,gBAAgBT,IAASV,KAAKoB,cAAcV,IAASV,KAAKqB,cAAcX,IAASV,KAAKsB,kBAAoB,YAAE,OAAQ,SAG3MxB,EAAIkB,MAvFW,+/IAyFf,MAEMO,EAAO,MACT,YAAYxB,GACR,YAAiBC,KAAMD,GAIvBC,KAAKwB,OAAQ,EAEjB,SACI,MAAMV,EAAO,YAAWd,MACxB,OAAQ,YAAE,IAAM,CAAEe,MAAO,CACjB,CAACD,IAAO,EACR,aAAcd,KAAKwB,QAClB,YAAE,OAAQ,SAG3BD,EAAKP,MAlBW,yuJAoBhB,MAEMS,EAAM,MACR,YAAY1B,GACR,YAAiBC,KAAMD,GAE3B,SACI,OAAQ,YAAE,IAAM,CAAEgB,MAAO,YAAWf,OAAS,YAAE,OAAQ,SAG/DyB,EAAIT,MAVW","file":"x","sourcesContent":["import { r as registerInstance, i as forceUpdate, h, H as Host } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\n\nconst SIZE_TO_MEDIA = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n};\n// Check if the window matches the media query\n// at the breakpoint passed\n// e.g. matchBreakpoint('sm') => true if screen width exceeds 576px\nconst matchBreakpoint = (breakpoint) => {\n    if (breakpoint === undefined || breakpoint === '') {\n        return true;\n    }\n    if (window.matchMedia) {\n        const mediaQuery = SIZE_TO_MEDIA[breakpoint];\n        return window.matchMedia(mediaQuery).matches;\n    }\n    return false;\n};\n\nconst colCss = \":host{padding-left:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;width:100%;max-width:100%;min-height:1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px))}}@media (min-width: 576px){:host{padding-left:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 768px){:host{padding-left:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 992px){:host{padding-left:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 1200px){:host{padding-left:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px))}}}\";\n\nconst win = window;\nconst SUPPORTS_VARS = !!(win.CSS && win.CSS.supports && win.CSS.supports('--a: 0'));\nconst BREAKPOINTS = ['', 'xs', 'sm', 'md', 'lg', 'xl'];\nconst Col = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    onResize() {\n        forceUpdate(this);\n    }\n    // Loop through all of the breakpoints to see if the media query\n    // matches and grab the column value from the relevant prop if so\n    getColumns(property) {\n        let matched;\n        for (const breakpoint of BREAKPOINTS) {\n            const matches = matchBreakpoint(breakpoint);\n            // Grab the value of the property, if it exists and our\n            // media query matches we return the value\n            const columns = this[property + breakpoint.charAt(0).toUpperCase() + breakpoint.slice(1)];\n            if (matches && columns !== undefined) {\n                matched = columns;\n            }\n        }\n        // Return the last matched columns since the breakpoints\n        // increase in size and we want to return the largest match\n        return matched;\n    }\n    calculateSize() {\n        const columns = this.getColumns('size');\n        // If size wasn't set for any breakpoint\n        // or if the user set the size without a value\n        // it means we need to stick with the default and return\n        // e.g. <ion-col size-md>\n        if (!columns || columns === '') {\n            return;\n        }\n        // If the size is set to auto then don't calculate a size\n        const colSize = (columns === 'auto')\n            ? 'auto'\n            // If CSS supports variables we should use the grid columns var\n            : SUPPORTS_VARS ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\n                // Convert the columns to a percentage by dividing by the total number\n                // of columns (12) and then multiplying by 100\n                : ((columns / 12) * 100) + '%';\n        return {\n            'flex': `0 0 ${colSize}`,\n            'width': `${colSize}`,\n            'max-width': `${colSize}`\n        };\n    }\n    // Called by push, pull, and offset since they use the same calculations\n    calculatePosition(property, modifier) {\n        const columns = this.getColumns(property);\n        if (!columns) {\n            return;\n        }\n        // If the number of columns passed are greater than 0 and less than\n        // 12 we can position the column, else default to auto\n        const amount = SUPPORTS_VARS\n            // If CSS supports variables we should use the grid columns var\n            ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\n            // Convert the columns to a percentage by dividing by the total number\n            // of columns (12) and then multiplying by 100\n            : (columns > 0 && columns < 12) ? (columns / 12 * 100) + '%' : 'auto';\n        return {\n            [modifier]: amount\n        };\n    }\n    calculateOffset(isRTL) {\n        return this.calculatePosition('offset', isRTL ? 'margin-right' : 'margin-left');\n    }\n    calculatePull(isRTL) {\n        return this.calculatePosition('pull', isRTL ? 'left' : 'right');\n    }\n    calculatePush(isRTL) {\n        return this.calculatePosition('push', isRTL ? 'right' : 'left');\n    }\n    render() {\n        const isRTL = document.dir === 'rtl';\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true\n            }, style: Object.assign(Object.assign(Object.assign(Object.assign({}, this.calculateOffset(isRTL)), this.calculatePull(isRTL)), this.calculatePush(isRTL)), this.calculateSize()) }, h(\"slot\", null)));\n    }\n};\nCol.style = colCss;\n\nconst gridCss = \":host{padding-left:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));margin-left:auto;margin-right:auto;display:block;-ms-flex:1;flex:1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px))}}@media (min-width: 576px){:host{padding-left:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px))}}}@media (min-width: 768px){:host{padding-left:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px))}}}@media (min-width: 992px){:host{padding-left:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px))}}}@media (min-width: 1200px){:host{padding-left:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px))}}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.grid-fixed){width:var(--ion-grid-width-xs, var(--ion-grid-width, 100%));max-width:100%}@media (min-width: 576px){:host(.grid-fixed){width:var(--ion-grid-width-sm, var(--ion-grid-width, 540px))}}@media (min-width: 768px){:host(.grid-fixed){width:var(--ion-grid-width-md, var(--ion-grid-width, 720px))}}@media (min-width: 992px){:host(.grid-fixed){width:var(--ion-grid-width-lg, var(--ion-grid-width, 960px))}}@media (min-width: 1200px){:host(.grid-fixed){width:var(--ion-grid-width-xl, var(--ion-grid-width, 1140px))}}:host(.ion-no-padding){--ion-grid-column-padding:0;--ion-grid-column-padding-xs:0;--ion-grid-column-padding-sm:0;--ion-grid-column-padding-md:0;--ion-grid-column-padding-lg:0;--ion-grid-column-padding-xl:0}\";\n\nconst Grid = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the grid will have a fixed width based on the screen size.\n         */\n        this.fixed = false;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                'grid-fixed': this.fixed\n            } }, h(\"slot\", null)));\n    }\n};\nGrid.style = gridCss;\n\nconst rowCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}\";\n\nconst Row = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\n    }\n};\nRow.style = rowCss;\n\nexport { Col as ion_col, Grid as ion_grid, Row as ion_row };\n"]}