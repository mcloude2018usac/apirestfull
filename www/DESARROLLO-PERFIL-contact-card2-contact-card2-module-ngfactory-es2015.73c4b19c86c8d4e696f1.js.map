{"version":3,"sources":["webpack:///src/app/DESARROLLO/PERFIL/contact-card2/contact-card2.module.ts","webpack:///src/app/DESARROLLO/modals/about-popover/about-popover.ts","webpack:///src/app/DESARROLLO/PERFIL/dispositivos-list/dispositivos-list.page.ts","webpack:///src/app/DESARROLLO/PERFIL/contact-card2/contact-card2.page.ts","webpack:///src/app/DESARROLLO/PERFIL/contact-card2/contact-card2.page.html","webpack:///src/app/DESARROLLO/modals/about-popover/about-popover.ts.PopoverPage.html","webpack:///src/app/DESARROLLO/PERFIL/dispositivos-list/dispositivos-list.page.html","webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/components/skeleton-element/skeleton-element.component.html"],"names":["ContactCard2PageModule","PopoverPage","popoverCtrl","this","dismiss","url","data","DispositivosListPage","alertController","translateService","router","actionSheetController","modalController","navParams","menu","authenticationService","tituloxx","tiposus","APP","luser","idempresa","msg","efecto","items","items2","variables","trfid","viewType","apifoto","getapifoto","num","size","s","length","get","subscribe","value","seguro","getempresa","codigo1","push","codigo","nombre","dispositivo1","codigo2","dispositivo2","codigo3","dispositivo3","codigo4","dispositivo4","codigo5","dispositivo5","pideregistros","op","itemsList","getReg","_id","then","err","presentAlert","error","routerOutlet","fb","qrData","scannedCode","elementType","userinfo","pofilel","saldoactual","currentSegment","searchSubject","ReplaySubject","getcopiauser","logo1","dalogo1","moneda","getCurrentNavigation","extras","state","email","titulo","result","saldo","list","query","filter","item","toLowerCase","includes","event","selectedCategory","detail","filtro","popover","create","component","onWillDismiss","pin","present","modal","animated","componentProps","title","presentingElement","getTop","cssClass","vende","botonn","botonn2","venderconqr","setTimeout","target","complete","disabled","monto","swipeToClose","SkeletonElementComponent","width","height","borderRadius","rounded","noAnimated","inline","styles"],"mappings":"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","file":"x","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { environment } from '../../../../environments/environment';\nimport { AgmCoreModule } from '@agm/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContactCard2Page } from './contact-card2.page';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\n\nimport { PopoverPage } from '../../modals/about-popover/about-popover';\nimport { MyModalcalcuPageModule } from '../../modals/my-modalcalcu/my-modalcalcu.module';\nimport { MyModalpinPageModule } from '../../modals/my-modalpin/my-modalpin.module';\nimport { MyModalscanpay2PageModule } from '../../modals/my-modalscanpay2/my-modalscanpay2.module';\n\nimport { MyModalpayPageModule } from '../../modals/my-modalpay/my-modalpay.module';\n\nimport { DispositivosListPage } from './../dispositivos-list/dispositivos-list.page';\n\n\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,  MyModalpayPageModule,\n    FormsModule, NgxQRCodeModule   , MyModalcalcuPageModule, MyModalpinPageModule, MyModalscanpay2PageModule,\n    ComponentsModule, ReactiveFormsModule , TranslateModule.forChild(),\n    RouterModule.forChild([{ path: '', component: ContactCard2Page }]),\n    AgmCoreModule.forRoot({\n      apiKey: environment.googleMapsAPIKey,\n      libraries: ['places']\n    })\n  ],\n  declarations: [ContactCard2Page, PopoverPage, DispositivosListPage],\n  entryComponents: [PopoverPage, DispositivosListPage]\n})\nexport class ContactCard2PageModule {}\n","import { Component } from '@angular/core';\n\nimport { PopoverController } from '@ionic/angular';\n\n@Component({\n  template: `\n    <ion-list>\n     \n      <ion-item button (click)=\"close('Agregar Tarjetas')\">\n        <ion-label>Agregar Tarjetas</ion-label>\n      </ion-item>\n      <ion-item button (click)=\"close('Billing')\">\n        <ion-label>Billing</ion-label>\n      </ion-item>\n      <ion-item button (click)=\"close('Transferencias')\">\n        <ion-label>Transferencias</ion-label>\n      </ion-item>\n     \n    </ion-list>\n  `\n})\nexport class PopoverPage {\n  constructor(public popoverCtrl: PopoverController) {}\n\n  support() {\n    // this.app.getRootNavs()[0].push('/support');\n    this.popoverCtrl.dismiss();\n  }\n\n  close(url: string) {\n   \n    this.popoverCtrl.dismiss({data: url});\n  }\n}\n","import { Component, OnInit  } from '@angular/core';\n\nimport { Router,  NavigationExtras } from '@angular/router';\nimport { AlertController , ModalController, ActionSheetController ,  MenuController  , NavParams} from '@ionic/angular';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-dispositivos-list',\n  templateUrl: './dispositivos-list.page.html',\n  styleUrls: ['./dispositivos-list.page.scss'],\n})\nexport class DispositivosListPage implements OnInit {\n  tituloxx = '';\n  tiposus = '5be1b6479c9f2200e8311570';\n  APP = '';\n  luser: any = [];\n  idempresa = '';\n  msg = '';\n  seguro: any;\n  apifoto: String ;\n  efecto = 0;\n  items: any  = [] ;\n  items2: any  = [] ;\nvariables: any = [];\ntrfid: any = [];\nidllave: any;\n\nviewType = 'grid';\n\nitemsList: Array<any>;\n\n\n\n  constructor(public alertController: AlertController,  public translateService: TranslateService    ,\n     public router: Router, public actionSheetController: ActionSheetController ,\n    public modalController: ModalController, private navParams: NavParams,\n    public menu: MenuController , private authenticationService: AuthenticationService) {\n      this.apifoto = this.authenticationService.getapifoto();\n\n     }\n\n     dismissModal() {     this.modalController.dismiss('close');      }\n\n     padLeadingZeros(num, size) {\n      let s = num +'';\n      while (s.length < size) { s = \"0\" + s; }\n      return s;\n  }\n\n  \n  ngOnInit() {\n\n    this.tituloxx =  this.navParams.get('title');\n    this.luser =   this.navParams.get('luser');\n    this.trfid =  this.navParams.get('trfid');\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value;  });\n\n      this.idempresa =  this.authenticationService.getempresa();\n      if (this.trfid[0].codigo1 !== '') {      this.items2.push({codigo:  this.trfid[0].codigo1, nombre: this.trfid[0].dispositivo1}); }\n      if (this.trfid[0].codigo2 !== '') {      this.items2.push({codigo:  this.trfid[0].codigo2, nombre: this.trfid[0].dispositivo2}); }\n      if (this.trfid[0].codigo3 !== '') {      this.items2.push({codigo:  this.trfid[0].codigo3, nombre: this.trfid[0].dispositivo3}); }\n      if (this.trfid[0].codigo4 !== '') {      this.items2.push({codigo:  this.trfid[0].codigo4, nombre: this.trfid[0].dispositivo4}); }\n      if (this.trfid[0].codigo5 !== '') {      this.items2.push({codigo:  this.trfid[0].codigo5, nombre: this.trfid[0].dispositivo5}); }\nthis.pideregistros('todos');\n\n  }\n\n  pideregistros(op) {\n    this.itemsList = [];\n   \n    this.authenticationService.getReg('todos/' + op + '/' + this.luser[0].idempresa._id + '/' +  this.luser[0]._id, 'tarjetacreditos', 0).then((data) => {\n \n    this.items =  data;\n    this.itemsList = this.items;\n}, (err) => {\nthis.authenticationService.presentAlert(err.error , this.msg , '');\n});\n}\n\n}\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport {AlertController, ModalController, PopoverController, IonRouterOutlet} from '@ionic/angular';\nimport {  Router , NavigationExtras } from '@angular/router';\nimport {FormBuilder} from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthenticationService } from '../../../DESARROLLO/services/Authentication.service';\nimport { ReplaySubject} from 'rxjs';\nimport {PopoverPage } from '../../modals/about-popover/about-popover';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { MyModalcalcuPage } from '../../modals/my-modalcalcu/my-modalcalcu.page';\nimport { MyModalpinPage } from '../../modals/my-modalpin/my-modalpin.page';\n\nimport { MyModalscanpay2Page } from '../../modals/my-modalscanpay2/my-modalscanpay2.page';\n\n\nimport { DispositivosListPage } from './../dispositivos-list/dispositivos-list.page';\n\n\n\n@Component({\n  selector: 'app-contact-card2',\n  templateUrl: './contact-card2.page.html',\n  styleUrls: [\n    './styles/contact-card2.page.scss'\n\n  ]\n})\nexport class ContactCard2Page  implements OnInit {\n  @ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nqrData = 'tico';\nscannedCode = null;\nelementType: 'url' | 'canvas' | 'img' = 'canvas';\n\nitems: any  = [] ;\n  apifoto: String ;\n  efecto = 0;\n\n  seguro = '';\n  logo1: any;\n  msg = '';\nmoneda: any;\n  userinfo: any = [];\n  trfid: any = [];\n  viewType = 'grid';\n  tituloxx = '';\n  pofilel = '/api/image2s/5f224dc8370747006026c0cb';\nsaldoactual: any = 0;\n\n  luser: any = [];\n\n\nitemsList: Array<any>;\npublic currentSegment = 'PAGO';\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n\n  constructor( private routerOutlet: IonRouterOutlet ,\n    public alertController: AlertController,  private router: Router, public popoverCtrl: PopoverController ,\n        public translateService: TranslateService    ,    private modalController: ModalController,\n\n    private authenticationService: AuthenticationService , private fb: FormBuilder ) {\n      this.apifoto = this.authenticationService.getapifoto();\n\n\n\n  }\n  changeToList() { this.viewType = 'list'; }\n  changeToGrid() {   this.viewType = 'grid';  }\n  ionViewDidEnter(): void {\n    this.luser = this.authenticationService.getcopiauser();\n            }\n\n  ngOnInit() {\n\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.logo1 = this.authenticationService.dalogo1(this.userinfo);\n    this.moneda = this.router.getCurrentNavigation().extras.state.moneda;\n    this.qrData = this.userinfo[0].nombre + '°' + this.userinfo[0].email;\n    if ( this.router.getCurrentNavigation().extras.state) {\n      this.tituloxx =  this.router.getCurrentNavigation().extras.state.titulo;\n    } else {\n      this.tituloxx =  'Perfil';\n    }\n\n\n    this.authenticationService.getReg(this.userinfo[0]._id + '/personadispid/' +\n    this.userinfo[0].idempresa._id, 'personals', 0).then((result) => {\n      this.trfid = result;\n      this.saldoactual\t\t=\tresult[0].saldo;\n\n    }, (err) => {\n      this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n    });\n\n\n    this.pideregistros( this.currentSegment);\n  }\n  filterList(list, query): Array<any> {\n    return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n   }\n   filterContacts(event: any) {\n    const selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n\n    this.pideregistros(selectedCategory);\n  }\n  pideregistros0() {\n    this.pideregistros(this.currentSegment);\n   }\n   pideregistros(op) {\n        this.itemsList = [];\n        this.efecto = 0 ;\n        let  filtro: any;\nif (op === 'PAGO'  || op === 'PAGO0') {\n\nfiltro = this.userinfo[0]._id + '/' + op + '/PAGO';\n} else {\n  if (op === 'TRANSFERENCIA' ) { filtro = this.userinfo[0]._id + '/' + op + '/TRANSFERENCIA';\n\n} else {\n\n  filtro = this.userinfo[0]._id + '/' + op + '/COBRO';\n}\n\n\n}\n\n        this.authenticationService.getReg( filtro, 'comprasaldos', 0).then((data) => {\n        this.efecto = 1;\n        this.items =  data;\n        this.itemsList = this.items;\n  }, (err) => {\n    this.authenticationService.presentAlert(err.error , this.msg , '');\n  });\n   }\n\n  async presentPopover(event: Event) {\n    const popover = await this.popoverCtrl.create({\n      component: PopoverPage,\n      event\n    });\n    popover.onWillDismiss().then((data) => {\n\n      if ( data.data.data === 'Vender saldo' ) {\n\n             this.pin();\n\n\n\n        }\n\n\n    });\n    await popover.present();\n  }\n\n\n\n  async  pin() {\n\n    const modal = await this.modalController.create({\n      component: MyModalpinPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese pin'  },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n                  this.vende();\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n\n  }\n\n  async  vende() {\n\n    const modal = await this.modalController.create({\n      component: MyModalcalcuPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese monto' , botonn: 'VENDER', botonn2: 'cobro' },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n              this.venderconqr(data.data.data);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n\n  }\n  loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n\n\n  async  venderconqr(monto) {\n\n    const modal = await this.modalController.create({\n      component: MyModalscanpay2Page,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'RECARGAR'  , monto : monto},\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n        this.authenticationService.presentAlert(data.data.data , 'Gracias' , '');\n             // this.cobrarconqr(data.data);\n\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n  }\n\n\n  async dispositivos() {\n\n\n    const modal = await this.modalController.create({\n      component: DispositivosListPage,\n      swipeToClose: true,\n       componentProps:  { luser : this.luser, trfid:  this.trfid,   title: 'Dispositivos Asociados'}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n      if ( data.data !== 'close' ) {\n       // this.luser = this.authenticationService.getcopiauser();\n      }\n    });\n    return await modal.present();\n\n\n\n\n    // const navigationExtras: NavigationExtras = {     state: {        luser : this.luser,       titulo: 'Actualizar perfil'      }    };\n    // this.router.navigate(['PerfilUpdatePage'], navigationExtras);\n\n\n\n  }\n\n\n}\n","<ion-header color=\"light\">\n  <ion-toolbar>\n   <ion-buttons color=\"light\" slot=\"start\">\n    <ion-back-button color=\"light\" defaultHref=\"BilleteraListPage\"></ion-back-button>\n    </ion-buttons >\n    <ion-buttons  slot=\"end\">\n      <ion-button color=\"light\" title=\"Dispositivos asociados\"  (click)=\"dispositivos()\" >\n      \n        <ion-icon slot=\"icon-only\" name=\"card-outline\"></ion-icon>\n      </ion-button>\n      <img alt=\"logo\" id=\"header_logo\" height=\"33\"  [src]=\"apifoto + logo1\">\n    </ion-buttons>\n    <ion-title color=\"light\" >\n    {{tituloxx}}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n<ion-content >\n <div class=\"contact-card-content\" *ngFor=\"let p of luser;\">\n  <ion-row class=\"user-details-wrapper\">\n    <ion-col size=\"4\">\n      <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n        <app-image-shell   class=\"user-avatar\" animation=\"spinner\" [src]=\"apifoto + p.foto\"  [alt]=\"'image'\"></app-image-shell>\n    \n      </app-aspect-ratio>\n    </ion-col>\n    <ion-col class=\"user-info-wrapper\" size=\"8\">\n      <h5 class=\"user-name\">{{p.nombre}}</h5>\n  \n   \n    </ion-col>\n    <ion-col size=\"12\">\n      <h1>Saldo actual: <strong> {{saldoactual | currency: moneda}}</strong></h1>\n     \n   \n  </ion-col>\n    \n  </ion-row>\n\n</div>\n\n\n\n  <ion-item-divider sticky>\n   \n    <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n    <ion-buttons slot=\"end\">\n      <!--\n      <ion-button title=\"Otras opciones\"  (click)=\"presentPopover($event)\">\n        <ion-icon  slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n      </ion-button>\n      -->\n    <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n      <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n    </ion-button>\n    <ion-button title=\"Tipo vista\" *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n      <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n    </ion-button>\n    <ion-button title=\"Tipo vista\"  *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n      <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n    </ion-button>\n  </ion-buttons>\n\n  </ion-item-divider>\n  <ion-segment color=\"tw_botton1\" (ionChange)=\"filterContacts($event)\" value=\"PAGO\">\n    <ion-segment-button value=\"PAGO\" checked>\n      PAGOS\n    </ion-segment-button>\n    <ion-segment-button value=\"COBRO\">\n     COBROS\n     </ion-segment-button>\n    <ion-segment-button value=\"PAGO0\">\n    RECARGAS\n    </ion-segment-button>\n    <ion-segment-button value=\"TRANSFERENCIA\">\n      TRANSFERENCIAS\n      </ion-segment-button>\n  </ion-segment>\n \n \n \n  <ion-list *ngIf=\"efecto === 0\" >\n    <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n      <ion-label>\n        <skeleton-element></skeleton-element>\n        <skeleton-element></skeleton-element>\n        <skeleton-element width=\"67%\"></skeleton-element>\n      </ion-label>\n    </ion-item>  \n  </ion-list>\n  <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n    <ion-item  *ngFor=\"let item of itemsList ;let i = index;\" [routerLink]=\"\">\n <!--\n \n   \n    \n     \n -->\n     <ion-grid>\n       <ion-row>\n         <ion-col  size=\"12\">\n           <ion-label class=\"ion-text-wrap\">\n               <ion-note slot=\"end\">No. {{i+1}}</ion-note> <br>   \n               <p>\n                 <strong>Descripción:</strong> {{item.descripcion}} <br>\n                 <strong>Monto:</strong> {{item.monto | currency:moneda}} <br>\n                 <strong>Fecha:</strong> {{item.fecha | date:'dd-MM-yyyy h:mm a' }} <br>\n               \n            </ion-label>\n         </ion-col>\n       </ion-row>\n     \n      \n \n     </ion-grid>\n \n \n \n    </ion-item>\n  </ion-list>\n  <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n    <ion-row>\n      <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n        <ion-card  >\n          <ion-row class=\"user-stats-wrapper user-details-wrapper\">\n            <ion-col>\n              <span class=\"user-stat-value\">No.{{i+1}}</span>\n              <span class=\"user-stat-name\">{{item.index}} </span>\n            </ion-col>\n            <ion-col>\n              <span class=\"user-stat-value\">{{item.estado}} </span>\n            </ion-col>\n          </ion-row>\n          <ion-item  [routerLink]=\"\">\n          \n            <ion-label  class=\"ion-text-wrap\">\n               <p>\n                <strong>Descripción:</strong> {{item.descripcion}} <br>\n                <strong>Monto:</strong> {{item.monto | currency:moneda}} <br>\n                <strong>Fecha:</strong> {{item.fecha | date:'dd-MM-yyyy h:mm a' }} <br>\n              \n          \n            </ion-label>\n          </ion-item>\n       \n        </ion-card>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n    {{ 'NODATOS' | translate }}  \n  </h3>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n    <ion-infinite-scroll-content\n      loadingSpinner=\"bubbles\"\n      loadingText=\"Espere un momento...\">\n    </ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n \n</ion-content>\n","\n    <ion-list>\n     \n      <ion-item button (click)=\"close('Agregar Tarjetas')\">\n        <ion-label>Agregar Tarjetas</ion-label>\n      </ion-item>\n      <ion-item button (click)=\"close('Billing')\">\n        <ion-label>Billing</ion-label>\n      </ion-item>\n      <ion-item button (click)=\"close('Transferencias')\">\n        <ion-label>Transferencias</ion-label>\n      </ion-item>\n     \n    </ion-list>\n  ","<ion-header>\n  <ion-toolbar color=\"primary\">\n    \n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"dismissModal()\">\n         <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n      </ion-button>\n</ion-buttons>\n\n    <ion-title>{{tituloxx}}</ion-title>\n  </ion-toolbar>\n</ion-header>\n  \n<ion-content class=\"signup-content\">\n \n\n  <ion-grid *ngIf=\"(itemsList?.length > 0) \">\n    <ion-row>\n      <ion-col *ngFor=\"let item of items2;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n \n \n       <ion-item >\n          \n         <ion-grid [class.cardON2]=\"'Activo'\" >\n           <ion-row>\n             <ion-col class=\"state\">\n               <div class=\"msg\">\n                 <span [class.ON]=\"'Activo'\" ></span>  {{item.estado}}\n               </div>\n             </ion-col>\n             \n            \n           </ion-row>\n           <ion-row>\n             <ion-col class=\"chip\" size=\"2\">\n               <ion-img src=\"assets/img/chip.png\"></ion-img> \n             </ion-col>\n             <ion-col class=\"number3\" size='10'>\n               {{item.nombre}}\n              </ion-col>\n           </ion-row>\n           <ion-row class=\"digits\">\n            \n             <ion-col class=\"number\">\n               {{item.codigo}}\n             </ion-col>\n           </ion-row>\n           <ion-row>\n            \n             <ion-col class=\"bank\">\n               RFID\n             </ion-col>\n           </ion-row>\n         </ion-grid>\n \n         \n       \n       </ion-item>\n \n \n \n      \n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-grid *ngIf=\"(itemsList?.length > 0) \">\n    <ion-row>\n      <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n \n \n       <ion-item >\n          \n         <ion-grid [class.cardON]=\"item.estado=='Activo'\" [class.cardOFF]=\"item.estado=='Inactivo'\">\n           <ion-row>\n             <ion-col class=\"state\">\n               <div class=\"msg\">\n                 <span [class.ON]=\"item.estado=='Activo'\" [class.OFF]=\"item.estado=='Inactivo'\"></span>  {{item.estado}}\n               </div>\n             </ion-col>\n             <ion-col class=\"bank\">\n               {{item.banco}}\n             </ion-col>\n            \n           </ion-row>\n           <ion-row>\n             <ion-col class=\"chip\" size=\"2\">\n               <ion-img src=\"assets/img/chip.png\"></ion-img> \n             </ion-col>\n             <ion-col class=\"number3\" size='10'>\n               {{item.nombre}}\n              </ion-col>\n           </ion-row>\n           <ion-row class=\"digits\">\n             <ion-col class=\"number\">\n              ****\n             </ion-col>\n             <ion-col class=\"number\">\n               ****\n             </ion-col>\n             <ion-col class=\"number\">\n               ****\n             </ion-col>\n             <ion-col class=\"number\">\n              {{padLeadingZeros(this.authenticationService.decryptvalue(item.n4))}}\n             </ion-col>\n           </ion-row>\n           <ion-row>\n             <ion-col class=\"date\">\n               Expira: {{item.mes}} / {{item.ano}}\n             </ion-col>\n             <ion-col class=\"bank\">\n               {{item.tipo}}\n             </ion-col>\n           </ion-row>\n         </ion-grid>\n \n         \n       \n       </ion-item>\n \n \n \n      \n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n</ion-content>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n"]}