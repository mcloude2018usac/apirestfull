{"version":3,"sources":["webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/DESARROLLO/FORMULARIO/categoriaformulario-list/categoriaformulario-list.module.ts","webpack:///src/app/DESARROLLO/FORMULARIO/categoriaformulario-list/categoriaformulario-list.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/categoriaformulario-list/categoriaformulario-list.page.html","webpack:///src/app/components/skeleton-element/skeleton-element.component.html"],"names":["SkeletonElementComponent","width","height","borderRadius","rounded","noAnimated","inline","styles","this","categoriaformularioListPageModule","routerOutlet","router","authenticationService","alertController","translateService","modalController","showAgeFilter","showmenu","items","variables","userinfo","currentSegment2","viewType","tituloxx","efecto","seguro","msg","currentSegment","searchSubject","ReplaySubject","apifoto","getapifoto","event","detail","value","pideregistros","getCurrentNavigation","extras","state","idllave","nombre","idrol","nivel","pactualizacion","pconsulta","pcreacion","peliminacion","pfiltro","pingreso","potros1","preporte","getcopiauser","searchQuery","get","subscribe","rangeForm","dual","lower","upper","op","op2","itemsList","filtro","role","substring","idempresa","_id","getReg","then","data","err","presentAlert","error","next","controls","query","filterList","list","filter","item","toLowerCase","includes","alert","create","cssClass","header","inputs","name","type","label","checked","buttons","text","handler","todo","console","log","arr","split","navigate","user","title","present","titel","tipo","idcategoria","setTimeout","target","complete","length","disabled"],"mappings":"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","file":"x","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\n\nimport { categoriaformularioListPage } from './categoriaformulario-list.page';\n@NgModule({\n  declarations: [\n    categoriaformularioListPage\n  ],\n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule,\n    RouterModule.forChild([{ path: '', component: categoriaformularioListPage }]), TranslateModule.forChild(),\n  ]\n  \n})\nexport class categoriaformularioListPageModule {}\n","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\n\n@Component({\nselector: 'page-categoriaformulario-list',\ntemplateUrl: 'categoriaformulario-list.page.html',\nstyleUrls: ['./categoriaformulario-list.page.scss'],\n})\nexport class categoriaformularioListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false; showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\npublic currentSegment2 = 'formulario';\nidllave: any;\nviewType = 'grid';\ntituloxx = '';\nefecto = 0;\nseguro = '';\nmsg = '';\napifoto: String;\nitemsList: Array<any>;\npublic currentSegment = 'Todos';\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {  this.apifoto = this.authenticationService.getapifoto();\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nfilterContacts2(event: any) {\n  const selectedCategory2 = event.detail.value;\n  this.currentSegment2 = selectedCategory2;\n  this.pideregistros( this.currentSegment, this.currentSegment2 );\n}\nngOnInit() {\n  if ( this.router.getCurrentNavigation().extras.state) {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n    this.currentSegment2 = 'formulario';\n    if (this.variables) {    this.tituloxx = this.variables.nombre ; } else {this.tituloxx = 'Mis procesos y formularios';}\n  } else {\n    this.variables =  {\n    idrol: '5f503beeeda4710798a79b8a',    nivel: '.',    nombre: 'Mis procesos y formularios',    pactualizacion: true,\n    pconsulta: true,    pcreacion: true,    peliminacion: true,    pfiltro: true,    pingreso: true,    potros1: '',    preporte: true};\n    this.idllave = '';\n    this.tituloxx = this.variables.nombre ;\n  }\n\n\n\n\n    this.userinfo = this.authenticationService.getcopiauser();\n\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value;  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });\n    this.currentSegment = 'todos';\n    this.pideregistros( this.currentSegment, this.currentSegment2);\n  }\n  filterContacts(event: any) {\n    const selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n    this.pideregistros(this.currentSegment, this.currentSegment2);\n  }\n  pideregistros0() {\n   this.pideregistros(this.currentSegment, this.currentSegment2);\n  }\n  pideregistros(op, op2) {\n       this.itemsList = [];\n       this.efecto = 0 ;\n       let filtro = '';\n       if ( this.userinfo[0].role === 'Administrador' || this.userinfo[0].role.substring(0, 5) === 'admin') {\n         filtro = this.userinfo[0].idempresa._id + '/categoriausrmoviladmin/'   + this.userinfo[0]._id + '/' + op2; } else {\n         filtro = this.userinfo[0].idempresa._id + '/categoriausrmovil/'   + this.userinfo[0]._id + '/' + op2;\n       }\n    //   this.authenticationService.getReg(this.userinfo[0].idempresa._id + '/categoriagrupo/' + this.currentSegment2, 'frmmovils', 0).then((data) => {\n\n       this.authenticationService.getReg( filtro, 'catusuarios', 0).then((data) => {\n       this.efecto = 1;\n       this.items =  data;\n       this.itemsList = this.items;\n }, (err) => {\n   this.authenticationService.presentAlert(err.error , this.msg , '');\n });\n  }\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n  async otrasop(item: any) {\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n       header: 'Seleccione Opción',\n       inputs: [\n         {\n           name: 'Productos',\n           type: 'radio',\n           label: 'Productos',\n           checked: true,\n           value: '/ProductoListPage°Productos ->' + item.nombre,\n         }\n       ],\n       buttons: [\n         {\n           text: 'Cancel',\n           role: 'cancel',\n           cssClass: 'secondary',\n           handler: (todo) => {\n             console.log(todo);\n           }\n         }, {\n           text: 'Ok',\n           handler: (todo) => {\n             const arr = todo.split('°');\n             const navigationExtras: NavigationExtras = {\n               state: {\n                 variables: this.variables,\n                 user: null,\n                 idllave: item._id,\n                 title: arr[1]\n               }\n             };\n             this.router.navigate([arr[0]], navigationExtras);\n           }\n         }\n       ]\n     });\n     await alert.present();\n }\n\n  async updateRecord(item: any) {\nlet titel = '';\nif (this.currentSegment2 === 'proceso') {titel = 'Mis procesos';\n\n} else {\n  titel = 'Mis Formularios';\n}\n\n\n    const navigationExtras: NavigationExtras = {\n      state: {\n        variables: this.variables,\n        user: null,\n        idllave: item._id,\n        tipo: this.currentSegment2,\n        idcategoria: item.nombre,\n        title: titel\n      }\n    };\n    this.router.navigate(['formulariomovilsListPage'], navigationExtras);\n\n\n}\n\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n}\n"," <ion-header>\n <ion-toolbar color=\"primary\">\n   <ion-buttons slot=\"start\">\n     <ion-menu-button></ion-menu-button>\n   </ion-buttons>\n   <ion-title>\n     {{tituloxx}}\n   </ion-title>\n   <ion-buttons slot=\"end\">\n  \n     <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n       <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n       <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n       <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n     </ion-button>\n   </ion-buttons>\n </ion-toolbar>\n <ion-toolbar class=\"filters-toolbar\">\n   <ion-row class=\"searchbar-row\" align-items-center>\n     <ion-col>\n       <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n     </ion-col>\n     <ion-col [hidden]=\"!showAgeFilter\" class=\"call-to-action-col\">\n       <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" title=\" {{ 'FILTROM' | translate }}\" (click)=\"showAgeFilter = !showAgeFilter\">\n         <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n       </ion-button>\n     </ion-col>\n   </ion-row>\n  \n </ion-toolbar>\n</ion-header>\n<ion-content class=\"user-friends-content\">\n <ion-item-divider sticky>\n   <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n </ion-item-divider>\n\n \n <ion-item-divider sticky>\n\n  <ion-segment color=\"tertiary\"  (ionChange)=\"filterContacts2($event)\" value=\"formulario\">\n    <ion-segment-button value=\"formulario\" layout=\"icon-bottom\" checked>\n      <ion-label>Formulario</ion-label> \n      <ion-icon name=\"reader-outline\"></ion-icon>\n      \n    </ion-segment-button>\n    <ion-segment-button layout=\"icon-bottom\" value=\"proceso\">\n      <ion-label>Procesos</ion-label> \n      <ion-icon name=\"cube-outline\"></ion-icon>\n     </ion-segment-button>\n  \n  </ion-segment>\n</ion-item-divider>\n\n\n <ion-list *ngIf=\"efecto === 0\" >\n   <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n     <ion-label>\n       <skeleton-element></skeleton-element>\n       <skeleton-element></skeleton-element>\n       <skeleton-element width=\"67%\"></skeleton-element>\n     </ion-label>\n   </ion-item>\n </ion-list>\n <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n   <ion-item  *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n<ion-grid>\n<ion-row>\n  <ion-col  (click)=\"updateRecord(item)\" size=\"12\">\n     <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n    <ion-label class=\"ion-text-wrap\">\n        <ion-note slot=\"end\">No. {{i+1}}</ion-note> <br>\n<p>\n  <strong>Categoria:</strong> {{item.nombre}} <br> \n</p>   <ion-badge color=\"medium\">{{item.estado}}</ion-badge>\n     </ion-label>\n</ion-col>\n</ion-row>\n  <ion-row>\n\n      </ion-row>\n    </ion-grid>\n   </ion-item>\n </ion-list>\n <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n   <ion-row>\n     <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n       <ion-card  (click)=\"updateRecord(item)\">\n         <ion-row class=\"user-stats-wrapper user-details-wrapper\">\n           <ion-col>\n             <span class=\"user-stat-value\">No.</span>\n             <span class=\"user-stat-name\">{{i+1}} </span>\n           </ion-col>\n           <ion-col>\n             <span class=\"user-stat-value\">{{item.estado}} </span>\n           </ion-col>\n         </ion-row>\n         <ion-item   [routerLink]=\"\">\n           <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n           <ion-label    class=\"ion-text-wrap\">\n <p> \n  <strong>Categoria:</strong> {{item.nombre}} <br>    \n </p>    </ion-label>\n         </ion-item>\n         <ion-card-content>\n         </ion-card-content>\n         <ion-row no-padding>\n          \n         </ion-row>\n       </ion-card>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n   {{ 'NODATOS' | translate }}  \n </h3>\n <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n   <ion-infinite-scroll-content\n     loadingSpinner=\"bubbles\"\n     loadingText=\"Espere un momento...\">\n   </ion-infinite-scroll-content>\n </ion-infinite-scroll>\n</ion-content>\n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n"]}