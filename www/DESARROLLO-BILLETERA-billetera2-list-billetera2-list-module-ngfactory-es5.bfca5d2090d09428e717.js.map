{"version":3,"sources":["webpack:///src/app/DESARROLLO/BILLETERA/billetera2-list/billetera2-list.module.ts","webpack:///src/app/DESARROLLO/BILLETERA/billetera2-list/billetera2-list.page.ts","webpack:///src/app/DESARROLLO/BILLETERA/billetera2-list/billetera2-list.page.html"],"names":["Billetera2ListPageModule","router","authenticationService","alertController","lockscreenService","translateService","modalController","picture","picture2","picture3","picture4","themeColor","isCorrect","enableTouchIdFaceId","userinfo","reportes","mycuenta","myservicio","mytrasferencia","mytiendas","mymoney","mytranspote","this","apifoto","getapifoto","radioColorForm","selected_color","getcopiauser","logo1","dalogo1","moneda","idempresa","role","tituloxx","getCurrentNavigation","extras","state","title","itemsList","opciones","op","recargar","pin22","comopagar2","mytransferencia","cobrobus","pivote","pin2acceso","navigate","variables","user","titulo","boton","tipo2","verify","passcode","codpersonal","then","response","type","vende","presentingElement","animated","validasaldo","botonn","botonn2","tipo","getTop","modal","component","componentProps","cssClass","create","onWillDismiss","data","venderconqr","present","monto","op2","op3","presentAlert","comocobrar2","cobrar","validarsaldo","cobrarconqr","estado","escanearqr","comocobrar22","accesohora","comocobrar2qr","metodopago","pagar2qr","pagarconqr","pagar2"],"mappings":"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","file":"x","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MyModalscanpay2PageModule } from '../../modals/my-modalscanpay2/my-modalscanpay2.module';\nimport { MyModalcalcuPageModule } from '../../modals/my-modalcalcu/my-modalcalcu.module';\nimport { MyModalpinPageModule } from '../../modals/my-modalpin/my-modalpin.module';\nimport { MyModalscanpayPageModule } from '../../modals/my-modalscanpay/my-modalscanpay.module';\nimport { MyModalcreditoPageModule } from '../../modals/my-modalcreditos/my-modalcredito.module';\nimport { MyModalpayPageModule } from '../../modals/my-modalpay/my-modalpay.module';\n\n\nimport { Billetera2ListPage } from './billetera2-list.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule, \n    FormsModule, MyModalpayPageModule, MyModalscanpay2PageModule, MyModalcreditoPageModule,\n    IonicModule, ComponentsModule, ReactiveFormsModule, MyModalcalcuPageModule, MyModalpinPageModule, MyModalscanpayPageModule,\n   \n    RouterModule.forChild([{ path: '', component: Billetera2ListPage }]), TranslateModule.forChild(),\n  ],\n  declarations: [Billetera2ListPage],\n \n})\nexport class Billetera2ListPageModule {}\n","\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { Component , OnInit , ViewChild , ElementRef} from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router , NavigationExtras, ActivatedRoute} from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\n\nimport { MyModalcalcuPage } from '../../modals/my-modalcalcu/my-modalcalcu.page';\nimport { MyModalpinPage } from '../../modals/my-modalpin/my-modalpin.page';\nimport { MyModalcreditoPage } from '../../modals/my-modalcreditos/my-modalcredito.page';\nimport { MyModalscanpayPage } from '../../modals/my-modalscanpay/my-modalscanpay.page';\nimport { MyModalscanpay2Page } from '../../modals/my-modalscanpay2/my-modalscanpay2.page';\n\nimport { MyModalpayPage } from '../../modals/my-modalpay/my-modalpay.page';\n\nimport { LockscreenService } from '../../../plugins/lockscreen/services/lockscreen.service';\n\n\n\nconst DEFAULT_THEME_COLOR = 'dark';\n@Component({\n  selector: 'app-billetera2-list',\n  templateUrl: './billetera2-list.page.html',\n  styleUrls: ['./billetera2-list.page.scss'],\n})\nexport class Billetera2ListPage implements OnInit {\n \n  radioColorForm: FormGroup;\n  picture = '../../../../assets/sample-images/scan1.svg';\n  picture2 = '../../../../assets/sample-images/scan2.svg';\n  picture3 = '../../../../assets/sample-images/comprarsaldo.png';\n  picture4 = '../../../../assets/sample-images/scan3.svg';\n \n  themeColor: string = DEFAULT_THEME_COLOR;\n  isCorrect: Boolean = false;\n  enableTouchIdFaceId: Boolean = true;\ntituloxx: any;\nuserinfo: any = [];\nmoneda; any;\nrole: any;\n\n\n  itemsList: Array<any>;\n  logo1: any;\n  apifoto: String;\n  reportes = '../../../../assets/sample-images/reportes.svg';\n  mycuenta = '../../../../assets/sample-images/mycuenta.svg';\n  myservicio = '../../../../assets/sample-images/myservicio3.svg';\n  mytrasferencia = '../../../../assets/sample-images/mytransaferencia2.svg';\n  mytiendas = '../../../../assets/sample-images/mytienda.svg';\n  mymoney = '../../../../assets/sample-images/money.svg';\n  mytranspote = '../../../../assets/sample-images/mytranspote.svg';\n\n  constructor(  private router: Router, private authenticationService: AuthenticationService,\n    public alertController: AlertController,  private lockscreenService: LockscreenService,\n       public translateService: TranslateService    ,    private modalController: ModalController) {\n\n      this.apifoto = this.authenticationService.getapifoto();\n    this.radioColorForm = new FormGroup({\n      selected_color: new FormControl('#fc9961')\n    });\n   }\n\n  ngOnInit() {\n\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.logo1 = this.authenticationService.dalogo1(this.userinfo);\n    this.moneda = this.userinfo[0].idempresa.moneda;\n    this.role = this.userinfo[0].role;\n    this.tituloxx = this.router.getCurrentNavigation().extras.state.title;\n    this.itemsList = this.router.getCurrentNavigation().extras.state.opciones;\n\n\n  }\n\n\n  async operacion(op) {\n    switch (op) {\n        case 'vendesaldo': this.recargar('vendersaldo', 'VENDER SALDO', 'cobrar', 'venta');\n        break;\n        case 'comprasaldo': this.pin22('comprasaldo');\n        break;\n        case 'transferir': this.comopagar2('trasferencia');\n        break;\n        case 'mistransferencias': this.mytransferencia();\n        break;\n        case 'cobrarpasaje': this.cobrobus();\n        break;\n        case 'Cobros del dia bus': this.pivote(op);\n        break;\n        case 'pagarsubcidio':this.pin2acceso('pagoqr');break;\n        \n\n\n    }\n  }\n\n  async  colectar() {\n\n\n  }\n\n  async  mytienda() {\n    const navigationExtras: NavigationExtras = {\n      state: {\n        variables: '',\n        user: null,\n      moneda: this.moneda,\n        titulo: 'Tiendas'\n      }\n    };\n    this.router.navigate(['app/ProvidesPage'], navigationExtras);\n  }\n\n\n\n  async  pivote(op) {\n    const navigationExtras: NavigationExtras = {\n      state: {\n        variables: '',\n        user: null,\n      moneda: this.moneda,\n        title: op\n      }\n    };\n    this.router.navigate(['PivoteListPage'], navigationExtras);\n  }\n\n  async  mycuentas() {\n    const navigationExtras: NavigationExtras = {\n      state: {\n        variables: '',\n        user: null,\n      moneda: this.moneda,\n        titulo: 'My cuenta'\n      }\n    };\n    this.router.navigate(['contact-card2'], navigationExtras);\n\n\n  }\n\n\n  async  recargar(op, titulo, boton, tipo2) {\n\n    const options = {\n      passcode: this.userinfo[0].codpersonal,\n      enableTouchIdFaceId:  this.enableTouchIdFaceId,\n    };\n\n    this.lockscreenService.verify(options)\n      .then((response: any) => {\n        const { data } = response;\n\n        // console.info('Response from lockscreen service: ', data);\n\n        if (data.type === 'dismiss') {\n          this.vende(op, titulo, boton, tipo2);\n        } else {\n          this.isCorrect = false;\n        }\n      });\n\n\n\n  }\n\n\n\n  async  vende(op, titulo, boton, tipo2) {\n\n    const modal = await this.modalController.create({\n      component: MyModalcalcuPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese monto ' , validasaldo: 'no', tipo2: tipo2, botonn: titulo, botonn2: boton, tipo: op },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n              this.venderconqr(data.data.data, op, titulo, tipo2);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n\n  }\n\n  async  venderconqr(monto, op2, op3, tipo2) {\n\n    const modal = await this.modalController.create({\n      component: MyModalscanpay2Page,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: op3 , tipo2: tipo2 , tipo: op2, monto : monto},\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n        this.authenticationService.presentAlert(data.data.data , 'Gracias' , '');\n             // this.cobrarconqr(data.data);\n\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n  }\n\n\n  async  myservicios() {\n  }\n\n  async  mytransferencia() {\n\n    const navigationExtras: NavigationExtras = {\n      state: {\n        variables: '',\n        user: null,\n      moneda: this.moneda,\n        titulo: 'Mis Transferencias'\n      }\n    };\n    this.router.navigate(['tokensListPage'], navigationExtras);\n\n   // tokensListPage\n\n\n  }\n\n  async  cobrobus() {\n\n    const navigationExtras: NavigationExtras = {\n      state: {\n        variables: '',\n        user: null,\n      moneda: this.moneda,\n        titulo: 'Cobro pasaje'\n      }\n    };\n    this.router.navigate(['tokens2ListPage'], navigationExtras);\n\n   // tokensListPage\n\n\n  }\n\n\n  async  cobrarconqr(monto, op) {\n\n    const modal = await this.modalController.create({\n      component: MyModalscanpayPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'COBRAR'  , monto : monto, tipo: op },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n        this.authenticationService.presentAlert(data.data.data , 'Gracias' , 'Por tu compra');\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n  }\n\n  async  pin(op) {\n\n\n    this.comocobrar2(op);\n    /*\n    const options = {\n      passcode: this.userinfo[0].codpersonal,\n      enableTouchIdFaceId:  this.enableTouchIdFaceId,\n    };\n\n    this.lockscreenService.verify(options)\n      .then((response: any) => {\n        const { data } = response;\n\n        //console.info('Response from lockscreen service: ', data);\n\n        if (data.type === 'dismiss') {\n          this.comocobrar2(op);\n        } else {\n          this.isCorrect = false;\n        }\n      })\n\n\n\n    const modal = await this.modalController.create({\n      component: MyModalpinPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese pin'  },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n                  this.comocobrar2();\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n*/\n\n  }\n\n\n  async comocobrar2(op) {\n\n\n      this.cobrar(op);\n\n\n  }\n\n  async  cobrar(op) {\n\n    const modal = await this.modalController.create({\n      component: MyModalcalcuPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese monto ' , botonn: 'COBRAR', botonn2: 'cobro', validarsaldo: 'no' , tipo: op },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n              this.cobrarconqr(data.data.data, op);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n\n  }\n\n\n  async  escanearqr(monto, estado, titulo) {\n    // 'pagogeneraqr'\n    const modal = await this.modalController.create({\n      component: MyModalpayPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: titulo , monto : monto, tipo: estado },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n             // this.cobrarconqr(data.data);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n  }\n  async  pin22(op) {\n    this.escanearqr(op, op, 'Identificarse');\n\n/*\n    const modal = await this.modalController.create({\n      component: MyModalpinPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese pin'   },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n                  this.comprarsaldo();\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n*/\n\n  }\n\n\n  async  comprarsaldo(op) {\n\n\n/*\n    const modal = await this.modalController.create({\n      component: MyModalcalcuPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese monto' , botonn: 'PAGAR' , botonn2: 'pago', validarsaldo: 'no',tipo:op },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n              this.pagarconqr(op,op);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n*/\n\n  }\n\n\n  async comocobrar22(op, monto) {\n    const modal = await this.modalController.create({\n      component: MyModalpayPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'COBRAR'  , monto : monto , tipo : op},\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n             // this.cobrarconqr(data.data);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n  }\n  async comocobrar2qr(op) {\n    const modal = await this.modalController.create({\n      component: MyModalcalcuPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese monto ' , botonn: 'COBRAR', botonn2: 'cobro', validarsaldo: 'no' , tipo: op },\n  \n  \n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n  \n      if ( data.data.data !== 'close' ) {\n  \n        this.comocobrar22(op, data.data.data);\n  \n  \n  \n        }\n  \n  \n    });\n    return await modal.present();\n    }\n\n  async  pin2acceso(op) {\n\n    if ( this.userinfo[0].accesohora === 'Aplicar') {\n      const options = {\n        passcode: this.userinfo[0].codpersonal,\n        enableTouchIdFaceId:  this.enableTouchIdFaceId,\n      };\n    \n      this.lockscreenService.verify(options)\n        .then((response: any) => {\n          const { data } = response;\n    \n          // console.info('Response from lockscreen service: ', data);\n    \n          if (data.type === 'dismiss') {\n            if (op === 'cobrapagoqr') { this.comocobrar2qr(op); } else {\n              this.comopagar2(op);\n            }\n    \n          } else {\n            this.isCorrect = false;\n          }\n        });\n    \n    } else {\n      this.comopagar2(op);\n    }\n    \n    \n          /*\n        const modal = await this.modalController.create({\n          component: MyModalpinPage,\n          animated: true,\n          componentProps:  {moneda: this.moneda, title: 'Ingrese pin'   },\n    \n          presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n        });\n        modal.onWillDismiss().then((data) => {\n    \n          if ( data.data.data !== 'close' ) {\n    \n                      this.comopagar2(op);\n    \n    \n    \n            }\n    \n    \n        });\n        return await modal.present();\n    */\n    \n      }\n  async  pin2(op) {\n\n\n    const options = {\n      passcode: this.userinfo[0].codpersonal,\n      enableTouchIdFaceId:  this.enableTouchIdFaceId,\n    };\n\n    this.lockscreenService.verify(options)\n      .then((response: any) => {\n        const { data } = response;\n\n        // console.info('Response from lockscreen service: ', data);\n\n        if (data.type === 'dismiss') {\n          this.comopagar2(op);\n        } else {\n          this.isCorrect = false;\n        }\n      });\n\n      /*\n    const modal = await this.modalController.create({\n      component: MyModalpinPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese pin'   },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n                  this.comopagar2(op);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n*/\n\n  }\n\n\n  async comopagar2(op) {\n\n    if (op === 'trasferencia') {\n\n      this.pagar2(op, 'TRANSFERENCIA');\n    } else {\n    const modal = await this.modalController.create({\n      component: MyModalcreditoPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, metodopago: op ,  title: 'Seleccione opción' , botonn: 'PAGAR' },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n\n      if (data.data.data === 'pagoqr') {\n        this.pagarconqr(data.data.data, data.data.data, 'PAGAR');\n\n\n    } else {\n      // this.pagar2(data.data.data);\n      this.pagar2qr();\n    }\n  }\n  });\n  return await modal.present();\n}\n\n\n/*\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Seleccione Opción de pago',\n      inputs: [\n        {\n          name: 'pagoqr',\n          type: 'radio',\n          label: 'Pagar',\n          value: 'pagoqr',\n          checked: true\n        },\n        {\n          name: 'pagogeneraqr',\n          type: 'radio',\n          label: 'Generar QR',\n          value: 'pagogeneraqr'\n\n        }\n\n\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (todo) => {\n\n            console.log(todo);\n          }\n        }, {\n          text: 'Aceptar',\n          handler: (todo) => {\n          if (todo === 'pagoqr') {\n              this.pagar2qr();\n          } else {\n              this.pagar2(todo);\n          }\n\n\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    */\n  }\n\n  async  pagar2(op, titulo) {\n\n    // preguntar como desea pagar\n\n    const modal = await this.modalController.create({\n      component: MyModalcalcuPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'Ingrese monto' , botonn: titulo , botonn2: titulo, validarsaldo: 'si' },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n              this.pagarconqr(data.data.data, op, titulo);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n\n  }\n\n  async  pagar2qr() {\n\n    // ir directo a generar el qr\n    const modal = await this.modalController.create({\n      component: MyModalpayPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: 'PAGAR'  , monto : -1000 , tipo : 'pagoqr'},\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n             // this.cobrarconqr(data.data);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n  }\n\n  async  pagarconqr(monto, estado, titulo) {\n    // 'pagogeneraqr'\n    const modal = await this.modalController.create({\n      component: MyModalpayPage,\n      animated: true,\n      componentProps:  {moneda: this.moneda, title: titulo  , monto : monto, tipo: estado },\n\n      presentingElement: await this.modalController.getTop() , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n\n      if ( data.data.data !== 'close' ) {\n\n             // this.cobrarconqr(data.data);\n\n\n\n        }\n\n\n    });\n    return await modal.present();\n\n  }\n\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"BilleteraListPage\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n     TotalPay {{tituloxx}}\n    </ion-title>\n    <ion-buttons slot=\"end\">\n      <img alt=\"logo\" id=\"header_logo\" height=\"33\"  [src]=\"apifoto + logo1\">\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-profile-content\">\n\n<div class=\"user-photos-section\">\n  \n  <ion-row class=\"pictures-row\">\n\n    <ion-col class=\"picture-item\" size=\"2\" *ngFor=\"let item of itemsList;\">\n      <ion-card  (click)=\"operacion(item.operacion)\"  [routerLink]=\"\"  >\n        <app-aspect-ratio [ratio]=\"{w: 3, h: 2}\">\n          <app-image-shell animation=\"spinner\"  class=\"picture-image\" [src]=\"item.foto\" [alt]=\"item.title\"></app-image-shell>\n        </app-aspect-ratio>\n        <ion-card-header>\n          <ion-card-subtitle>{{item.title}}</ion-card-subtitle>\n        </ion-card-header>\n      </ion-card>\n    </ion-col>\n\n  </ion-row>\n</div>\n\n\n\n\n\n\n</ion-content>\n"]}