{"version":3,"sources":["webpack:///src/app/DESARROLLO/modals/my-modal-combo/my-modal-combo.module.ts","webpack:///src/app/DESARROLLO/modals/my-modal-combo/my-modal-combo.page.html","webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmactividad-list/frmactividad-list.module.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmactividad-list/frmactividad-create/frmactividad-create.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmactividad-list/frmactividad-list.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmactividad-list/frmactividad-list.page.html","webpack:///src/app/DESARROLLO/FORMULARIO/frmactividad-list/frmactividad-create/frmactividad-create.page.html","webpack:///src/app/DESARROLLO/modals/my-modal/my-modal.page.ts","webpack:///src/app/components/skeleton-element/skeleton-element.component.html"],"names":["MyModalComboPageModule","SkeletonElementComponent","width","height","borderRadius","rounded","noAnimated","inline","styles","this","frmactividadListPageModule","modalController","translateService","authenticationService","navParams","actionSheetController","vactor","vclase","vtipo","vetapa","vconector","variables","userinfo","tituloxx","vgrupo","apifoto","getapifoto","setTimeout","inputElement","setFocus","dismiss","get","idllave","siinicio","sifinal","Form","required","compose","pattern","subscribe","value","lpermiso","getReg","idempresa","_id","then","data","aa","controls","setValue","Number","orden","err","presentAlert","error","_ID","record","actor","nombre","actorid","id","clase","tipo","etapa","conector","tiempomin","tiempomax","idcamposimprime","camposimprime","idcamposlectura","camposlectura","idcamposmodificables","camposmodificables","estado","options","idpapa","bitacora","idafiliado","email","permiso","accion","createReg","result","valid","op","op2","presentingElement","uub","swipeToClose","backdropDismiss","animated","getTop","modal","uubx","component","componentProps","create","onWillDismiss","direccion","la","lo","present","image","Camera","getPhoto","correctOrientation","quality","allowEditing","resultType","DataUrl","source","generateFromImage","dataUrl","fotoimg","procesafoto","controlx","length","firstFileToBase64","fotoa","uploadPWA2","nativeElement","files","fileImage","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","Error","click","actionSheet","header","cssClass","buttons","text","role","icon","handler","takePicture2","takePicture","comp","catalogot","frmt","labelx","sigraba","filtroformularioconsulta","arrry","arrry2","arrry3","split","idcampos","idcamposmodificables2","formularioconsulta","grabax","record2","frm","titlex","datax","nombres","correos","routerOutlet","router","alertController","showAgeFilter","showmenu","items","viewType","efecto","seguro","msg","currentSegment","searchSubject","ReplaySubject","getCurrentNavigation","extras","state","getcopiauser","title","searchQuery","rangeForm","dual","lower","upper","pideregistros","event","selectedCategory","detail","itemsList","i2","next","query","filterList","list","filter","item","toLowerCase","includes","alert","inputs","name","type","label","checked","todo","console","log","arr","navigate","user","idllave0","title2","message","blah","deleteReg","nativeEl","target","complete","disabled","MyModalPage","mapsAPILoader","ngZone","zoom","address","latitude","longitude","load","setCurrentLocationa","setCurrentLocation2a","geoCoder","google","maps","Geocoder","autocomplete","places","Autocomplete","searchElementRef","types","addListener","run","place","getPlace","geometry","location","lat","lng","getAddress","setCurrentLocationa33","watchId","Geolocation","clearWatch","isPluginAvailable","watchPosition","timeout","enableHighAccuracy","maximumAge","coords","e","substring","indexOf","$event","geocode","results","status","formatted_address","window"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\n\n\nimport { MyModalComboPage } from './my-modal-combo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule ,\n    IonicModule, RouterModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MyModalComboPage],\n  entryComponents: [\n    MyModalComboPage\n  ],\n})\nexport class MyModalComboPageModule {}\n","\n<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n          <ion-buttons slot=\"end\">\n            <ion-button [hidden]=\"grabax\" title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n              <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n            </ion-button>\n            <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros()\">\n              <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n            </ion-button>\n                  <ion-button (click)=\"closeModal()\">\n                     <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                  </ion-button>\n                 \n          </ion-buttons>\n          <ion-title>{{tituloxx}}</ion-title>\n         \n  </ion-toolbar>   \n  <ion-toolbar class=\"filters-toolbar\">\n    <ion-row class=\"searchbar-row\" align-items-center>\n      <ion-col>\n        <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n      </ion-col>\n\n    </ion-row>\n   \n  </ion-toolbar>\n\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <ion-list *ngIf=\"tmultiple===true\"  >\n    <ion-item>\n      <ion-label><strong>Seleccionar Todos</strong></ion-label>\n      <ion-checkbox slot=\"start\" \n      [(ngModel)]=\"masterCheck\"\n      [indeterminate]=\"isIndeterminate\"\n        (click)=\"checkMaster($event)\"></ion-checkbox>\n    </ion-item>\n  </ion-list>\n  <ion-list class=\"ion-no-margin\">  \n\n\n    <ion-item class=\"ionic-selectable-item\"  button=\"true\"   detail=\"false\" *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n      <ion-label *ngIf=\"bloquear===item._id\" style=\"text-decoration: underline;\" color=\"danger\" class=\"ion-text-wrap\">\n       \n      Actual:  {{item.nombre}} \n      \n     \n      </ion-label>\n        <ion-label *ngIf=\"bloquear!==item._id\" (click)=\"selectitem(item)\" class=\"ion-text-wrap\">\n       \n        \n          <span *ngIf=\"getKeys(item)\">\n            <div  class=\"first-letter\" *ngFor=\"let key of keys\" [innerHtml]=\"key\">\n               \n            \n         \n            </div> \n          </span>\n        \n       \n        </ion-label>\n        <ion-checkbox slot=\"start\" *ngIf=\"tmultiple===true\"  \n        [(ngModel)]=\"item.isChecked\" \n        (ionChange)=\"checkEvent()\"></ion-checkbox>\n\n     \n    \n\n      <ion-button [hidden]=\"grabax\" title=\"{{ 'ELIMINARM' | translate }}\" \n      class=\"ionic-selectable-item-button\" slot=\"end\" fill=\"outline\"\n      (click)=\"deleteRecord( item)\">\n      <ion-icon slot=\"icon-only\" ios=\"create\" md=\"trash-sharp\"></ion-icon>\n    </ion-button>\n    <ion-button [hidden]=\"grabax\" title=\"{{ 'ACTUALIZARM' | translate }}\"\n      class=\"ionic-selectable-item-button\" slot=\"end\" fill=\"outline\"\n      (click)=\"updateRecord( item)\">\n      <ion-icon slot=\"icon-only\" ios=\"create\" md=\"create-sharp\"></ion-icon>\n    </ion-button>\n\n\n     \n    </ion-item>\n  </ion-list>\n</ion-content>\n\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\nimport { frmactividadCreatePage } from './frmactividad-create/frmactividad-create.page';\nimport { frmactividadListPage } from './frmactividad-list.page';\nimport { MyModalComboPageModule } from '../../modals/my-modal-combo/my-modal-combo.module';\n@NgModule({\n  declarations: [\n    frmactividadListPage, frmactividadCreatePage\n  ],   \n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule, MyModalComboPageModule,\n    RouterModule.forChild([{ path: '', component: frmactividadListPage }]), TranslateModule.forChild(),\n  ],\n  entryComponents: [\n    frmactividadCreatePage\n  ],\n})\nexport class frmactividadListPageModule {}\n","import { Component, OnInit , ViewChild ,  ElementRef} from '@angular/core';\nimport { ModalController , NavParams , ActionSheetController, IonInput } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthenticationService } from '../../../services/Authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MyModalPage } from '../../../modals/my-modal/my-modal.page';\nimport { MyModalComboPage } from './../../../modals/my-modal-combo/my-modal-combo.page';\nimport {Plugins,  CameraResultType,  CameraSource} from '@capacitor/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n@Component({\n  selector: 'app-frmactividad-create',\n  templateUrl: './frmactividad-create.page.html',\n  styleUrls: ['./frmactividad-create.page.scss'],\n})\nexport class frmactividadCreatePage implements OnInit {\n@ViewChild('inputId', {  static: false })  inputElement: IonInput;\n @ViewChild('fotoa', {static: true}) fotoa: ElementRef;\n  public vactor: any = [];\n  public vclase: any = [];\n  public vtipo: any = [];\n  public vetapa: any = [];\n  public vconector: any = [];\n  Form: FormGroup;\n // @ViewChild('createForm', { static: false }) createForm: FormGroupDirective;\n  variables: any = [];\n  userinfo: any = [];\n  idllave: any ;\n  actorid: any;\n  tituloxx = '';\n  idcamposimprime: any;\n  idcamposlectura: any;\n  idcamposmodificables: any;\n  siinicio: any;\n  sifinal: any;\n  vgrupo: any = [];\n  _ID: any;\n  lpermiso: any;\n  apifoto: String ;\n  fotoimg: SafeResourceUrl;\n  constructor(\n    private modalController: ModalController,\n    public translateService: TranslateService    , private authenticationService: AuthenticationService,\n    private navParams: NavParams , public actionSheetController: ActionSheetController\n  ) { this.apifoto = this.authenticationService.getapifoto(); }\n  ngAfterViewInit() {    setTimeout(() => {       this.inputElement.setFocus();  }, 400); }\n  dismissModal() {     this.modalController.dismiss('close');      }\n  ionViewDidEnter(): void {               }\n  ngOnInit(): void {\n    this.variables = this.navParams.get('variables');\n    this.userinfo = this.navParams.get('userinfo');\n    this.idllave =  this.navParams.get('idllave');\n    this.siinicio =  this.navParams.get('siinicio');\n    this.sifinal =  this.navParams.get('sifinal');\n\n    this.tituloxx =  this.navParams.get('title');\n    this.Form = new FormGroup({\n       'orden': new FormControl('', Validators.required),\n       'actor': new FormControl('', Validators.required),\n       'clase': new FormControl('', Validators.required),\n       'nombre': new FormControl('', Validators.compose([Validators.required, Validators.pattern('[a-zA-Z0-9-_()áéíóúÁÉÍÓÚ#*$!? ñÑ&+-/.]*')])),\n       'tipo': new FormControl('', Validators.required),\n       'etapa': new FormControl('', Validators.required),\n       'conector': new FormControl('', Validators.required),\n       'tiempomin': new FormControl('', Validators.required),\n       'tiempomax': new FormControl('', Validators.required),\n'camposimprime': new FormControl(''),\n'camposmodificables': new FormControl(''),\n'camposlectura': new FormControl(''),\n       'estado': new FormControl('', Validators.required),\n    });\n    if (this.navParams.get('record') == null) {\n\n       this.translateService.get('NUEVOM').subscribe((value) => {   this.tituloxx = value + ' ' + this.tituloxx; this.lpermiso = value; });\n       this.authenticationService.getReg('todos/orden/' + this.userinfo[0].idempresa._id + '/' +  this.idllave, 'frmactividads', 0).then((data) => {\n        if (data) {\n         const aa: any = data;\n         setTimeout(() => {      this.Form.controls['orden'].setValue(Number(aa.orden) );\n\n         if (this.siinicio === '0') {\n  this.Form.controls['clase'].setValue('INICIO');\n} else {\n  this.Form.controls['clase'].setValue('NORMAL');\n}\n\n\n         this.Form.controls['tipo'].setValue('EJECUCIÓN');\n         this.Form.controls['etapa'].setValue('INGRESO');\n         this.Form.controls['conector'].setValue('INICIO');\n         this.Form.controls['tiempomin'].setValue('0');\n         this.Form.controls['tiempomax'].setValue('0');\n        }, 600);\n\n\n\n        }\n  }, (err) => {\n    this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n  });\n    } else {\n       this.translateService.get('ACTUALIZAM').subscribe((value) => {this.tituloxx = value + ' ' + this.tituloxx; this.lpermiso = value; });\n       this._ID \t\t\t\t=\tthis.navParams.data.record._id;\n       this.Form.controls['orden'].setValue(this.navParams.data.record.orden);\n            this.Form.controls['actor'].setValue(this.navParams.data.record.actor.nombre);\n            this.actorid = this.navParams.data.record.actor.id;\n            this.Form.controls['clase'].setValue(this.navParams.data.record.clase);\n       this.Form.controls['nombre'].setValue(this.navParams.data.record.nombre);\n            this.Form.controls['tipo'].setValue(this.navParams.data.record.tipo);\n            this.Form.controls['etapa'].setValue(this.navParams.data.record.etapa);\n            this.Form.controls['conector'].setValue(this.navParams.data.record.conector);\n       this.Form.controls['tiempomin'].setValue(this.navParams.data.record.tiempomin);\n       this.Form.controls['tiempomax'].setValue(this.navParams.data.record.tiempomax);\n       this.Form.controls['orden'].setValue(this.navParams.data.record.orden);\n       this.idcamposimprime = this.navParams.data.record.camposimprime.id;\n       this.idcamposlectura = this.navParams.data.record.camposlectura.id;\n       this.idcamposmodificables = this.navParams.data.record.camposmodificables.id;\n\n       this.Form.controls['camposimprime'].setValue(this.navParams.data.record.camposimprime.nombre);\n       this.Form.controls['camposlectura'].setValue(this.navParams.data.record.camposlectura.nombre);\n       this.Form.controls['camposmodificables'].setValue(this.navParams.data.record.camposmodificables.nombre);\n\n       this.Form.controls['estado'].setValue(this.navParams.data.record.estado);\n    }\n  }\n  // onSgrupoChange(selectedValue: any) {    this.sgrupo = selectedValue.detail.value ;(ionChange)='onSgrupoChange($event)'   }\n  submitForm() {\n    const   options: any\t     = {\n       idempresa: this.userinfo[0].idempresa._id,\n        idpapa: this.idllave,\n       orden  : this.Form.controls['orden'].value,\n       actor  : {id: this.actorid , nombre : this.Form.controls['actor'].value},\n       clase  : this.Form.controls['clase'].value,\n       nombre  : this.Form.controls['nombre'].value,\n       tipo  : this.Form.controls['tipo'].value,\n       etapa  : this.Form.controls['etapa'].value,\n       conector  : this.Form.controls['conector'].value,\n       tiempomin  : this.Form.controls['tiempomin'].value,\n       tiempomax  : this.Form.controls['tiempomax'].value,\n\n       estado  : this.Form.controls['estado'].value,\n       camposimprime : {id: this.idcamposimprime, nombre: this.Form.controls['camposimprime'].value} ,\n       camposlectura : {id: this.idcamposlectura, nombre: this.Form.controls['camposlectura'].value} ,\n       camposmodificables : {id: this.idcamposmodificables, nombre: this.Form.controls['camposmodificables'].value} ,\n       bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n       email: this.userinfo[0].email , permiso : this.lpermiso, accion: this.tituloxx}\n   };\n   if (this.navParams.get('record') == null) {\n        if (options) {\n          this.authenticationService.createReg('', options, 'frmactividads').then((result) => {\n            if (!this.Form.valid) { return; }\n            this.modalController.dismiss('ok');\n        }, (err) => {\n          this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n        });\n        }\n   } else {\n    if (options) {\n      this.authenticationService.createReg(this._ID, options, 'frmactividads').then((result) => {\n         if (!this.Form.valid) { return; }\n         this.modalController.dismiss('ok');\n     }, (err) => {\n      this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n     });\n  }}\n  }\n  async dacomponente(op, op2) {\n        let uub = '';\n        if ( op === 'ubicacion') {uub = this.Form.controls['ubicacion'].value; }\n        const modal = await this.modalController.create({\n          component: MyModalPage,      swipeToClose: false,    backdropDismiss: false,     animated: true,\n          presentingElement: await this.modalController.getTop(),\n          componentProps:  { variables:  this.variables, record: null, userinfo: this.userinfo, uubx : uub}\n          // , cssClass: 'modal-fullscreen'\n        });\n        modal.onWillDismiss().then((data) => {\n             if ( data.data === 'close' ) {     }      else      {\n             if (op === 'direccion') {\n              this.Form.controls['direccion'].setValue(data.data.direccion);\n             } else {\n              this.Form.controls['ubicacion'].setValue(data.data.direccion + ' {' + data.data.la + '°' + data.data.lo + '}');\n             }\n            }\n        });\nreturn await modal.present();\n      }\n  /*************************************************+++++FOTOS */\n  async takePicture(op) {\n  const image = await Plugins.Camera.getPhoto({\n  correctOrientation: true,\n            height: 200,\n            width: 200,\n                quality: 60,\n  allowEditing: true,\n            resultType: CameraResultType.DataUrl,\n            source: CameraSource.Camera\n          });\n          this.authenticationService.generateFromImage(image.dataUrl, 200, 200, 0.5, data => {\n            switch (op) {\n              case 'fotoa': this.fotoimg = data;   this.Form.controls['foto'].setValue( this.authenticationService.procesafoto(this.Form.controls['foto'].value)); break;\n                default:\n            }\n        });\n        }\n  uploadPWA2(op , controlx) {\n         const fileList: FileList = controlx;\n         if (fileList && fileList.length > 0) {\n                 this.firstFileToBase64(fileList[0]).then((result: string) => {\n                 this.authenticationService.generateFromImage(result, 200, 300, 0.5, data => {\n                 switch (op) {\n                         case 'fotoa':  this.fotoimg = data;    this.Form.controls['foto'].setValue( this.authenticationService.procesafoto(this.Form.controls['foto'].value)); break;\n                          default:\n                  }\n                 });\n                 }, (err: any) => {\n                 switch (op) {\n                 case 'fotoa':  this.fotoimg = null;  this.Form.controls['foto1'].setValue('');  break;\n                 default:\n                 }\n                 });\n  }}\n  uploadPWA(op) {\n  switch (op) {\n  case 'fotoa':  if (this.fotoa == null ) { return; }\n  this.uploadPWA2(op , this.fotoa.nativeElement.files); break;\n  default:\n  }\n  }\n  private firstFileToBase64(fileImage: File): Promise<{}> {\n  return new Promise((resolve, reject) => {\n  const fileReader: FileReader = new FileReader();\n  if (fileReader && fileImage != null) {\n  fileReader.readAsDataURL(fileImage);\n  fileReader.onload = () => {\n  resolve(fileReader.result);\n  };\n  fileReader.onerror = (error) => {\n  reject(error);\n  };\n  } else {\n  reject(new Error('No file found'));\n  }\n  });\n  }\n        async takePicture2(op) {\n  if ( op === 'fotoa')  {     this.fotoa.nativeElement.click();  }\n        }\n        async fotodatos( op ) {\n          const actionSheet = await this.actionSheetController.create({\n            header: 'Foto',\n            cssClass: 'my-custom-class',\n            buttons: [{   text: 'Galeria',  role: 'destructive',  icon: 'image-outline',\n              handler: () => {\n                this.takePicture2(op);\n              }\n            }, {\n              text: 'Camara',\n              icon: 'camera-outline',\n              handler: () => {\n                this.takePicture(op);\n              }\n            }]\n          });\n          await actionSheet.present();\n        }\n\n        \nasync combodatoslimpia(comp)\n{\n  this.Form.controls[comp].setValue('');\n\n  if (comp === 'camposmodificables') {\n  \n    this.idcamposmodificables = '';\n  } else {\n    if (comp === 'camposimprime') {\n     \n      this.idcamposimprime = '';\n    } else {\n  if (comp === 'camposlectura') {\n   \n    this.idcamposlectura ='';\n  } else {\n\n    if (comp === 'actor') {\n   \n      this.Form.controls['nombre'].setValue('');\n      this.actorid = '';\n    } \n  }\n\n}\n  }\n}\n      /****************************************COMBO DE DATOS */\n      async combodatos( op ,  catalogot, frmt, comp, labelx, sigraba) {\n\n\n\n      const filtroformularioconsulta = this.idllave + '/' + 'camposformulario';\n      const formularioconsulta = 'frmmovilds';\n\n\n        let arrry: any = [];\n        let arrry2: any = [];\n        let arrry3: any = [];\n        if (comp === 'camposimprime') {\n         if ( this.idcamposmodificables) { arrry2 = this.idcamposmodificables.split(';'); }\n        if (this.idcamposimprime) {  arrry = this.idcamposimprime.split(';');   }\n        }\n\n        if (comp === 'camposlectura') {\n          if ( this.idcamposmodificables) { arrry3 = this.idcamposmodificables.split(';'); }\n          if (this.idcamposlectura) {  arrry = this.idcamposlectura.split(';');         }\n          }\n\n\n          if (comp === 'camposmodificables') {\n            if (this.idcamposmodificables) {  arrry = this.idcamposmodificables.split(';');\n            }\n            }\n\n          const modal = await this.modalController.create({\n            component: MyModalComboPage,   swipeToClose: false,     backdropDismiss: false,    animated: true,\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {catalogot: catalogot, idcampos: arrry, idcamposmodificables: arrry2, idcamposmodificables2: arrry3,\n              filtroformularioconsulta: filtroformularioconsulta, formularioconsulta: formularioconsulta, grabax: sigraba , variables:  this.variables, userinfo: this.userinfo\n              ,  record2 : null , op:  catalogot, frm: frmt, idllave : this.idllave, titlex: 'Buscar ' + labelx}\n            // , cssClass: 'modal-fullscreen'\n          });\n          modal.onWillDismiss().then((data) => {\n            let datax: any = [];\n            datax = data;\n    if (datax.data !==  'close')       {\n        if (datax.data) {\n\n\n              if (comp === 'camposmodificables') {\n                this.Form.controls[comp].setValue(datax.data.nombres);\n                this.idcamposmodificables = datax.data.correos;\n              } else {\n                if (comp === 'camposimprime') {\n                  this.Form.controls[comp].setValue(datax.data.nombres);\n                  this.idcamposimprime = datax.data.correos;\n                } else {\n              if (comp === 'camposlectura') {\n                this.Form.controls[comp].setValue(datax.data.nombres);\n                this.idcamposlectura = datax.data.correos;\n              } else {\n\n                if (comp === 'actor') {\n                  this.Form.controls[comp].setValue(datax.data.nombre);\n                  this.Form.controls['nombre'].setValue(datax.data.nombre);\n                  this.actorid = datax.data._id;\n                } else {\n\n                this.Form.controls[comp].setValue(datax.data.nombre);\n\n              }}\n          }}\n\n\n\n            } else {        this.Form.controls[comp].setValue('');\n\n\n\n          }\n          }\n});\n          return await modal.present();\n        }\n}\n","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { frmactividadCreatePage } from './frmactividad-create/frmactividad-create.page';\n@Component({\nselector: 'page-frmactividad-list',\ntemplateUrl: 'frmactividad-list.page.html',\nstyleUrls: ['./frmactividad-list.page.scss'],\n})\nexport class frmactividadListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false; showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidllave: any;\nviewType = 'grid';\ntituloxx = '';\nefecto = 0;\nseguro = '';\nsiinicio = 0;\nsifinal=0;\nmsg = '';\napifoto: String;\nitemsList: Array<any>;\npublic currentSegment = 'Todos';\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {  this.apifoto = this.authenticationService.getapifoto();\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nngOnInit() {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.tituloxx = this.router.getCurrentNavigation().extras.state.title ;\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value;  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });\n    this.currentSegment = 'todos';\n    this.pideregistros( this.currentSegment);\n  }\n  filterContacts(event: any) {\n    const selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n    this.pideregistros(selectedCategory);\n  }\n  pideregistros0() {\n   this.pideregistros(this.currentSegment);\n  }\n  pideregistros(op) {\n       this.itemsList = [];\n       this.efecto = 0 ;\n      // this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id + '/' + this.idllave, 'frmactividads', 0).then((data) => {\n       this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id + '/' + this.idllave, 'frmactividads', 0).then((data) => {\n       this.efecto = 1;\n       this.items =  data;\n       for (let i2 = 0; i2 <  this.items.length; i2++) {\n         if (this.items === 'INICIO') {\n          this.siinicio = 1;\n         }\n         if (this.items === 'FINAL') {\n          this.sifinal = 1;\n         }\n       }\n       this.itemsList = this.items;\n }, (err) => {\n   this.authenticationService.presentAlert(err.error , this.msg , '');\n });\n  }\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n  async otrasop(item: any) {\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n       header: 'Seleccione Opción',\n       inputs: [\n         {\n           name: 'Acciones',\n           type: 'radio',\n           label: 'Acciones',\n           checked: true,\n           value: '/frmaccionesListPage°Acciones ->' + item.nombre +'°'+ item.nombre,\n         }\n       ],\n       buttons: [\n         {\n           text: 'Cancel',\n           role: 'cancel',\n           cssClass: 'secondary',\n           handler: (todo) => {\n             console.log(todo);\n           }\n         }, {\n           text: 'Ok',\n           handler: (todo) => {\n             const arr = todo.split('°');\n             const navigationExtras: NavigationExtras = {\n               state: {\n                 variables: this.variables,\n                 user: null,\n                 idllave: item._id,\n                 idllave0: this.idllave,\n                 title: arr[1],\n                 title2: arr[2]\n               }\n             };\n             this.router.navigate([arr[0]], navigationExtras);\n           }\n         }\n       ]\n     });\n     await alert.present();\n }\n   async deleteRecord(item: any) {\n    const alert = await this.alertController.create({\n      header: this.seguro,\n      message: '',\n      buttons: [\n        {\n          text: 'No',\n         cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n           text: 'Si',\n           handler: () => {\n             const recordID: string\t\t= item._id;\n             this.authenticationService.deleteReg(recordID + '/' + this.userinfo[0].email + '/' + this.userinfo[0].idempresa._id  + '/'\n             + 'na' , 'frmactividads').then((data) => {\n               this.pideregistros( this.currentSegment);\n               }, (err) => {\n                 this.authenticationService.presentAlert(err.error, this.msg, '');\n             });\n           }\n         }\n       ]\n     });\n     await alert.present();\n   }\n  async updateRecord(item: any) {\n    const modal = await this.modalController.create({\n      component: frmactividadCreatePage,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps:  {sifinal: this.sifinal, siinicio: this.siinicio, variables:  this.variables, record: item, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n      this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n}\n   async  addRecord() {\n    const modal = await this.modalController.create({\n      component: frmactividadCreatePage,\n      swipeToClose: false,\n      backdropDismiss: false,\n     animated: true,\n      presentingElement: await this.modalController.getTop(),\n      componentProps:  { sifinal: this.sifinal, siinicio: this.siinicio,variables:  this.variables, record: null, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n        this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n   }\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n}\n"," <ion-header>\n <ion-toolbar color=\"primary\">\n   <ion-buttons slot=\"start\">\n    <ion-back-button defaultHref=\"FormsListPage\"></ion-back-button>\n   </ion-buttons>\n   <ion-title>\n     {{tituloxx}}\n   </ion-title>\n   <ion-buttons slot=\"end\">\n     <ion-button title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n       <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n     </ion-button>\n     <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n       <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n       <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n       <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n     </ion-button>\n   </ion-buttons>\n </ion-toolbar>\n <ion-toolbar class=\"filters-toolbar\">\n   <ion-row class=\"searchbar-row\" align-items-center>\n     <ion-col>\n       <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n     </ion-col>\n     <ion-col [hidden]=\"!showAgeFilter\" class=\"call-to-action-col\">\n       <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" title=\" {{ 'FILTROM' | translate }}\" (click)=\"showAgeFilter = !showAgeFilter\">\n         <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n       </ion-button>\n     </ion-col>\n   </ion-row>\n   <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n     <ion-row class=\"range-item-row\">\n       <ion-col size=\"12\">\n         <div class=\"range-header\">\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n           <span class=\"range-label\">Filter by age</span>\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n         </div>\n       </ion-col>\n       <ion-col size=\"12\">\n         <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n       </ion-col>\n     </ion-row>\n   </form>\n </ion-toolbar>\n</ion-header>\n<ion-content class=\"user-friends-content\">\n <ion-item-divider sticky>\n   <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n </ion-item-divider>\n <ion-segment (ionChange)=\"filterContacts($event)\" value=\"todos\">\n   <ion-segment-button value=\"todos\" checked>\n     {{ 'TODOSM' | translate }}\n   </ion-segment-button>\n   <ion-segment-button value=\"Activo\">\n     {{ 'ACTIVOSM' | translate }}\n    </ion-segment-button>\n   <ion-segment-button value=\"Inactivo\">\n     {{ 'INACTIVOSM' | translate }}\n   </ion-segment-button>\n </ion-segment>\n <ion-list *ngIf=\"efecto === 0\" >\n   <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n     <ion-label>\n       <skeleton-element></skeleton-element>\n       <skeleton-element></skeleton-element>\n       <skeleton-element width=\"67%\"></skeleton-element>\n     </ion-label>\n   </ion-item>\n </ion-list>\n <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n   <ion-item  *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n<ion-grid>\n<ion-row>\n  <ion-col  (click)=\"updateRecord(item)\" size=\"12\">\n     <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n    <ion-label class=\"ion-text-wrap\">\n        <ion-note slot=\"end\">No. {{i+1}}</ion-note> <br>\n<p>\n         <strong>Orden:</strong> {{item.orden}} <br>  \n        <strong> Actor:</strong> {{item.actor.nombre}} <br>   \n        <strong> Clase:</strong> {{item.clase}} <br>   \n        <strong>Nombre:</strong> {{item.nombre}} <br>    \n    \n\n     \n       <strong> Campos solo lectura:</strong> {{item.camposlectura.nombre}}<br>   \n       <strong> Campos modificables:</strong> {{item.camposmodificables.nombre}}<br>   \n       <strong> Campos de impresion:</strong> {{item.camposimprime.nombre}}<br>   \n    \n</p>   <ion-badge color=\"medium\">{{item.estado}}</ion-badge>\n     </ion-label>\n</ion-col>\n</ion-row>\n  <ion-row>\n<ion-col size=\"12\">\n      <ion-toolbar  color=\"transparent\">\n        <ion-buttons slot=\"secondary\">\n          <ion-button  title=\"{{ 'ELIMINARM' | translate }}\"  (click)=\"deleteRecord(item)\" >\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n   </ion-item>\n </ion-list>\n <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n   <ion-row>\n     <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n       <ion-card  >\n         <ion-row class=\"user-stats-wrapper user-details-wrapper\">\n           <ion-col>\n             <span class=\"user-stat-value\">No.</span>\n             <span class=\"user-stat-name\">{{i+1}} </span>\n           </ion-col>\n           <ion-col>\n             <span class=\"user-stat-value\">{{item.estado}} </span>\n           </ion-col>\n         </ion-row>\n         <ion-item   [routerLink]=\"\">\n           <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n           <ion-label (click)=\"updateRecord(item)\"   class=\"ion-text-wrap\">\n <p> \n              <strong> Orden:</strong> {{item.orden}} <br>\n              <strong> Actor:</strong> {{item.actor.nombre}} <br>   \n              <strong> Clase:</strong> {{item.clase}} <br>   \n              <strong>Nombre:</strong> {{item.nombre}} <br>    \n            \n              <strong>Campos solo lectura:</strong> {{item.camposlectura.nombre}} <br> \n              <strong>Campos modificables:</strong> {{item.camposmodificables.nombre}} <br> \n              <strong>Campos de impresion:</strong> {{item.camposimprime.nombre}} <br> \n      \n </p>    </ion-label>\n         </ion-item>\n         <ion-card-content>\n         </ion-card-content>\n         <ion-row no-padding>\n           <ion-col  size=\"12\" >\n      <ion-toolbar  color=\"transparent\">\n        \n\n\n      <ion-badge>{{item.cuantos}} Acciones</ion-badge>\n     \n \n\n        <ion-buttons slot=\"secondary\">\n          <ion-button  title=\"{{ 'ELIMINARM' | translate }}\"  (click)=\"deleteRecord(item)\" >\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n           </ion-col>\n         </ion-row>\n       </ion-card>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n   {{ 'NODATOS' | translate }}  \n </h3>\n <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n   <ion-infinite-scroll-content\n     loadingSpinner=\"bubbles\"\n     loadingText=\"Espere un momento...\">\n   </ion-infinite-scroll-content>\n </ion-infinite-scroll>\n</ion-content>\n","<form class=\"create-user-form ion-page\" [formGroup]=\"Form\" >\n<ion-header>\n        <ion-toolbar color=\"primary\">\n                <ion-buttons slot=\"end\">\n                        <ion-button (click)=\"dismissModal()\">\n                           <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                        </ion-button>\n                </ion-buttons>\n                <ion-title>{{tituloxx}}</ion-title>\n        </ion-toolbar>\n</ion-header>\n<ion-content class=\"create-form-content\">\n    <section class=\"user-details-fields fields-section\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Orden<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-input type=\"number\" #inputId    inputMode=\"Number\" clearInput=\"true\" formControlName=\"orden\" required></ion-input>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('orden').hasError('required') && (Form.get('orden').dirty || Form.get('orden').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un orden valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n\n              <ion-label  >Actor<ion-text color=\"danger\">*</ion-text></ion-label>\n                      <ion-input #inputId  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-actor-plantilla','frmcats','actor','actor','frmactors')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"actor\" required></ion-input>\n                             <ion-buttons slot=\"end\">\n                                <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('actor')\">\n                                        <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                                      </ion-button>\n                              <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-actor-plantilla','frmcats','actor','actor','frmactors')\">\n                                      <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                              </ion-button>\n                             </ion-buttons>\n     </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('actor').hasError('required') && (Form.get('actor').dirty || Form.get('actor').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un actor valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  >Clase<ion-text color=\"danger\">*</ion-text></ion-label>\n                      <ion-input #inputId  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-clase-plantilla','frmcats','clase','Clase','nograba')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"clase\" required></ion-input>\n                             <ion-buttons slot=\"end\">\n                                <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('clase')\">\n                                        <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                                      </ion-button>\n                              <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-clase-plantilla','frmcats','clase','Clase','nograba')\">\n                                      <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                              </ion-button>\n                             </ion-buttons>\n     </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('clase').hasError('required') && (Form.get('clase').dirty || Form.get('clase').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un clase valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Descripción de actividad<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-textarea  rows='5' inputMode=\"text\" #inputId  clearInput=\"true\" formControlName=\"nombre\" required></ion-textarea>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('nombre').hasError('required') && (Form.get('nombre').dirty || Form.get('nombre').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese una descripción de la actividad valida</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  >Tipo<ion-text color=\"danger\">*</ion-text></ion-label>\n                      <ion-input #inputId  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-tipo-plantilla','frmcats','tipo','Tipo','nograba')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"tipo\" required></ion-input>\n                             <ion-buttons slot=\"end\">\n                                <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('tipo')\">\n                                        <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                                      </ion-button>\n                              <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-tipo-plantilla','frmcats','tipo','Tipo','nograba')\">\n                                      <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                              </ion-button>\n                             </ion-buttons>\n     </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('tipo').hasError('required') && (Form.get('tipo').dirty || Form.get('tipo').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un tipo valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  >Etapa<ion-text color=\"danger\">*</ion-text></ion-label>\n                      <ion-input #inputId  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-etapa-plantilla','frmcats','etapa','Etapa','sigraba')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"etapa\" required></ion-input>\n                             <ion-buttons slot=\"end\">\n                                <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('etapa')\">\n                                        <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                                      </ion-button>\n                              <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-etapa-plantilla','frmcats','etapa','Etapa','sigraba')\">\n                                      <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                              </ion-button>\n                             </ion-buttons>\n     </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('etapa').hasError('required') && (Form.get('etapa').dirty || Form.get('etapa').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un etapa valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  >Conector<ion-text color=\"danger\">*</ion-text></ion-label>\n                      <ion-input #inputId  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-conector-plantilla','frmcats','conector','Conector','nograba')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"conector\" required></ion-input>\n                             <ion-buttons slot=\"end\">\n                                <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('conector')\">\n                                        <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                                      </ion-button>\n                              <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-conector-plantilla','frmcats','conector','Conector','nograba')\">\n                                      <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                              </ion-button>\n                             </ion-buttons>\n     </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('conector').hasError('required') && (Form.get('conector').dirty || Form.get('conector').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un conector valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Tiemp minimo de ejecución<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-input inputMode=\"text\" #inputId  clearInput=\"true\" formControlName=\"tiempomin\" required></ion-input>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('tiempomin').hasError('required') && (Form.get('tiempomin').dirty || Form.get('tiempomin').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un tiempo minimo valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Tiempo maximo de ejecución<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-input inputMode=\"text\" #inputId  clearInput=\"true\" formControlName=\"tiempomax\" required></ion-input>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('tiempomax').hasError('required') && (Form.get('tiempomax').dirty || Form.get('tiempomax').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un tiempo maximo valido</span>\n</div>\n </div>\n\n\n <ion-item class=\"input-item\">\n\n        <ion-label  >Campos Modificables</ion-label>\n                <ion-input   [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-actor-plantilla','frmcats','camposmodificables','camposmodificables','controlmultipleidnombre')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"camposmodificables\" ></ion-input>\n                       <ion-buttons slot=\"end\">\n                        <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('camposmodificables')\">\n                                <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                              </ion-button>\n                        <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-actor-plantilla','frmcats','camposmodificables','camposmodificables','controlmultipleidnombre')\">\n                                <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                        </ion-button>\n                       </ion-buttons>\n</ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('camposmodificables').hasError('required') && (Form.get('camposmodificables').dirty || Form.get('camposmodificables').touched)\">\n<ion-icon name=\"information-circle-outline\"></ion-icon>\n<span>Ingrese modificables validos</span>\n</div>\n</div>\n\n\n\n<ion-item class=\"input-item\">\n\n        <ion-label  >Campor solo lectura</ion-label>\n                <ion-input  [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-actor-plantilla','frmcats','camposlectura','camposlectura','controlmultipleidnombre')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"camposlectura\" ></ion-input>\n                       <ion-buttons slot=\"end\">\n                        <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('camposlectura')\">\n                                <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                              </ion-button>\n                        <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-actor-plantilla','frmcats','camposlectura','camposlectura','controlmultipleidnombre')\">\n                                <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                        </ion-button>\n                       </ion-buttons>\n</ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('camposlectura').hasError('required') && (Form.get('camposlectura').dirty || Form.get('camposlectura').touched)\">\n<ion-icon name=\"information-circle-outline\"></ion-icon>\n<span>Ingrese de lectura validos</span>\n</div>\n</div>\n\n\n <ion-item class=\"input-item\">\n\n        <ion-label  >Campor Impresion</ion-label>\n                <ion-input   [readonly]=\"true\" class=\"ion-text-end\"  (click)=\"combodatos(1,'1000-actor-plantilla','frmcats','camposimprime','camposimprime','controlmultipleidnombre')\" inputMode=\"text\" clearInput=\"true\" formControlName=\"camposimprime\" ></ion-input>\n                       <ion-buttons slot=\"end\">\n                        <ion-button color=\"secondary\" expand=\"full\" title='Limpiar' (click)=\"combodatoslimpia('camposimprime')\">\n                                <ion-icon slot=\"icon-only\" name=\"close-circle-outline\"></ion-icon>\n                              </ion-button>\n                        <ion-button title=\"Seleccione Información\" (click)=\"combodatos(1,'1000-actor-plantilla','frmcats','camposimprime','camposimprime','controlmultipleidnombre')\">\n                                <ion-icon slot=\"icon-only\" name=\"search-outline\"></ion-icon>\n                        </ion-button>\n                       </ion-buttons>\n</ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('actor').hasError('required') && (Form.get('actor').dirty || Form.get('actor').touched)\">\n<ion-icon name=\"information-circle-outline\"></ion-icon>\n<span>Ingrese un actor valido</span>\n</div>\n</div>\n\n\n\n\n      <ion-item class=\"input-item\">\n              <ion-label >Estado<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-select #inputId  placeholder=\"{{ 'SELECTVALORM' | translate }}\" formControlName=\"estado\">\n              <ion-select-option text-wrap value=\"Activo\">Activo</ion-select-option>\n              <ion-select-option text-wrap value=\"Inactivo\">Inactivo</ion-select-option>\n              </ion-select>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('estado').hasError('required') && (Form.get('estado').dirty || Form.get('estado').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un estado valido</span>\n</div>\n </div>\n\n     </ion-list>\n  </section>\n</ion-content>\n<ion-footer>\n  <ion-row class=\"form-actions-wrapper\">\n    <ion-col>\n      <ion-button (click)=\"submitForm()\" color=\"primary\" expand=\"block\" fill=\"outline\" type=\"submit\" [disabled]=\"!Form.valid\">CREAR</ion-button>\n      </ion-col>\n  </ion-row>\n</ion-footer>\n</form>   \n","\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { MapsAPILoader, AgmMap } from '@agm/core';\nimport { ModalController , NavParams} from '@ionic/angular';\n\nimport { Plugins, Capacitor , CallbackID} from '@capacitor/core';\nconst { Geolocation} = Plugins;\n\n\n@Component({\n  selector: 'app-my-modal',\n  templateUrl: './my-modal.page.html',\n  styleUrls: ['./my-modal.page.scss'],\n})\nexport class MyModalPage implements OnInit {\n\n\n  title = 'AGM project';\n  latitude: number;\n  longitude: number;\n  zoom = 16 ;\n  address: string;\n  uubx: string;\n  watchId: CallbackID;\n  private geoCoder;\n  tituloxx: any;\n\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n\n  constructor( private modalController: ModalController,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n    private navParams: NavParams\n  ) { }\n\n  dismissModal() {     this.modalController.dismiss('close');      }\n\n  dadireccion() {     this.modalController.dismiss({direccion: this.address, la: this.latitude, lo: this.longitude});      }\n  ngOnInit() {\n\n    this.uubx = this.navParams.get('uubx');\n\n\n\n    this.mapsAPILoader.load().then(() => {\n      if (this.uubx === '') {     this.setCurrentLocationa();      } else      {  this.setCurrentLocation2a();      }\n      this.geoCoder = new google.maps.Geocoder;\n\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: ['address']\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          if (place) {\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.getAddress(this.latitude, this.longitude);\n          }\n        });\n      });\n    });\n\n  }\n\n  loadMap() {\n    this.mapsAPILoader.load().then(() => {\n   this.setCurrentLocationa33();\n\n\n    });\n  }\n\n  clearWatch() {\n    if (this.watchId != null) {\n      Plugins.Geolocation.clearWatch({ id: this.watchId });\n    }\n  }\n  // Get Current Location Coordinates\n  setCurrentLocationa33() {\n    if (!Capacitor.isPluginAvailable('Geolocation')) {\n      console.log('Plugin geolocation not available');\n      return;\n    }\n    try {\n      this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n        if (data) {\n          this.latitude = data.coords.latitude;\n          this.longitude = data.coords.longitude;\n      \n  \n        }\n  \n    });\n  } catch (e) {\n    console.error(e);\n  }\n  \n  }\n  setCurrentLocationa() {\n  if (!Capacitor.isPluginAvailable('Geolocation')) {\n    console.log('Plugin geolocation not available');\n    return;\n  }\n  try {\n    this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n      if (data) {\n        this.latitude = data.coords.latitude;\n        this.longitude = data.coords.longitude;\n        this.getAddress(this.latitude, this.longitude);\n\n      }\n\n  });\n} catch (e) {\n  console.error(e);\n}\n\n}\n\nsetCurrentLocation2a() {\n  if (!Capacitor.isPluginAvailable('Geolocation')) {\n    console.log('Plugin geolocation not available');\n    return;\n  }\n  try {\n    this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n    this.latitude = Number( this.uubx.substring(this.uubx.indexOf('{') + 1, this.uubx.indexOf('°') ));\n    this.longitude = Number( this.uubx.substring(this.uubx.indexOf('°') + 1, this.uubx.indexOf('}')) );\n    if (this.latitude !== 0) {\n      if (this.latitude) {\n      this.getAddress(this.latitude, this.longitude);\n      }\n    }\n\n  });\n} catch (e) {\n  console.error(e);\n}\n\n}\n\n\n\n\n  markerDragEnd($event: any) {\n    if (this.latitude !== 0) {\n      if (this.latitude) {\n    this.latitude = $event.coords.lat;\n    this.longitude = $event.coords.lng;\n    this.getAddress(this.latitude, this.longitude);\n      }}\n  }\n\n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      console.log(results);\n      console.log(status);\n      if (status === 'OK') {\n        if (results[0]) {\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n\n    });\n  }\n\n  async closeModal() {\n    this.modalController.dismiss('close');\n  }\n\n}\n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n"]}