{"version":3,"sources":["webpack:///src/app/DESARROLLO/modals/my-modalscanpay/my-modalscanpay.module.ts","webpack:///src/app/DESARROLLO/modals/my-modalcreditos/my-modalcredito.page.html","webpack:///src/app/DESARROLLO/modals/my-modalcreditos/my-modalcredito.page.ts","webpack:///src/app/DESARROLLO/modals/my-modalcreditos/my-modalcredito.module.ts","webpack:///src/app/DESARROLLO/modals/my-modalscanpay/my-modalscanpay.page.html","webpack:///src/app/DESARROLLO/modals/my-modalscanpay/my-modalscanpay.page.ts"],"names":["MyModalscanpayPageModule","MyModalcreditoPage","translateService","modalController","authenticationService","navParams","title","items2","msg","userinfo","items","defaultSelectedRadio","this","getcopiauser","passcode","finalPin","mypinseguro","codpersonal","message","pageStatus","newPincount","fingerPin","num","size","s","length","tituloxx","get","metodopago","subscribe","value","seguro","pideregistros","setTimeout","selectTwo","dismiss","data","item","tpagoid","radioGroup","op","itemsList","getReg","idempresa","_id","then","err","presentAlert","error","event","detail","MyModalcreditoPageModule","MyModalscanpayPage","alertController","loadingCtrl","toastCtrl","ngZone","plt","scanActive","scanResult","loading","zoom","monto","is","window","navigator","console","log","moneda","tipo","canvasElement","canvas","nativeElement","canvasContext","getContext","videoElement","video","startScan","create","position","buttons","text","handler","open","present","stream","mediaDevices","getUserMedia","facingMode","srcObject","setAttribute","play","requestAnimationFrame","scan","bind","readyState","HAVE_ENOUGH_DATA","height","videoHeight","width","videoWidth","drawImage","imageData","getImageData","code","inversionAttempts","decryptvalue","arr","split","tokenactual","verificapago","cobronormal","fileinput","click","files","file","img","Image","onload","cobronormalreves","src","URL","createObjectURL","estado","cobronormalsinsaldo","result","Number","saldo","options","cobroservicio","nombre","direccion","bitacora","idafiliado","email","permiso","accion","createReg","StartTimer","timer","x","datat","trama","operacion","dservicio","cservicio","nodispositivo","noprov","idsuscriptor","tipocompra","tokencompra","url","tpago","idempresa0","idsuscriptor2","id","mensage","alert","cssClass","blah","arr2","seguroacepta"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MyModalscanpayPage } from './my-modalscanpay.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    IonicModule\n   \n  ],\n  declarations: [MyModalscanpayPage],\n  entryComponents: [\n    MyModalscanpayPage\n  ],\n})\nexport class MyModalscanpayPageModule {}\n","\n\n<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n  \n          <ion-buttons slot=\"end\">\n                  <ion-button (click)=\"closeModal()\">\n                     <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                  </ion-button>\n          </ion-buttons>\n          <ion-title>{{tituloxx}}</ion-title>\n         \n  </ion-toolbar>   \n\n\n\n</ion-header>\n<!-- <ion-content padding class=\"center-vertical\">-->\n<ion-content  [fullscreen]=\"true\" class=\"ion-padding\" >\n\n\n\n\n\n  <ion-item-divider  color=\"primary\">\n    <ion-label>\n      Canal de pago\n    </ion-label>\n  </ion-item-divider>\n\n\n\n  <ion-list>\n    <ion-radio-group value=\"efectivo\">\n    \n      <div  >\n        <ion-radio-group allow-empty-selection=\"true\" name=\"radio-group\" (ionChange)=\"radioSelect($event)\" #radioGroup>\n        <ion-item >\n          <ion-label> <strong>Saldo actual</strong></ion-label>\n          <ion-radio  slot=\"start\" color=\"success\" value=\"efectivo\"></ion-radio>\n        </ion-item  >\n      \n        <ion-item  *ngFor=\"let item of items;\">  \n         \n          <ion-grid [class.cardON]=\"'Activo'\" >\n            <ion-row>\n              <ion-col class=\"state\">\n                <div class=\"msg\">\n                  <span [class.ON]=\"item.estado=='Activo'\" [class.OFF]=\"item.estado=='Inactivo'\"></span>  {{item.estado}}\n                </div>\n              </ion-col>\n              <ion-col class=\"bank\">\n                {{item.banco}}\n              </ion-col>\n             \n            </ion-row>\n            <ion-row>\n              <ion-col class=\"chip\" size=\"2\">\n                <ion-img src=\"assets/img/chip.png\"></ion-img> \n              </ion-col>\n              <ion-col class=\"number3\" size='10'>\n                {{item.nombre}}\n               </ion-col>\n            </ion-row>\n            <ion-row class=\"digits\">\n              <ion-col class=\"number\">\n               ****\n              </ion-col>\n              <ion-col class=\"number\">\n                ****\n              </ion-col>\n              <ion-col class=\"number\">\n                ****\n              </ion-col>\n              <ion-col class=\"number\">\n                {{padLeadingZeros(this.authenticationService.decryptvalue(item.n4))}}\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col class=\"date\">\n                Expira: {{item.mes}} / {{item.ano}}\n              </ion-col>\n              <ion-col class=\"bank\">\n                {{item.tipo}}\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n  \n          \n          \n          <ion-radio slot=\"start\" color=\"success\" [value]=\"item._id\"></ion-radio>\n        </ion-item>\n      </ion-radio-group>\n      </div>\n   \n\n     \n    </ion-radio-group>\n\n   \n  </ion-list>\n    \n\n  <ion-button  expand=\"block\" (click)=\"pagar()\" color=\"primary\" >\n  \n  PAGAR\n    </ion-button>\n\n</ion-content>","\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { ModalController , NavParams, IonRadioGroup } from '@ionic/angular';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n\n@Component({\n  selector: 'app-my-modalcredito',\n  templateUrl: './my-modalcredito.page.html',\n  styleUrls: ['./my-modalcredito.page.scss'],\n})\nexport class MyModalcreditoPage implements OnInit {\n\t@ViewChild('radioGroup') radioGroup: IonRadioGroup\n\tForm: FormGroup;\n  title = 'AGM project';\n  passcode: any;\n  pageStatus: any;\n  codeone: any;\n  codetwo: any;\n  codethree: any;\n  codefour: any;\n  int: any;\n  items2: any  = [] ;\n  newPincount: any;\n  message: any;\n  mypinseguro: any;\n  finalPin: any;\n  tpagoid:any;\n  fingerPin: any;\n  tituloxx: any;\n  msg = '';\n  seguro: any;\n  metodopago: any;\n  userinfo: any = [];\n\n  items: any  = [] ;\n  defaultSelectedRadio = \"efectivo\";\n\nitemsList: Array<any>;\n\n  public cards: any;\n\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n\n  constructor( public translateService: TranslateService    , private modalController: ModalController, private authenticationService: AuthenticationService,\n    private navParams: NavParams\n  ) {\n\tthis.userinfo = this.authenticationService.getcopiauser();\n    this.passcode = '';\n\t  this.finalPin = '';\n\t  this.mypinseguro = this.userinfo[0].codpersonal;\n  \tthis.message = true;\n  \tthis.pageStatus = 'Enter Pin'\n  \tthis.int = 0;\n  \tthis.newPincount = 0;\n\tthis.fingerPin = false;\n\n\n  }\n\n  padLeadingZeros(num, size) {\n    let s = num +'';\n    while (s.length < size) { s = \"0\" + s; }\n    return s;\n}\n ngOnInit() {\n\n\tthis.tituloxx = this.navParams.get('title');\nthis.metodopago = this.navParams.get('metodopago');\nthis.userinfo = this.authenticationService.getcopiauser();\n\nthis.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\nthis.translateService.get('MSGM').subscribe((value) => {   this.msg = value;  });\n//this.radioGroup.value = 'efectivo'\n\nthis.pideregistros('Activo');\n\n\n\n }\n\n ngAfterViewInit() {    setTimeout(() => {      this.selectTwo();  }, 400); }\n\npagar() {\n\tthis.modalController.dismiss({data: this.metodopago, item: this.tpagoid});\n}\n  async closeModal() {\n    this.modalController.dismiss({data: 'close'});\n  }\n\n\n  selectTwo() {\n    this.radioGroup.value = 'efectivo'\n  }\n  pideregistros(op) {\n    this.itemsList = [];\n    \n  \n    this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id + '/' +  this.userinfo[0]._id, 'tarjetacreditos', 0).then((data) => {\n \n    this.items =  data;\n    this.itemsList = this.items;\n}, (err) => {\nthis.authenticationService.presentAlert(err.error , this.msg , '');\n});\n}\n\nradioSelect(event) {\n   this.tpagoid= event.detail.value\n \n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MyModalcreditoPage } from './my-modalcredito.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\nimport { environment } from '../../../../environments/environment';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule,  TranslateModule.forChild(),\n    IonicModule,\n  \n  ],\n  declarations: [MyModalcreditoPage],\n  entryComponents: [\n    MyModalcreditoPage\n  ]\n \n})\nexport class MyModalcreditoPageModule {}\n","\n\n<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n  \n          <ion-buttons slot=\"end\">\n            <ion-button title=\"Parar escaner\" (click)=\"stopScan()\" color=\"danger\" *ngIf=\"scanActive\">\n            \n              <ion-icon slot=\"start\" name=\"stop-circle-outline\"></ion-icon>\n            </ion-button>\n            <ion-button title=\"Reset\" (click)=\"reset()\" color=\"warning\" *ngIf=\"scanResult\">\n             \n              <ion-icon slot=\"start\" name=\"refresh-circle-outline\"></ion-icon>\n            </ion-button>\n\n\n            <ion-button title=\"Iniciar escaner\" (click)=\"startScan()\">\n           \n              <ion-icon slot=\"icon-only\" name=\"qr-code-outline\"></ion-icon>\n        </ion-button>\n            <ion-button title=\"leer imagen qr de galeria\" (click)=\"captureImage()\">\n                 <ion-icon slot=\"icon-only\" name=\"image-outline\"></ion-icon>\n           </ion-button>\n                  <ion-button (click)=\"closeModal()\">\n                     <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                  </ion-button>\n          </ion-buttons>\n          <ion-title>{{tituloxx}}</ion-title>\n         \n  </ion-toolbar>   \n\n\n\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <input #fileinput type=\"file\" accept=\"image/*;capture=camera\" hidden (change)=\"handleFile($event.target.files)\">\n \n  <!-- Trigger the file input -->\n\n  <br>\n \n<h3 *ngIf=\" monto !== 0\" class=\"detail-title\">Monto a cobrar: <strong> {{monto | currency:moneda}}</strong></h3>\n\n\n \n  <!-- Shows our camera stream -->\n  <video #video [hidden]=\"!scanActive\" width=\"100%\"></video>\n \n  <!-- Used to render the camera stream images -->\n  <canvas #canvas hidden></canvas>\n \n  <!-- Stop our scanner preview if active -->\n\n</ion-content>","\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport {AlertController , ToastController, ModalController , LoadingController ,  NavParams , Platform } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthenticationService } from '../../services/Authentication.service';\n\n\nimport jsQR from 'jsqr';\n\n\n@Component({\n  selector: 'app-my-modalscanpay',\n  templateUrl: './my-modalscanpay.page.html',\n  styleUrls: ['./my-modalscanpay.page.scss'],\n})\nexport class  MyModalscanpayPage implements OnInit {\n  @ViewChild('video', { static: false }) video: ElementRef;\n  @ViewChild('canvas', { static: false }) canvas: ElementRef;\n  @ViewChild('fileinput', { static: false }) fileinput: ElementRef;\n  Form: FormGroup;\n  canvasElement: any;\n  videoElement: any;\n  canvasContext: any;\n  scanActive = false;\n  scanResult = null;\n  loading: HTMLIonLoadingElement = null;\n\n  tokenactual: any;\n  tipo: any;\n  title = 'AGM project';\n  latitude: number;\n  longitude: number;\n  zoom = 16 ;\n  address: string;\n  uubx: string;\n  userinfo: any = [];\n\n  tituloxx: any;\n  moneda: any;\n  monto: any = 0;\n  private timer;\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n\n  constructor( public alertController: AlertController,  private modalController: ModalController,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController,  private authenticationService: AuthenticationService,\n\n    private ngZone: NgZone,\n    private navParams: NavParams,\n    private plt: Platform\n  ) {\n    const isInStandaloneMode = () =>\n    'standalone' in window.navigator && window.navigator['standalone'];\n  if (this.plt.is('ios') && isInStandaloneMode()) {\n    console.log('I am a an iOS PWA!');\n    // E.g. hide the scan functionality!\n  }\n\n   }\n\n  dismissModal() {     this.modalController.dismiss({data: 'close'});      }\n ngOnInit() {\n  this.userinfo = this.authenticationService.getcopiauser();\n  this.tituloxx = this.navParams.get('title');\n  this.moneda = this.navParams.get('moneda');\n  this.monto = (this.navParams.get('monto'));\n  this.tipo = this.navParams.get('tipo');\n\n\n  }\n\n  ngAfterViewInit() {\n    this.canvasElement = this.canvas.nativeElement;\n    this.canvasContext = this.canvasElement.getContext('2d');\n    this.videoElement = this.video.nativeElement;\n\n    this.startScan();\n  }\n\n  async showQrToast() {\n    const toast = await this.toastCtrl.create({\n      message: `Open ${this.scanResult}?`,\n      position: 'top',\n      buttons: [\n        {\n          text: 'Open',\n          handler: () => {\n            window.open(this.scanResult, '_system', 'location=yes');\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  reset() {\n    this.scanResult = null;\n  }\n\n  stopScan() {\n    this.scanActive = false;\n  }\n\n\n  async startScan() {\n    // Not working on iOS standalone mode!\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: { facingMode: 'environment' }\n    });\n\n    this.videoElement.srcObject = stream;\n    // Required for Safari\n    this.videoElement.setAttribute('playsinline', true);\n\n    this.loading = await this.loadingCtrl.create({});\n    await this.loading.present();\n\n    this.videoElement.play();\n    requestAnimationFrame(this.scan.bind(this));\n  }\n\n  async scan() {\n    if (this.videoElement.readyState === this.videoElement.HAVE_ENOUGH_DATA) {\n      if (this.loading) {\n        await this.loading.dismiss();\n        this.loading = null;\n        this.scanActive = true;\n      }\n\n      this.canvasElement.height = this.videoElement.videoHeight;\n      this.canvasElement.width = this.videoElement.videoWidth;\n\n      this.canvasContext.drawImage(\n        this.videoElement,\n        0,\n        0,\n        this.canvasElement.width,\n        this.canvasElement.height\n      );\n      const imageData = this.canvasContext.getImageData(\n        0,\n        0,\n        this.canvasElement.width,\n        this.canvasElement.height\n      );\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: 'dontInvert'\n      });\n\n      if (code) {\n        this.scanActive = false;\n        this.scanResult = this.authenticationService.decryptvalue(code.data);\n\n        const arr = this.scanResult.split('°');\n\n        this.tokenactual = arr[6];\n        if (this.tipo === 'pagoqr' ) {\n          this.verificapago(arr);\n        } else {\n          this.cobronormal(arr);\n\n        }\n\n\n\n      } else {\n        if (this.scanActive) {\n          requestAnimationFrame(this.scan.bind(this));\n        }\n      }\n    } else {\n      requestAnimationFrame(this.scan.bind(this));\n    }\n  }\n\n  captureImage() {\n    this.fileinput.nativeElement.click();\n  }\n\n  handleFile(files: FileList) {\n    const file = files.item(0);\n\n    const img = new Image();\n    img.onload = () => {\n      this.canvasContext.drawImage(img, 0, 0, this.canvasElement.width, this.canvasElement.height);\n      const imageData = this.canvasContext.getImageData(\n        0,\n        0,\n        this.canvasElement.width,\n        this.canvasElement.height\n      );\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: 'dontInvert'\n      });\n\n      if (code) {\n        this.scanResult =this.authenticationService.decryptvalue( code.data);\n\n  const arr = this.scanResult.split('°');\n\n  this.tokenactual = arr[6];\n\n  if (  this.tipo === 'cobrapagoqr') {\n    this.cobronormalreves(arr);\n  } else {\n    if (this.tipo === 'pagoqr' ) {\n      this.verificapago(arr);\n    } else {\n      this.cobronormal(arr);\n    }\n  }\n\n\n\n\n\n      }\n    };\n    img.src = URL.createObjectURL(file);\n  }\n\n  verificapago(arr) {\n\n    this.authenticationService.getReg( this.tokenactual + '/3', 'compratokens', 0).then((data) => {\n      let datat: any = [];\n      datat = data;\n     if ( datat.length > 0) {\n\n\n      if (data[0].estado === 3) {\n\n        this.cobronormalsinsaldo(arr);\n\n      } else {\n        if (data[0].estado === 0) {\n\n          this.authenticationService.getReg( arr[1] + '/personadispid/' +\n          arr[0], 'personals', 0).then((result) => {\n             if (Number(result[0].saldo) >= Number(this.monto)) {\n\n               // COBRA Y AUTORIza\n               const   options: any\t     = {\n                 estado: 2,\n                 cobroservicio: this.userinfo[0].idempresa.nombre + '<br>' + ' en la ubicación:' + this.userinfo[0].idempresa.direccion +\n                  '<br> Quiere cobrar ' + this.moneda + ' ' + this.monto + '<br> ¿ Desea autorizar la transaccion?',\n                 bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                 email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n             };\n\n             if (options) {\n               this.authenticationService.createReg(this.tokenactual, options, 'compratokens').then((result) => {\n                 this.StartTimer(arr);\n\n             }, (err) => {\n               this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n             });\n\n             }\n\n\n\n\n             } else {\n              // FONDOS INSUFUCIENTES\n\n              const   options: any\t     = {\n                estado: 10,\n                cobroservicio: 'Fondos insuficientes',\n                bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n            };\n\n            if (options) {\n              this.authenticationService.createReg(this.tokenactual, options, 'compratokens').then((result) => {\n                this.authenticationService.presentAlert('Fondos insuficientes' , 'Precaución' , '');\n\n            }, (err) => {\n              this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n            });\n\n            }\n\n\n\n\n             }\n\n          }, (err) => {\n            this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n          });\n\n        } else {\n          this.StartTimer(arr);\n        }\n      }\n     } else {\n      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n     }\n\n\n\n    }, (err) => {\n      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n    });\n\n\n\n\n\n  }\n\n  StartTimer(arr) {\n    this.timer = setTimeout(x => {\n\n        this.authenticationService.getReg( this.tokenactual + '/3', 'compratokens', 0).then((data) => {\n          let datat: any = [];\n          datat = data;\n         if ( datat.length > 0) {\n\n\n          if (data[0].estado === 3) {\n\n            this.cobronormalsinsaldo(arr);\n\n          } else {\n            this.StartTimer(arr);\n          }\n         } else {\n          this.StartTimer(arr);\n         }\n\n\n\n        }, (err) => {\n          this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n        });\n\n\n\n\n       }, 3000);\n      }\n\n\n\n  async closeModal() {\n    this.modalController.dismiss({data: 'close'});\n  }\n\n\n\n  cobronormal(arr) {\n    this.authenticationService.getReg(arr[6] + '/2', 'compratokens', 0).then((data) => {\n      let datat: any = [];\n      datat = data;\n\n\n     if ( datat.length > 0) {\n\n      if (data[0].estado === 0) {\n        const tranat = this.authenticationService.decryptvalue(datat[0].trama) + '°' + datat[0]._id + '°' + datat[0].tipo;\n        if (tranat === this.scanResult) {\n\n\n        if (this.monto === arr[4]) {\n          const   options: any\t     = {\n            operacion: 'pagaservicio',\n            dservicio: 'Cobro por pago de servicio',\n            cservicio: 'Cobro por servicio',\n            nodispositivo: 'servicio',\n            noprov: '',\n            idempresa: this.userinfo[0].idempresa._id,\n           idsuscriptor : arr[1],\n           tipocompra: 'servicio',\n           tokencompra: datat[0]._id,\n          nombre : arr[2],\n           monto : this.monto,\n           url: '',\n           tpago: 'Efectivo',\n           estado : 'Facturado',\n           bitacora: {idempresa: this.userinfo[0].idempresa._id, idafiliado: '', email: this.userinfo[0].email,\n            permiso: 'Crea', accion: 'Compra de saldo'},\n            idempresa0: arr[1],\n           idsuscriptor2 : {id: this.userinfo[0]._id, nombre: this.userinfo[0].nombre} ,\n          };\n\n          if (options) {\n            this.authenticationService.createReg('', options, 'comprasaldos').then((result) => {\n\n              this.modalController.dismiss({data: 'Se ha realizado una venta a: ' + arr[2] +\n               '<br> Por un monto de ' + this.moneda + ' ' + this.monto});\n\n          }, (err) => {\n            this.authenticationService.presentAlert(err.error , 'Precaución', '');\n          });\n        }\n\n        } else {\n          this.authenticationService.presentAlert('El Monto no coincide con lo que el cliente programo.'\n          + '<br> El cliente quiere comprar: ' + this.moneda + ' ' + arr[4] + '<br> Se quiere acreditar: '\n          + this.moneda  + ' ' +  this.monto, 'Precaución', '');\n\n        }\n\n\n\n        } else {      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n        }\n\n\n\n      } else {\n        this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n\n      }\n     } else {\n      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n     }\n     });\n\n\n\n\n  }\n\n  async seguroacepta( mensage,arr,datat) {\n    const alert = await this.alertController.create({\n    \n      message: mensage,\n      buttons: [\n        {\n          text: 'No Aceptar',\n         cssClass: 'secondary',\n          handler: (blah) => {\n\n            const   options: any\t     = {\n              estado:33,\n              cobroservicio:  'Cliente no autorizo transaccion ',\n              bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n              email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n          };\n\n          if (options) {\n            this.authenticationService.createReg(this.tokenactual , options, 'compratokens').then((result) => {\n            \n              this.modalController.dismiss('ok');\n          }, (err) => {\n            this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n          });\n  \n          }\n\n          }\n        }, {\n           text: 'Aceptar',\n           handler: () => {\n             // actualizar toquen\n\n             var arr2= (arr[2]).split('<');\n       \n             const   options: any\t     = {\n               operacion: 'pagaservicio',\n               dservicio: 'Cobro por pago de servicio',\n               cservicio: 'Cobro por servicio',\n               nodispositivo: 'servicio',\n               noprov: '',\n               idempresa: arr[0],\n              idsuscriptor : this.userinfo[0]._id,\n              tipocompra: 'servicio',\n              tokencompra: datat[0]._id,\n             nombre : this.userinfo[0].nombre,\n              monto : arr[4],\n              url: '',\n              tpago: 'Efectivo',\n              estado : 'Facturado',\n              bitacora: {idempresa: arr[0], idafiliado: '', email: this.userinfo[0].email,\n               permiso: 'Crea', accion: 'Cobro por pago de servicio'},\n               idempresa0: this.userinfo[0]._id,\n              idsuscriptor2 : {id: arr[1], nombre: arr2[0]} ,\n             };\n   \n             if (options) {\n               this.authenticationService.createReg('', options, 'comprasaldos').then((result) => {\n   \n                \n\n             const   options: any\t     = {\n              estado:33,\n              cobroservicio:  'Cobro realizado con exito ',\n              bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n              email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n          };\n\n          if (options) {\n            this.authenticationService.createReg(this.tokenactual , options, 'compratokens').then((result) => {\n            \n              this.modalController.dismiss('ok');\n          }, (err) => {\n            this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n          });\n  \n          }\n               \n   \n             }, (err) => {\n              const   options: any\t     = {\n                estado:33,\n                cobroservicio:  'Cliente no autorizo transaccion ',\n                bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n            };\n  \n            if (options) {\n              this.authenticationService.createReg(this.tokenactual , options, 'compratokens').then((result) => {\n              \n                this.modalController.dismiss('ok');\n            }, (err) => {\n              this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n            });\n    \n            }\n               this.authenticationService.presentAlert(err.error , 'Precaución', '');\n             });\n           }\n\n\n\n\n\n           }\n         }\n       ]\n     });\n     await alert.present();\n   }\n\n\n\n  cobronormalreves(arr) {\n    this.authenticationService.getReg(arr[6] + '/2', 'compratokens', 0).then((data) => {\n      let datat: any = [];\n      datat = data;\n\n\n     if ( datat.length > 0) {\n\n      if (data[0].estado === 0) {\n        const tranat = this.authenticationService.decryptvalue(datat[0].trama) + '°' + datat[0].tipo + '°' + datat[0]._id + '°' + datat[0].tipo;\n        if (tranat === this.scanResult) {\n\n        //preguntar que estan intentando cobrar 200  \n\n        \n\n\n        this.seguroacepta(arr[2] +\n        '<br> Quiere cobrar ' + this.moneda + ' ' + arr[4] + '<br> ¿ Desea autorizar la transaccion?'\n        ,arr,datat);\n\n\n        \n\n     \n\n\n\n        } else {      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n        }\n\n\n\n      } else {\n        this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n\n      }\n     } else {\n      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n     }\n     });\n\n\n\n\n  }\n\n  cobronormalsinsaldo(arr) {\n\n    this.authenticationService.getReg( arr[1] + '/personadispid/' +\n    arr[0], 'personals', 0).then((result) => {\n       if (Number(result[0].saldo) >= Number(this.monto)) {\n\n\n        this.authenticationService.getReg(arr[6] + '/2', 'compratokens', 0).then((data) => {\n          let datat: any = [];\n          datat = data;\n   \n\n\n              const   options: any\t     = {\n                operacion: 'pagaservicio',\n                dservicio: 'Cobro por pago de servicio',\n                cservicio: 'Cobro por servicio',\n                nodispositivo: 'servicio',\n                noprov: '',\n                idempresa: this.userinfo[0].idempresa._id,\n               idsuscriptor : arr[1],\n               tipocompra: 'servicio',\n               tokencompra: datat[0]._id,\n              nombre : arr[2],\n               monto : this.monto,\n               url: '',\n               tpago: 'Efectivo',\n               estado : 'Facturado',\n               bitacora: {idempresa: this.userinfo[0].idempresa._id, idafiliado: '', email: this.userinfo[0].email,\n                permiso: 'Crea', accion: 'Compra de saldo'},\n                idempresa0: arr[1],\n               idsuscriptor2 : {id: this.userinfo[0]._id, nombre: this.userinfo[0].nombre} ,\n              };\n\n              if (options) {\n                this.authenticationService.createReg('', options, 'comprasaldos').then((result) => {\n\n                  this.modalController.dismiss({data: 'Se ha realizado una venta a: ' + arr[2] +\n                   '<br> Por un monto de ' + this.moneda + ' ' + this.monto});\n\n              }, (err) => {\n                this.authenticationService.presentAlert(err.error , 'Precaución', '');\n              });\n            }\n\n\n\n\n\n        }, (err) => {\n          this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n        });\n\n\n\n\n\n       } else {\n\n\n        const   options: any\t     = {\n          estado: 100,\n          cobroservicio: 'Fondos insuficientes, transaccion anulada',\n          bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n          email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n      };\n\n      if (options) {\n        this.authenticationService.createReg(this.tokenactual, options, 'compratokens').then((result) => {\n          this.authenticationService.presentAlert('Fondos insuficientes, transaccion anulada', 'Precaución', '');\n\n      }, (err) => {\n        this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n      });\n\n      }\n\n\n\n\n       }\n\n      });\n\n\n\n\n  }\n}\n"]}