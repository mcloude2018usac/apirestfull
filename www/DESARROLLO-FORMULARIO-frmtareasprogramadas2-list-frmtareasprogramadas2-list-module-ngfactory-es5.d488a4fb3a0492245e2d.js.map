{"version":3,"sources":["webpack:///src/app/DESARROLLO/FORMULARIO/frmtareasprogramadas2-list/frmtareasprogramadas2-list.module.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmtareasprogramadas2-list/frmtareasprogramadas2-list.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmtareasprogramadas2-list/frmtareasprogramadas2-list.page.html","webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/components/skeleton-element/skeleton-element.component.html"],"names":["frmtareasprogramadas2ListPageModule","routerOutlet","router","authenticationService","alertController","translateService","modalController","showAgeFilter","showmenu","items","variables","userinfo","viewType","tituloxx","efecto","seguro","msg","currentSegment","searchSubject","ReplaySubject","this","apifoto","getapifoto","getCurrentNavigation","extras","state","idllave","nombre","idrol","nivel","pactualizacion","pconsulta","pcreacion","peliminacion","pfiltro","pingreso","potros1","preporte","getcopiauser","geoposiciontxt","setCurrentLocationa33","searchQuery","get","subscribe","value","rangeForm","dual","lower","upper","pideregistros","event","selectedCategory","detail","Geolocation","requestPermissions","isPluginAvailable","getCurrentPosition","then","data","coords","latitude","longitude","err","console","log","op","itemsList","getReg","idempresa","_id","role","presentAlert","error","next","controls","query","filterList","list","filter","item","toLowerCase","includes","alert","create","cssClass","header","inputs","name","type","label","checked","buttons","text","handler","todo","arr","split","navigate","user","title","present","record","setTimeout","target","complete","length","disabled","SkeletonElementComponent","width","height","borderRadius","rounded","noAnimated","inline","styles"],"mappings":"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","file":"x","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\n\nimport { frmtareasprogramadas2ListPage } from './frmtareasprogramadas2-list.page';\n@NgModule({\n  declarations: [\n    frmtareasprogramadas2ListPage\n  ],\n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule,\n    RouterModule.forChild([{ path: '', component: frmtareasprogramadas2ListPage }]), TranslateModule.forChild(),\n  ],\n \n})\nexport class frmtareasprogramadas2ListPageModule {}\n","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport {Plugins, Capacitor,  Geolocation , CallbackID} from '@capacitor/core';\n\n\n@Component({\nselector: 'page-frmtareasprogramadas2-list',\ntemplateUrl: 'frmtareasprogramadas2-list.page.html',\nstyleUrls: ['./frmtareasprogramadas2-list.page.scss'],\n})\nexport class frmtareasprogramadas2ListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false;showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidllave:any;\nviewType = 'grid';\ntituloxx = '';\nefecto = 0;\nseguro ='';\ngeoposiciontxt: any;\nmsg = '';\napifoto: String;\nitemsList: Array<any>;\npublic currentSegment: string = \"activa\";\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {  this.apifoto = this.authenticationService.getapifoto();\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nngOnInit() {\n  if ( this.router.getCurrentNavigation().extras.state) {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n \n    if (this.variables) {    this.tituloxx = this.variables.nombre ; } else {this.tituloxx = 'Mis tareas programadas';}\n  } else {\n    this.variables =  {\n    idrol: '5f503beeeda4710798a79b8a',    nivel: '.',    nombre: 'Mis tareas programadas',    pactualizacion: true,\n    pconsulta: true,    pcreacion: true,    peliminacion: true,    pfiltro: true,    pingreso: true,    potros1: '',    preporte: true};\n    this.idllave = '';\n    this.tituloxx = this.variables.nombre ;\n  }\n\n\n \n    this.userinfo = this.authenticationService.getcopiauser();\n   \n    this.geoposiciontxt =\tthis.setCurrentLocationa33();\n\n\n\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });   \n    this.currentSegment = 'activa';\n    this.pideregistros( this.currentSegment);\n  }\n  filterContacts(event: any) {\n    let selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n    this.pideregistros(selectedCategory);\n  }\n  pideregistros0() {\n   this.pideregistros(this.currentSegment);\n  }\n\n  \n\n  async setCurrentLocationa33() {\n\n    const permResult = await Plugins.Geolocation.requestPermissions();\n  \n\n    if (!Capacitor.isPluginAvailable('Geolocation')) {\n      console.log('Plugin geolocation not available');\n      return;\n    }\n\n\n\n\n\n\n      Geolocation.getCurrentPosition().then(data => {\n        this.geoposiciontxt =  data.coords.latitude + '¬' + data.coords.longitude;\n      }).catch(err => {\n        this.geoposiciontxt = '';\n      });\n\n\n  }\n\n\n\n  pideregistros(op) {\n       this.itemsList = [];\n       this.efecto = 0 ;\n      // this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id + '/' + this.idllave, 'frmtareasprogramadas2s', 0).then((data) => {\n       this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id + '/' +this.userinfo[0]._id + '/' + this.userinfo[0].role,  'frmtareasprogramadass', 0).then((data) => {\n       this.efecto=1;\n       this.items =  data;\n       this.itemsList = this.items;\n }, (err) => {\n   this.authenticationService.presentAlert(err.error , this.msg , '');\n });\n  }\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n  async otrasop(item: any) { \n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n       header: 'Seleccione Opción',\n       inputs: [\n         {\n           name: 'Productos',\n           type: 'radio',\n           label: 'Productos',\n           checked: true,\n           value: '/ProductoListPage°Productos ->' + item.nombre,\n         }\n       ],\n       buttons: [\n         {\n           text: 'Cancel',\n           role: 'cancel',\n           cssClass: 'secondary',\n           handler: (todo) => {\n             console.log(todo);\n           }\n         }, {\n           text: 'Ok',\n           handler: (todo) => {\n             var arr = todo.split('°');\n             const navigationExtras: NavigationExtras = {\n               state: {\n                 variables: this.variables,\n                 user: null,\n                 idllave: item._id,\n                 title: arr[1]\n               }\n             };\n             this.router.navigate([arr[0]], navigationExtras);\n           }\n         }\n       ]\n     });\n     await alert.present();   \n }\n \n  async updateRecord(item: any) {\n\n    \n    const navigationExtras: NavigationExtras = {\n      state: {\n        geoposiciontxt:this.geoposiciontxt, variables:  this.variables, record: item, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx\n      }\n    };\n    this.router.navigate(['frmtareasprogramadas2CreatePage'], navigationExtras);\n\n  \n\n\n    /*\n    const modal = await this.modalController.create({\n      component: frmtareasprogramadas2CreatePage,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps:  {geoposiciontxt:this.geoposiciontxt, variables:  this.variables, record: item, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n      this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n    */\n\n}\n\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n}\n"," <ion-header>\n <ion-toolbar color=\"primary\">\n   <ion-buttons slot=\"start\">\n     <ion-menu-button></ion-menu-button>\n   </ion-buttons>\n   <ion-title>\n     {{tituloxx}}\n   </ion-title>\n   <ion-buttons slot=\"end\">\n    \n     <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n       <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n       <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n       <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n     </ion-button>\n   </ion-buttons>\n </ion-toolbar>\n <ion-toolbar class=\"filters-toolbar\">\n   <ion-row class=\"searchbar-row\" align-items-center>\n     <ion-col>\n       <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n     </ion-col>\n     <ion-col [hidden]=\"!showAgeFilter\" class=\"call-to-action-col\">\n       <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" title=\" {{ 'FILTROM' | translate }}\" (click)=\"showAgeFilter = !showAgeFilter\">\n         <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n       </ion-button>\n     </ion-col>\n   </ion-row>\n   <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n     <ion-row class=\"range-item-row\">\n       <ion-col size=\"12\">\n         <div class=\"range-header\">\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n           <span class=\"range-label\">Filter by age</span>\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n         </div>\n       </ion-col>\n       <ion-col size=\"12\">\n         <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n       </ion-col>\n     </ion-row>\n   </form>\n </ion-toolbar>\n</ion-header>\n<ion-content class=\"user-friends-content\">\n <ion-item-divider sticky>\n   <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n </ion-item-divider>\n <ion-segment (ionChange)=\"filterContacts($event)\" value=\"activa\">\n   <ion-segment-button value=\"activa\" checked>\n   ACTIVAS\n   </ion-segment-button>\n   <ion-segment-button value=\"finalizada\">\n   FINALIZADAS\n    </ion-segment-button>\n\n </ion-segment>\n <ion-list *ngIf=\"efecto === 0\" >\n   <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n     <ion-label>\n       <skeleton-element></skeleton-element>\n       <skeleton-element></skeleton-element>\n       <skeleton-element width=\"67%\"></skeleton-element>\n     </ion-label>\n   </ion-item>\n </ion-list>\n <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n   <ion-item  *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n<ion-grid>\n<ion-row>\n  <ion-col  (click)=\"updateRecord(item)\" size=\"12\">\n   \n    <ion-label class=\"ion-text-wrap\">\n        <ion-note slot=\"end\">Fecha Visita: {{item.fechaasignada | date:'dd-MM-yyyy'  }} </ion-note> <br>\n<strong>No visita:{{item.novisita}}</strong> \n\n  <div [innerHtml]=\"item.nombre\"></div> \n    \n \n     </ion-label>\n</ion-col>\n</ion-row>\n  <ion-row>\n<ion-col size=\"12\">\n  <span >\n    <div  class=\"first-letter2\">\n      Creación [{{item.usuarionew}}-{{item.createdAt | date:'dd-MM-yyyy, hh:mm aaa'}}]<br>\n                Actualiza [{{item.usuarioup}}-{{item.updatedAt | date:'dd-MM-yyyy, hh:mm aaa'}}]<br>\n      <a  *ngIf=\"item.geoposicion !==undefined && item.geoposicion !==''\" href=\"https://www.google.com/maps/search/?api=1&query={{item.geoposicion.replace('¬', ',')}}\" target=\"_blank\">geoposición: {{item.geoposicion.replace('¬', ',')}}</a> \n    </div> \n    </span>\n      <ion-toolbar  color=\"transparent\">\n     \n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n   </ion-item>\n </ion-list>\n <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n   <ion-row>\n     <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n       <ion-card  >\n         <ion-row (click)=\"updateRecord(item)\" class=\"user-stats-wrapper user-details-wrapper\">\n           <ion-col>\n             <span class=\"user-stat-value\">Fecha Visita </span>\n             <span class=\"user-stat-name\">{{item.fechaasignada  | date:'dd-MM-yyyy'  }} </span>\n           </ion-col>\n          \n         </ion-row>\n         <ion-item (click)=\"updateRecord(item)\"  [routerLink]=\"\">\n       \n           <ion-label    class=\"ion-text-wrap\">\n            <strong>No visita:{{item.novisita}}</strong> \n  <div [innerHtml]=\"item.nombre\"></div> \n             \n      \n  </ion-label>\n         </ion-item>\n         <ion-card-content>\n         </ion-card-content>\n         <ion-row no-padding>\n           <ion-col  size=\"12\" >\n            <span >\n              <div  class=\"first-letter2\">\n                Creación [{{item.usuarionew}}-{{item.createdAt | date:'dd-MM-yyyy, hh:mm aaa'}}]<br>\n                Actualiza [{{item.usuarioup}}-{{item.updatedAt | date:'dd-MM-yyyy, hh:mm aaa'}}]<br>\n                <a  *ngIf=\"item.geoposicion !==undefined && item.geoposicion !==''\" href=\"https://www.google.com/maps/search/?api=1&query={{item.geoposicion.replace('¬', ',')}}\" target=\"_blank\">geoposición: {{item.geoposicion.replace('¬', ',')}}</a> \n              </div> \n              </span>\n      <ion-toolbar  color=\"transparent\">\n      \n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n           </ion-col>\n         </ion-row>\n       </ion-card>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n   {{ 'NODATOS' | translate }}  \n </h3>\n <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n   <ion-infinite-scroll-content\n     loadingSpinner=\"bubbles\"\n     loadingText=\"Espere un momento...\">\n   </ion-infinite-scroll-content>\n </ion-infinite-scroll>\n</ion-content>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n"]}