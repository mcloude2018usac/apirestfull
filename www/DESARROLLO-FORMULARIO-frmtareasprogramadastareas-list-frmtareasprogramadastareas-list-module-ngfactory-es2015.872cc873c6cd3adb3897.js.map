{"version":3,"sources":["webpack:///src/app/DESARROLLO/FORMULARIO/frmtareasprogramadastareas-list/frmtareasprogramadastareas-list.module.ts","webpack:///node_modules/ionic2-calendar/ionic2-calendar.d.ts.CalendarComponent.html","webpack:///node_modules/ionic2-calendar/ionic2-calendar.d.ts.ɵa.html","webpack:///node_modules/ionic2-calendar/ionic2-calendar.d.ts.ɵc.html","webpack:///node_modules/ionic2-calendar/ionic2-calendar.d.ts.ɵd.html","webpack:///node_modules/ionic2-calendar/ionic2-calendar.d.ts.ɵe.html","webpack:///src/app/DESARROLLO/FORMULARIO/frmtareasprogramadastareas-list/frmtareasprogramadastareas-list.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmtareasprogramadastareas-list/frmtareasprogramadastareas-list.page.html"],"names":["frmtareasprogramadastareasListPageModule","routerOutlet","router","authenticationService","alertController","translateService","modalController","showAgeFilter","showmenu","items","variables","userinfo","viewType","esvisible","tituloxx","efecto","seguro","msg","subiendo","selectedDate","Date","calendar","mode","currentDate","dateFormatter","formatMonthViewDay","date","getDate","toString","formatMonthViewDayHeader","formatMonthViewTitle","formatWeekViewDayHeader","formatWeekViewTitle","formatWeekViewHourColumn","formatDayViewHourColumn","formatDayViewTitle","minDate","toISOString","currentSegment","searchSubject","ReplaySubject","this","apifoto","getapifoto","getCurrentNavigation","extras","state","idllave","nombre","idrol","nivel","pactualizacion","pconsulta","pcreacion","peliminacion","pfiltro","pingreso","potros1","preporte","getcopiauser","geoposiciontxt","setCurrentLocationa33","searchQuery","get","subscribe","value","rangeForm","dual","lower","upper","pideregistros","op","itemsList","getReg","_id","idempresa","then","data","loadEvents","err","presentAlert","error","event","selectedCategory","detail","Geolocation","requestPermissions","isPluginAvailable","getCurrentPosition","coords","latitude","longitude","catch","console","log","next","controls","query","filterList","list","filter","item","toLowerCase","includes","navigate","record","title","setTimeout","target","complete","length","disabled","events","i","date0","dafechastringtodatehora","String","fechainicio","horas","fechafinal","UTC","getUTCFullYear","getUTCMonth","getUTCDate","push","startTime","endTime","allDay","id","eventSource","createRandomEvents","viewTitle","today","setHours","isToday","getTime","document","querySelector","slideNext","slidePrev","ev","selectedTime","undefined","arr","i2","arreglo"],"mappings":"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","file":"x","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\nimport { NgCalendarModule  } from 'ionic2-calendar';\nimport { frmtareasprogramadastareasListPage } from './frmtareasprogramadastareas-list.page';\n@NgModule({\n  declarations: [\n    frmtareasprogramadastareasListPage\n  ],\n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule,NgCalendarModule,\n    RouterModule.forChild([{ path: '', component: frmtareasprogramadastareasListPage }]), TranslateModule.forChild(),\n  ],\n \n})\nexport class frmtareasprogramadastareasListPageModule {}\n","\n        <ng-template #monthviewDefaultDisplayEventTemplate let-view=\"view\" let-row=\"row\" let-col=\"col\">\n            {{view.dates[row*7+col].label}}\n        </ng-template>\n        <ng-template #monthviewDefaultEventDetailTemplate let-showEventDetail=\"showEventDetail\" let-selectedDate=\"selectedDate\" let-noEventsLabel=\"noEventsLabel\">\n            <ion-list class=\"event-detail-container\" has-bouncing=\"false\" *ngIf=\"showEventDetail\" overflow-scroll=\"false\">\n                <ion-item *ngFor=\"let event of selectedDate?.events\" (click)=\"eventSelected(event)\">\n                        <span *ngIf=\"!event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{event.startTime|date: 'HH:mm'}}\n                            -\n                            {{event.endTime|date: 'HH:mm'}}\n                        </span>\n                    <span *ngIf=\"event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{allDayLabel}}</span>\n                    <span class=\"event-detail\">  |  {{event.title}}</span>\n                </ion-item>\n                <ion-item *ngIf=\"selectedDate?.events.length==0\">\n                    <div class=\"no-events-label\">{{noEventsLabel}}</div>\n                </ion-item>\n            </ion-list>\n        </ng-template>\n        <ng-template #defaultWeekviewHeaderTemplate let-viewDate=\"viewDate\">\n            {{ viewDate.dayHeader }}\n        </ng-template>\n        <ng-template #defaultAllDayEventTemplate let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </ng-template>\n        <ng-template #defaultNormalEventTemplate let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </ng-template>\n        <ng-template #defaultWeekViewAllDayEventSectionTemplate let-day=\"day\" let-eventTemplate=\"eventTemplate\">\n            <div [ngClass]=\"{'calendar-event-wrap': day.events}\" *ngIf=\"day.events\"\n                 [ngStyle]=\"{height: 25*day.events.length+'px'}\">\n                <div *ngFor=\"let displayEvent of day.events\" class=\"calendar-event\" tappable\n                     (click)=\"eventSelected(displayEvent.event)\"\n                     [ngStyle]=\"{top: 25*displayEvent.position+'px', width: 100*(displayEvent.endIndex-displayEvent.startIndex)+'%', height: '25px'}\">\n                    <ng-template [ngTemplateOutlet]=\"eventTemplate\"\n                                 [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\n                    </ng-template>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #defaultDayViewAllDayEventSectionTemplate let-allDayEvents=\"allDayEvents\" let-eventTemplate=\"eventTemplate\">\n            <div *ngFor=\"let displayEvent of allDayEvents; let eventIndex=index\"\n                 class=\"calendar-event\" tappable\n                 (click)=\"eventSelected(displayEvent.event)\"\n                 [ngStyle]=\"{top: 25*eventIndex+'px',width: '100%',height:'25px'}\">\n                <ng-template [ngTemplateOutlet]=\"eventTemplate\"\n                             [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-template #defaultNormalEventSectionTemplate let-tm=\"tm\" let-hourParts=\"hourParts\" let-eventTemplate=\"eventTemplate\">\n            <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                <div *ngFor=\"let displayEvent of tm.events\" class=\"calendar-event\" tappable\n                     (click)=\"eventSelected(displayEvent.event)\"\n                     [ngStyle]=\"{top: (37*displayEvent.startOffset/hourParts)+'px',left: 100/displayEvent.overlapNumber*displayEvent.position+'%', width: 100/displayEvent.overlapNumber+'%', height: 37*(displayEvent.endIndex -displayEvent.startIndex - (displayEvent.endOffset + displayEvent.startOffset)/hourParts)+'px'}\">\n                    <ng-template [ngTemplateOutlet]=\"eventTemplate\"\n                                 [ngTemplateOutletContext]=\"{displayEvent:displayEvent}\">\n                    </ng-template>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #defaultInactiveAllDayEventSectionTemplate>\n        </ng-template>\n        <ng-template #defaultInactiveNormalEventSectionTemplate>\n        </ng-template>\n\n        <div [ngSwitch]=\"calendarMode\" class=\"{{calendarMode}}view-container\">\n            <monthview *ngSwitchCase=\"'month'\"\n                [formatDay]=\"formatDay\"\n                [formatDayHeader]=\"formatDayHeader\"\n                [formatMonthTitle]=\"formatMonthTitle\"\n                [startingDayMonth]=\"startingDayMonth\"\n                [showEventDetail]=\"showEventDetail\"\n                [noEventsLabel]=\"noEventsLabel\"\n                [autoSelect]=\"autoSelect\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [monthviewDisplayEventTemplate]=\"monthviewDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\"\n                [monthviewInactiveDisplayEventTemplate]=\"monthviewInactiveDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\"\n                [monthviewEventDetailTemplate]=\"monthviewEventDetailTemplate||monthviewDefaultEventDetailTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                [sliderOptions]=\"sliderOptions\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </monthview>\n            <weekview *ngSwitchCase=\"'week'\"\n                [formatWeekTitle]=\"formatWeekTitle\"\n                [formatWeekViewDayHeader]=\"formatWeekViewDayHeader\"\n                [formatHourColumn]=\"formatHourColumn\"\n                [startingDayWeek]=\"startingDayWeek\"\n                [allDayLabel]=\"allDayLabel\"\n                [hourParts]=\"hourParts\"\n                [autoSelect]=\"autoSelect\"\n                [hourSegments]=\"hourSegments\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [weekviewHeaderTemplate]=\"weekviewHeaderTemplate||defaultWeekviewHeaderTemplate\"\n                [weekviewAllDayEventTemplate]=\"weekviewAllDayEventTemplate||defaultAllDayEventTemplate\"\n                [weekviewNormalEventTemplate]=\"weekviewNormalEventTemplate||defaultNormalEventTemplate\"\n                [weekviewAllDayEventSectionTemplate]=\"weekviewAllDayEventSectionTemplate||defaultWeekViewAllDayEventSectionTemplate\"\n                [weekviewNormalEventSectionTemplate]=\"weekviewNormalEventSectionTemplate||defaultNormalEventSectionTemplate\"\n                [weekviewInactiveAllDayEventSectionTemplate]=\"weekviewInactiveAllDayEventSectionTemplate||defaultInactiveAllDayEventSectionTemplate\"\n                [weekviewInactiveNormalEventSectionTemplate]=\"weekviewInactiveNormalEventSectionTemplate||defaultInactiveNormalEventSectionTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [scrollToHour]=\"scrollToHour\"\n                [preserveScrollPosition]=\"preserveScrollPosition\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                [startHour]=\"startHour\"\n                [endHour]=\"endHour\"\n                [sliderOptions]=\"sliderOptions\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </weekview>\n            <dayview *ngSwitchCase=\"'day'\"\n                [formatDayTitle]=\"formatDayTitle\"\n                [formatHourColumn]=\"formatHourColumn\"\n                [allDayLabel]=\"allDayLabel\"\n                [hourParts]=\"hourParts\"\n                [hourSegments]=\"hourSegments\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [dayviewAllDayEventTemplate]=\"dayviewAllDayEventTemplate||defaultAllDayEventTemplate\"\n                [dayviewNormalEventTemplate]=\"dayviewNormalEventTemplate||defaultNormalEventTemplate\"\n                [dayviewAllDayEventSectionTemplate]=\"dayviewAllDayEventSectionTemplate||defaultDayViewAllDayEventSectionTemplate\"\n                [dayviewNormalEventSectionTemplate]=\"dayviewNormalEventSectionTemplate||defaultNormalEventSectionTemplate\"\n                [dayviewInactiveAllDayEventSectionTemplate]=\"dayviewInactiveAllDayEventSectionTemplate||defaultInactiveAllDayEventSectionTemplate\"\n                [dayviewInactiveNormalEventSectionTemplate]=\"dayviewInactiveNormalEventSectionTemplate||defaultInactiveNormalEventSectionTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [scrollToHour]=\"scrollToHour\"\n                [preserveScrollPosition]=\"preserveScrollPosition\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                [startHour]=\"startHour\"\n                [endHour]=\"endHour\"\n                [sliderOptions]=\"sliderOptions\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </dayview>\n        </div>\n    ","\n        <div>\n            <ion-slides #monthSlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\">\n                <ion-slide>\n                    <table *ngIf=\"0===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr>\n                            <th *ngFor=\"let dayHeader of views[0].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[0].dates[row*7+col])\"\n                                [ngClass]=\"getHighlightClass(views[0].dates[row*7+col])\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[0], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table *ngIf=\"0!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr class=\"text-center\">\n                            <th *ngFor=\"let dayHeader of views[0].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[0], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        <tr>\n                        </tbody>\n                    </table>\n                </ion-slide>\n                <ion-slide>\n                    <table *ngIf=\"1===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr>\n                            <th *ngFor=\"let dayHeader of views[1].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[1].dates[row*7+col])\"\n                                [ngClass]=\"getHighlightClass(views[1].dates[row*7+col])\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[1], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table *ngIf=\"1!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr class=\"text-center\">\n                            <th *ngFor=\"let dayHeader of views[1].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[1], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        <tr>\n                        </tbody>\n                    </table>\n                </ion-slide>\n                <ion-slide>\n                    <table *ngIf=\"2===currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr>\n                            <th *ngFor=\"let dayHeader of views[2].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\" tappable (click)=\"select(views[2].dates[row*7+col])\"\n                                [ngClass]=\"getHighlightClass(views[2].dates[row*7+col])\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[2], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <table *ngIf=\"2!==currentViewIndex\" class=\"table table-bordered table-fixed monthview-datetable\">\n                        <thead>\n                        <tr class=\"text-center\">\n                            <th *ngFor=\"let dayHeader of views[2].dayHeaders\">\n                                <small>{{dayHeader}}</small>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let row of [0,1,2,3,4,5]\">\n                            <td *ngFor=\"let col of [0,1,2,3,4,5,6]\">\n                                <ng-template [ngTemplateOutlet]=\"monthviewInactiveDisplayEventTemplate\"\n                                             [ngTemplateOutletContext]=\"{view: views[2], row: row, col: col}\">\n                                </ng-template>\n                            </td>\n                        <tr>\n                        </tbody>\n                    </table>\n                </ion-slide>\n            </ion-slides>\n            <ng-template [ngTemplateOutlet]=\"monthviewEventDetailTemplate\"\n                         [ngTemplateOutletContext]=\"{showEventDetail:showEventDetail, selectedDate: selectedDate, noEventsLabel: noEventsLabel}\">\n            </ng-template>\n        </div>\n    ","\n        <ion-slides #weekSlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\"\n                    class=\"slides-container\">\n            <ion-slide class=\"slide-container\">\n                <table class=\"table table-bordered table-fixed weekview-header\">\n                    <thead>\n                    <tr>\n                        <th class=\"calendar-hour-column\"></th>\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[0].dates\"\n                            [ngClass]=\"getHighlightClass(date)\"\n                            (click)=\"daySelected(date)\">\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\n                            </ng-template>\n                        </th>\n                    </tr>\n                    </thead>\n                </table>\n                <div *ngIf=\"0===currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[0].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[0].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\n                                    (click)=\"select(tm.time, tm.events)\">\n                                    <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n                <div *ngIf=\"0!==currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[0].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[0].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\n                                    <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n            </ion-slide>\n            <ion-slide class=\"slide-container\">\n                <table class=\"table table-bordered table-fixed weekview-header\">\n                    <thead>\n                    <tr>\n                        <th class=\"calendar-hour-column\"></th>\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[1].dates\"\n                            [ngClass]=\"getHighlightClass(date)\"\n                            (click)=\"daySelected(date)\">\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\n                            </ng-template>\n                        </th>\n                    </tr>\n                    </thead>\n                </table>\n                <div *ngIf=\"1===currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[1].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[1].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\n                                    (click)=\"select(tm.time, tm.events)\">\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\n                                        </ng-template>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n                <div *ngIf=\"1!==currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[1].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[1].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                        </ng-template>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n            </ion-slide>\n            <ion-slide class=\"slide-container\">\n                <table class=\"table table-bordered table-fixed weekview-header\">\n                    <thead>\n                    <tr>\n                        <th class=\"calendar-hour-column\"></th>\n                        <th class=\"weekview-header text-center\" *ngFor=\"let date of views[2].dates\"\n                            [ngClass]=\"getHighlightClass(date)\"\n                            (click)=\"daySelected(date)\">\n                            <ng-template [ngTemplateOutlet]=\"weekviewHeaderTemplate\"\n                                         [ngTemplateOutletContext]=\"{viewDate:date}\">\n                            </ng-template>\n                        </th>\n                    </tr>\n                    </thead>\n                </table>\n                <div *ngIf=\"2===currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[2].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\"\n                                          [emitEvent]=\"preserveScrollPosition\" (onScroll)=\"setScrollPosition($event)\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[2].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\" tappable\n                                    (click)=\"select(tm.time, tm.events)\">\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewNormalEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\">\n                                        </ng-template>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n                <div *ngIf=\"2!==currentViewIndex\">\n                    <div class=\"weekview-allday-table\">\n                        <div class=\"weekview-allday-label\">{{allDayLabel}}</div>\n                        <div class=\"weekview-allday-content-wrapper scroll-content\">\n                            <table class=\"table table-fixed weekview-allday-content-table\">\n                                <tbody>\n                                <tr>\n                                    <td *ngFor=\"let day of views[2].dates\" class=\"calendar-cell\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveAllDayEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{day:day}\">\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <init-position-scroll class=\"weekview-normal-event-container\" [initPosition]=\"initScrollPosition\">\n                        <table class=\"table table-bordered table-fixed weekview-normal-event-table\">\n                            <tbody>\n                            <tr *ngFor=\"let row of views[2].rows; let i = index\">\n                                <td class=\"calendar-hour-column text-center\">\n                                    {{hourColumnLabels[i]}}\n                                </td>\n                                <td *ngFor=\"let tm of row\" class=\"calendar-cell\">\n                                    <div [ngClass]=\"{'calendar-event-wrap': tm.events}\" *ngIf=\"tm.events\">\n                                        <ng-template [ngTemplateOutlet]=\"weekviewInactiveNormalEventSectionTemplate\"\n                                                     [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                        </ng-template>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </init-position-scroll>\n                </div>\n            </ion-slide>\n        </ion-slides>\n    ","\n        <ion-slides #daySlider [options]=\"sliderOptions\" [dir]=\"dir\" (ionSlideDidChange)=\"onSlideChanged()\" class=\"slides-container\">\n            <ion-slide class=\"slide-container\">\n                <div class=\"dayview-allday-table\">\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\n                        <table class=\"table table-bordered dayview-allday-content-table\">\n                            <tbody>\n                            <tr>\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[0].allDayEvents.length>0}\"\n                                    [ngStyle]=\"{height: 25*views[0].allDayEvents.length+'px'}\"\n                                    *ngIf=\"0===currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[0].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\n                                    </ng-template>\n                                </td>\n                                <td class=\"calendar-cell\" *ngIf=\"0!==currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[0].allDayEvents}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <init-position-scroll *ngIf=\"0===currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\n                                      (onScroll)=\"setScrollPosition($event)\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[0].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n                <init-position-scroll *ngIf=\"0!==currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[0].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n            </ion-slide>\n            <ion-slide class=\"slide-container\">\n                <div class=\"dayview-allday-table\">\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\n                        <table class=\"table table-bordered dayview-allday-content-table\">\n                            <tbody>\n                            <tr>\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[1].allDayEvents.length>0}\"\n                                    [ngStyle]=\"{height: 25*views[1].allDayEvents.length+'px'}\"\n                                    *ngIf=\"1===currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[1].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\n                                    </ng-template>\n                                </td>\n                                <td class=\"calendar-cell\" *ngIf=\"1!==currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[1].allDayEvents}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <init-position-scroll *ngIf=\"1===currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\n                                      (onScroll)=\"setScrollPosition($event)\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[1].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n                <init-position-scroll *ngIf=\"1!==currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[1].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n            </ion-slide>\n            <ion-slide class=\"slide-container\">\n                <div class=\"dayview-allday-table\">\n                    <div class=\"dayview-allday-label\">{{allDayLabel}}</div>\n                    <div class=\"dayview-allday-content-wrapper scroll-content\">\n                        <table class=\"table table-bordered dayview-allday-content-table\">\n                            <tbody>\n                            <tr>\n                                <td class=\"calendar-cell\" [ngClass]=\"{'calendar-event-wrap':views[2].allDayEvents.length>0}\"\n                                    [ngStyle]=\"{height: 25*views[2].allDayEvents.length+'px'}\"\n                                    *ngIf=\"2===currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[2].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\">\n                                    </ng-template>\n                                </td>\n                                <td class=\"calendar-cell\" *ngIf=\"2!==currentViewIndex\">\n                                    <ng-template [ngTemplateOutlet]=\"dayviewInactiveAllDayEventSectionTemplate\"\n                                                 [ngTemplateOutletContext]=\"{allDayEvents:views[2].allDayEvents}\">\n                                    </ng-template>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <init-position-scroll *ngIf=\"2===currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\" [emitEvent]=\"preserveScrollPosition\"\n                                      (onScroll)=\"setScrollPosition($event)\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[2].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\" tappable (click)=\"select(tm.time, tm.events)\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n                <init-position-scroll *ngIf=\"2!==currentViewIndex\" class=\"dayview-normal-event-container\"\n                                      [initPosition]=\"initScrollPosition\">\n                    <table class=\"table table-bordered table-fixed dayview-normal-event-table\">\n                        <tbody>\n                        <tr *ngFor=\"let tm of views[2].rows; let i = index\">\n                            <td class=\"calendar-hour-column text-center\">\n                                {{hourColumnLabels[i]}}\n                            </td>\n                            <td class=\"calendar-cell\">\n                                <ng-template [ngTemplateOutlet]=\"dayviewInactiveNormalEventSectionTemplate\"\n                                             [ngTemplateOutletContext]=\"{tm:tm, hourParts: hourParts}\">\n                                </ng-template>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </init-position-scroll>\n            </ion-slide>\n        </ion-slides>\n    ","\n        <div class=\"scroll-content\" style=\"height:100%\">\n            <ng-content></ng-content>\n        </div>\n    ","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport {Plugins, Capacitor,  Geolocation , CallbackID} from '@capacitor/core';\nimport { CalendarComponent } from 'ionic2-calendar/calendar';\n\n\n@Component({\nselector: 'page-frmtareasprogramadastareas-list',\ntemplateUrl: 'frmtareasprogramadastareas-list.page.html',\nstyleUrls: ['./frmtareasprogramadastareas-list.page.scss'],\n})\nexport class frmtareasprogramadastareasListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false;showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidllave:any;\nviewType = 'grid';\nesvisible =false;\ntituloxx = '';\nefecto = 0;\nseguro ='';\ngeoposiciontxt: any;\nmsg = '';\nsubiendo:any =0;\nselectedDate = new Date();\neventSource;\nviewTitle;\n\nisToday:boolean;\ncalendar = {\n    mode: 'month',\n    currentDate: new Date(),\n    dateFormatter: {\n        formatMonthViewDay: function(date:Date) {\n            return date.getDate().toString();\n        },\n        formatMonthViewDayHeader: function(date:Date) {\n            return 'MonMH';\n        },\n        formatMonthViewTitle: function(date:Date) {\n            return 'testMT';\n        },\n        formatWeekViewDayHeader: function(date:Date) {\n            return 'MonWH';\n        },\n        formatWeekViewTitle: function(date:Date) {\n            return 'testWT';\n        },\n        formatWeekViewHourColumn: function(date:Date) {\n            return 'testWH';\n        },\n        formatDayViewHourColumn: function(date:Date) {\n            return 'testDH';\n        },\n        formatDayViewTitle: function(date:Date) {\n            return 'testDT';\n        }\n    }\n};\n\n\nminDate = new Date().toISOString();\n \n \napifoto: String;\nitemsList: Array<any>;\npublic currentSegment: string = \"activa\";\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {  this.apifoto = this.authenticationService.getapifoto();\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nngOnInit() {\n\n \n  if ( this.router.getCurrentNavigation().extras.state) {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n \n    if (this.variables) {    this.tituloxx = this.variables.nombre ; } else {this.tituloxx = 'Mis tareas programadas';}\n  } else {\n    this.variables =  {\n    idrol: '5f503beeeda4710798a79b8a',    nivel: '.',    nombre: 'Mis tareas programadas',    pactualizacion: true,\n    pconsulta: true,    pcreacion: true,    peliminacion: true,    pfiltro: true,    pingreso: true,    potros1: '',    preporte: true};\n    this.idllave = '';\n    this.tituloxx = this.variables.nombre ;\n  }\n\n\n \n    this.userinfo = this.authenticationService.getcopiauser();\n   \n    this.geoposiciontxt =\tthis.setCurrentLocationa33();\n\n\n\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });   \n\n     this.pideregistros('')\n  }\n\n  \n  pideregistros(op) {\n    this.itemsList = [];\n    this.efecto = 0 ;\n   \n    this.authenticationService.getReg('tareasusuario/' +  this.userinfo[0]._id + '/' + this.userinfo[0].idempresa._id+ '/' + '1', 'formulariotareass', 0).then((data) => {\n\n \n    this.efecto=1;\n    \n    this.loadEvents(data)\n}, (err) => {\nthis.authenticationService.presentAlert(err.error , this.msg , '');\n});\n\n\n}\n\n  ionViewDidEnter(){\n   \n  }\n\n  ionViewWillEnter() {\n    this.currentSegment = 'activa';\n   \n   // this.pideregistros( this.currentSegment);\n}\n  filterContacts(event: any) {\n    let selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n    this.pideregistros(selectedCategory);\n  }\n  pideregistros0() {\n  // this.pideregistros(this.currentSegment);\n  }\n\n  \n\n  async setCurrentLocationa33() {\n\n    const permResult = await Plugins.Geolocation.requestPermissions();\n  \n\n    if (!Capacitor.isPluginAvailable('Geolocation')) {\n      console.log('Plugin geolocation not available');\n      return;\n    }\n\n\n\n\n\n\n      Geolocation.getCurrentPosition().then(data => {\n        this.geoposiciontxt =  data.coords.latitude + '¬' + data.coords.longitude;\n      }).catch(err => {\n        this.geoposiciontxt = '';\n      });\n\n\n  }\n\n\n\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  \n  async updateRecord(item: any) {\n\n    \n    const navigationExtras: NavigationExtras = {\n      state: {\n        geoposiciontxt:this.geoposiciontxt, variables:  this.variables, record: item, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx,  esvisible: this.esvisible\n      }\n    };\n    this.router.navigate(['frmtareasprogramadasCreatePage'], navigationExtras);\n\n  \n\n\n    /*\n    const modal = await this.modalController.create({\n      component: frmtareasprogramadasCreatePage,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps:  {geoposiciontxt:this.geoposiciontxt, variables:  this.variables, record: item, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n      this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n    */\n\n}\n\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n\n\n  //****************************************************************************** */\n  createRandomEvents(data) {\n    var events = [];\n    this.subiendo=1;\n    for (var i = 0; i < data.length; i += 1) {\n     \n      var date0 =this.authenticationService.dafechastringtodatehora(String(data[i].fechainicio), data[i].horas.lower);\n        var date  =this.authenticationService.dafechastringtodatehora(String(data[i].fechafinal), data[i].horas.upper);\n        var startTime;\n       var endTime;\n        startTime =  new Date(Date.UTC(date0.getUTCFullYear(), date0.getUTCMonth(), date0.getUTCDate() ));\n        endTime = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate() ));\n      //  endTime = new Date(data[0].fechafinal);\n\n    //  startTime = new Date(date.getFullYear(), date.getMonth(), date.getDate() + i, 12, 0, 0);\n    //    endTime = new Date(date.getFullYear(), date.getMonth(), date.getDate() + i, 14, 0, 0);\n        events.push({\n            title: data[i].nombre,\n            startTime: date0,\n            endTime: date,\n            allDay: false,\n            id:data[i]._id\n        });\n    }\n\n    return events;\n}\n  loadEvents(data) {\n    this.eventSource = this.createRandomEvents(data);\n    // this.eventSource = this.createStaticAllDayEvents();\n    //  let eventSource = this.createStaticNormalDayEvents();\n    //  let eventSource1 = this.createStaticNormalDayEvents2();\n    //  let eventSource2 = this.createStaticNormalDayEvents3();\n    //  this.eventSource = eventSource.concat(eventSource1).concat(eventSource2);\n    //  this.eventSource = this.createStaticCrossDayEvents();\n}\n\nonViewTitleChanged(title) {\n    this.viewTitle = title;\n}\n\n\nchangeMode(mode) {\n    this.calendar.mode = mode;\n}\n\ntoday() {\n    this.calendar.currentDate = new Date();\n}\n\n\n\nonCurrentDateChanged(event:Date) {\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    event.setHours(0, 0, 0, 0);\n    this.isToday = today.getTime() === event.getTime();\n}\n\nnext() {\n  var swiper = document.querySelector('.swiper-container')['swiper'];\n  swiper.slideNext();\n}\n \nback() {\n  var swiper = document.querySelector('.swiper-container')['swiper'];\n  swiper.slidePrev();\n}\n \n// Change between month/week/day\nonRangeChanged(ev) {\n  console.log('range changed: startTime: ' + ev.startTime + ', endTime: ' + ev.endTime);\n}\n// Calendar event was clicked\nonEventSelected(event) {\n  // Use Angular date pipe for conversion\n  console.log('Event selected:' + event.startTime + '-' + event.endTime + ',' + event.title);\n\n\n}\n \n// Time slot was clicked\nonTimeSelected(ev) {\n\n  console.log('Selected time: ' + ev.selectedTime + ', hasEvents: ' +\n  (ev.events !== undefined && ev.events.length !== 0) + ', disabled: ' + ev.disabled);\n  \nthis.selectedDate = ev.selectedTime;\n\nif(this.subiendo===0)\n{\n\n  var arr:any = []\n  for(var i2 = 0; i2 < ev.events.length; i2++) {\n    arr.push(ev.events[i2].id)\n  }\n  this.authenticationService.getReg('tareasusuario2/' +  this.userinfo[0]._id + '/' + this.userinfo[0].idempresa._id+ '/' + arr, 'formulariotareass', 0).then((data) => {\n\n    const navigationExtras: NavigationExtras = {\n      state: { arreglo:arr,\n        geoposiciontxt:this.geoposiciontxt, variables:  this.variables, record: data, userinfo: this.userinfo, idllave: this.idllave, title: 'Tarea programada'\n      }\n    };\n    this.router.navigate(['formulariotareasListPage'], navigationExtras);\n\n\n  \n  }, (err) => {\n  this.authenticationService.presentAlert(err.error , this.msg , '');\n  });\n  \n}\nelse\n{\n  this.subiendo=0\n}\n\n\n\n}\n\n}\n"," <ion-header>\n <ion-toolbar color=\"primary\">\n   <ion-buttons slot=\"start\">\n     <ion-menu-button></ion-menu-button>\n\n     \n   </ion-buttons>\n   <ion-title>\n   Tareas de proyectos de ordenes\n   </ion-title>\n   <ion-buttons slot=\"end\">\n    \n     <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros('')\">\n       <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n       <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n       <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n     </ion-button>\n   </ion-buttons>\n </ion-toolbar>\n <ion-toolbar class=\"filters-toolbar\">\n   <ion-row class=\"searchbar-row\" align-items-center>\n     <ion-col>\n       <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n     </ion-col>\n     <ion-col [hidden]=\"!showAgeFilter\" class=\"call-to-action-col\">\n       <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" title=\" {{ 'FILTROM' | translate }}\" (click)=\"showAgeFilter = !showAgeFilter\">\n         <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n       </ion-button>\n     </ion-col>\n   </ion-row>\n   <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n     <ion-row class=\"range-item-row\">\n       <ion-col size=\"12\">\n         <div class=\"range-header\">\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n           <span class=\"range-label\">Filter by age</span>\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n         </div>\n       </ion-col>\n       <ion-col size=\"12\">\n         <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n       </ion-col>\n     </ion-row>\n   </form>\n </ion-toolbar>\n</ion-header>\n<ion-content class=\"user-friends-content\">\n <ion-item-divider sticky>\n   <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n </ion-item-divider>\n\n <ion-segment [(ngModel)]=\"calendar.mode\">\n  <ion-segment-button value=\"month\">\n    <ion-label>Mes</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value=\"week\">\n    <ion-label>Semana</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value=\"day\">\n    <ion-label>Dia</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n<ion-row>\n  <!-- Move back one screen of the slides -->\n  <ion-col size=\"2\">\n    <ion-button fill=\"clear\" (click)=\"back()\">\n      <ion-icon name=\"arrow-back\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n  </ion-col>\n\n  <ion-col size=\"8\" class=\"ion-text-center\">\n    <h2>{{ viewTitle }}</h2>\n  </ion-col>\n\n  <!-- Move forward one screen of the slides -->\n  <ion-col size=\"2\">\n    <ion-button fill=\"clear\" (click)=\"next()\">\n      <ion-icon name=\"arrow-forward\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n  </ion-col>\n</ion-row>\n\n<calendar\n  [eventSource]=\"eventSource\"\n  [calendarMode]=\"calendar.mode\"\n  [currentDate]=\"calendar.currentDate\"\n  (onEventSelected)=\"onEventSelected($event)\"\n  (onTitleChanged)=\"onViewTitleChanged($event)\"\n  (onTimeSelected)=\"onTimeSelected($event)\"\n  \n  step=\"30\"\n  \n  [monthviewDisplayEventTemplate]=\"template\"\n>\n</calendar>\n\n\n</ion-content>\n  \n<ng-template #template let-view=\"view\" let-row=\"row\" let-col=\"col\">\n  <div [class.with-event]=\"view.dates[row*7+col].events.length\">\n    {{view.dates[row*7+col].label}}\n    <div class=\"indicator-container\">\n      <div class=\"event-indicator\" *ngFor=\"let e of view.dates[row*7+col].events\"></div>\n    </div>\n  </div>\n</ng-template>\n"]}