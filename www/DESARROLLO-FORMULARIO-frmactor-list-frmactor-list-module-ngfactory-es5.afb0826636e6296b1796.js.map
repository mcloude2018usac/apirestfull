{"version":3,"sources":["webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/DESARROLLO/modals/my-modal/my-modal.page.ts","webpack:///src/app/components/skeleton-element/skeleton-element.component.html","webpack:///src/app/DESARROLLO/FORMULARIO/frmactor-list/frmactor-list.module.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmactor-list/frmactor-create/frmactor-create.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmactor-list/frmactor-list.page.ts","webpack:///src/app/DESARROLLO/FORMULARIO/frmactor-list/frmactor-list.page.html","webpack:///src/app/DESARROLLO/FORMULARIO/frmactor-list/frmactor-create/frmactor-create.page.html"],"names":["SkeletonElementComponent","width","height","borderRadius","rounded","noAnimated","inline","styles","this","MyModalPage","modalController","mapsAPILoader","ngZone","navParams","title","zoom","dismiss","direccion","address","la","latitude","lo","longitude","uubx","get","load","then","setCurrentLocationa","setCurrentLocation2a","geoCoder","google","maps","Geocoder","autocomplete","places","Autocomplete","searchElementRef","nativeElement","types","addListener","run","place","getPlace","geometry","location","lat","lng","getAddress","setCurrentLocationa33","watchId","Geolocation","clearWatch","id","isPluginAvailable","watchPosition","timeout","enableHighAccuracy","maximumAge","data","err","coords","e","console","error","log","Number","substring","indexOf","$event","geocode","results","status","formatted_address","window","alert","frmactorListPageModule","translateService","authenticationService","actionSheetController","variables","userinfo","tituloxx","vgrupo","apifoto","getapifoto","setTimeout","inputElement","setFocus","idllave","Form","compose","required","pattern","subscribe","value","lpermiso","_ID","record","_id","controls","setValue","nombre","estado","options","idempresa","idpapa","bitacora","idafiliado","email","permiso","accion","createReg","result","valid","presentAlert","op","op2","presentingElement","uub","swipeToClose","backdropDismiss","animated","getTop","modal","component","componentProps","create","onWillDismiss","present","image","Camera","getPhoto","correctOrientation","quality","allowEditing","resultType","DataUrl","source","generateFromImage","dataUrl","fotoimg","procesafoto","controlx","length","firstFileToBase64","fotoa","uploadPWA2","files","fileImage","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","Error","click","actionSheet","header","cssClass","buttons","text","role","icon","handler","takePicture2","takePicture","catalogot","frmt","comp","labelx","sigraba","grabax","record2","frm","titlex","datax","routerOutlet","router","alertController","showAgeFilter","showmenu","items","viewType","efecto","seguro","msg","currentSegment","searchSubject","ReplaySubject","getCurrentNavigation","extras","state","getcopiauser","searchQuery","rangeForm","dual","lower","upper","pideregistros","event","selectedCategory","detail","itemsList","getReg","next","query","filterList","list","filter","item","toLowerCase","includes","inputs","name","type","label","checked","todo","arr","split","navigate","user","idllave0","title2","message","blah","deleteReg","nativeEl","target","complete","disabled"],"mappings":"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","file":"x","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { MapsAPILoader, AgmMap } from '@agm/core';\nimport { ModalController , NavParams} from '@ionic/angular';\n\nimport { Plugins, Capacitor , CallbackID} from '@capacitor/core';\nconst { Geolocation} = Plugins;\n\n\n@Component({\n  selector: 'app-my-modal',\n  templateUrl: './my-modal.page.html',\n  styleUrls: ['./my-modal.page.scss'],\n})\nexport class MyModalPage implements OnInit {\n\n\n  title = 'AGM project';\n  latitude: number;\n  longitude: number;\n  zoom = 16 ;\n  address: string;\n  uubx: string;\n  watchId: CallbackID;\n  private geoCoder;\n  tituloxx: any;\n\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n\n  constructor( private modalController: ModalController,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n    private navParams: NavParams\n  ) { }\n\n  dismissModal() {     this.modalController.dismiss('close');      }\n\n  dadireccion() {     this.modalController.dismiss({direccion: this.address, la: this.latitude, lo: this.longitude});      }\n  ngOnInit() {\n\n    this.uubx = this.navParams.get('uubx');\n\n\n\n    this.mapsAPILoader.load().then(() => {\n      if (this.uubx === '') {     this.setCurrentLocationa();      } else      {  this.setCurrentLocation2a();      }\n      this.geoCoder = new google.maps.Geocoder;\n\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: ['address']\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          if (place) {\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.getAddress(this.latitude, this.longitude);\n          }\n        });\n      });\n    });\n\n  }\n\n  loadMap() {\n    this.mapsAPILoader.load().then(() => {\n   this.setCurrentLocationa33();\n\n\n    });\n  }\n\n  clearWatch() {\n    if (this.watchId != null) {\n      Plugins.Geolocation.clearWatch({ id: this.watchId });\n    }\n  }\n  // Get Current Location Coordinates\n  setCurrentLocationa33() {\n    if (!Capacitor.isPluginAvailable('Geolocation')) {\n      console.log('Plugin geolocation not available');\n      return;\n    }\n    try {\n      this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n        if (data) {\n          this.latitude = data.coords.latitude;\n          this.longitude = data.coords.longitude;\n      \n  \n        }\n  \n    });\n  } catch (e) {\n    console.error(e);\n  }\n  \n  }\n  setCurrentLocationa() {\n  if (!Capacitor.isPluginAvailable('Geolocation')) {\n    console.log('Plugin geolocation not available');\n    return;\n  }\n  try {\n    this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n      if (data) {\n        this.latitude = data.coords.latitude;\n        this.longitude = data.coords.longitude;\n        this.getAddress(this.latitude, this.longitude);\n\n      }\n\n  });\n} catch (e) {\n  console.error(e);\n}\n\n}\n\nsetCurrentLocation2a() {\n  if (!Capacitor.isPluginAvailable('Geolocation')) {\n    console.log('Plugin geolocation not available');\n    return;\n  }\n  try {\n    this.watchId = Plugins.Geolocation.watchPosition({timeout: 1000, enableHighAccuracy: true, maximumAge: 1000}, (data, err) => {\n    this.latitude = Number( this.uubx.substring(this.uubx.indexOf('{') + 1, this.uubx.indexOf('°') ));\n    this.longitude = Number( this.uubx.substring(this.uubx.indexOf('°') + 1, this.uubx.indexOf('}')) );\n    if (this.latitude !== 0) {\n      if (this.latitude) {\n      this.getAddress(this.latitude, this.longitude);\n      }\n    }\n\n  });\n} catch (e) {\n  console.error(e);\n}\n\n}\n\n\n\n\n  markerDragEnd($event: any) {\n    if (this.latitude !== 0) {\n      if (this.latitude) {\n    this.latitude = $event.coords.lat;\n    this.longitude = $event.coords.lng;\n    this.getAddress(this.latitude, this.longitude);\n      }}\n  }\n\n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      console.log(results);\n      console.log(status);\n      if (status === 'OK') {\n        if (results[0]) {\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n\n    });\n  }\n\n  async closeModal() {\n    this.modalController.dismiss('close');\n  }\n\n}\n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\nimport { frmactorCreatePage } from './frmactor-create/frmactor-create.page';\nimport { frmactorListPage } from './frmactor-list.page';\n@NgModule({\n  declarations: [\n    frmactorListPage, frmactorCreatePage\n  ],\n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule,\n    RouterModule.forChild([{ path: '', component: frmactorListPage }]), TranslateModule.forChild(),\n  ],\n  entryComponents: [\n    frmactorCreatePage\n  ],\n})\nexport class frmactorListPageModule {}\n","import { Component, OnInit , ViewChild ,  ElementRef} from '@angular/core';\nimport { ModalController , NavParams , ActionSheetController, IonInput } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthenticationService } from '../../../services/Authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MyModalPage } from '../../../modals/my-modal/my-modal.page';\nimport { MyModalComboPage } from './../../../modals/my-modal-combo/my-modal-combo.page';\nimport {Plugins,  CameraResultType,  CameraSource} from '@capacitor/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n@Component({\n  selector: 'app-frmactor-create',\n  templateUrl: './frmactor-create.page.html',\n  styleUrls: ['./frmactor-create.page.scss'],\n})\nexport class frmactorCreatePage implements OnInit {\n@ViewChild('inputId', {  static: false })  inputElement: IonInput;\n @ViewChild('fotoa', {static: true}) fotoa: ElementRef;\n  Form: FormGroup;\n // @ViewChild('createForm', { static: false }) createForm: FormGroupDirective;\n  variables: any = [];\n  userinfo: any = [];\n  idllave: any ;\n  tituloxx = '';\n  vgrupo: any = [];\n  _ID: any;\n  lpermiso: any;\n  apifoto: String ;\n  fotoimg: SafeResourceUrl;\n  constructor(\n    private modalController: ModalController,\n    public translateService: TranslateService    , private authenticationService: AuthenticationService,\n    private navParams: NavParams , public actionSheetController: ActionSheetController\n  ) { this.apifoto = this.authenticationService.getapifoto(); }\n  ngAfterViewInit() {    setTimeout(() => {       this.inputElement.setFocus();  }, 400);}\n  dismissModal() {     this.modalController.dismiss('close');      }\n  ionViewDidEnter(): void {               }\n  ngOnInit(): void {\n    this.variables = this.navParams.get('variables');\n    this.userinfo = this.navParams.get('userinfo');\n    this.idllave=  this.navParams.get('idllave');\n    this.tituloxx =  this.navParams.get('title');\n    this.Form = new FormGroup({\n       'nombre': new FormControl('', Validators.compose([Validators.required,Validators.pattern('[a-zA-Z0-9-_()áéíóúÁÉÍÓÚ#*$!? ñÑ&+-/.]*')])),\n    \n       'estado': new FormControl('', Validators.required),\n    });\n    if (this.navParams.get('record') == null) {\n       this.translateService.get('NUEVOM').subscribe((value) => {   this.tituloxx = value +' '+ this.tituloxx;this.lpermiso = value; });\n   \n    } else {\n       this.translateService.get('ACTUALIZAM').subscribe((value) => {this.tituloxx = value + ' '+ this.tituloxx; this.lpermiso = value; });\n       this._ID \t\t\t\t=\tthis.navParams.data.record._id;\n       this.Form.controls['nombre'].setValue(this.navParams.data.record.nombre);\n     \n       this.Form.controls['estado'].setValue(this.navParams.data.record.estado);\n    }\n  }\n  //onSgrupoChange(selectedValue: any) {    this.sgrupo = selectedValue.detail.value ;(ionChange)='onSgrupoChange($event)'   }\n  submitForm() {\n    const   options: any\t     = {\n       idempresa: this.userinfo[0].idempresa._id,\n        idpapa: this.idllave,\n       nombre  : this.Form.controls['nombre'].value,\n    \n       estado  : this.Form.controls['estado'].value,\n       bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n       email: this.userinfo[0].email , permiso : this.lpermiso, accion: this.tituloxx}\n   };\n   if (this.navParams.get('record') == null) {\n        if (options) {\n          this.authenticationService.createReg('', options, 'frmactors').then((result) => {\n            if (!this.Form.valid) { return; }\n            this.modalController.dismiss('ok');\n        }, (err) => {\n          this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n        });\n        }\n   } else {\n    if (options) {\n      this.authenticationService.createReg(this._ID, options, 'frmactors').then((result) => {\n         if (!this.Form.valid) { return; }\n         this.modalController.dismiss('ok');\n     }, (err) => {\n      this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n     });\n  }}\n  }\n  async dacomponente(op, op2) {\n        let uub = '';\n        if ( op === 'ubicacion') {uub = this.Form.controls['ubicacion'].value; }\n        const modal = await this.modalController.create({\n          component: MyModalPage,      swipeToClose: false,    backdropDismiss: false,     animated: true,\n          presentingElement: await this.modalController.getTop(),\n          componentProps:  { variables:  this.variables, record: null, userinfo: this.userinfo, uubx : uub}\n          // , cssClass: 'modal-fullscreen'\n        });\n        modal.onWillDismiss().then((data) => {\n             if ( data.data === 'close' ) {     }      else      {\n             if (op === 'direccion') {\n              this.Form.controls['direccion'].setValue(data.data.direccion);\n             } else {\n              this.Form.controls['ubicacion'].setValue(data.data.direccion + ' {' + data.data.la + '°' + data.data.lo + '}');\n             }\n            }\n        });\nreturn await modal.present();\n      }\n  /*************************************************+++++FOTOS */\n  async takePicture(op) {\n  const image = await Plugins.Camera.getPhoto({\n  correctOrientation: true,\n            height: 200,\n            width: 200,\n                quality: 60,\n  allowEditing: true,\n            resultType: CameraResultType.DataUrl,\n            source: CameraSource.Camera\n          });\n          this.authenticationService.generateFromImage(image.dataUrl, 200, 200, 0.5, data => {\n            switch (op) {\n              case 'fotoa': this.fotoimg = data;   this.Form.controls['foto'].setValue( this.authenticationService.procesafoto(this.Form.controls['foto'].value)); break;\n                default:\n            }\n        });\n        }\n  uploadPWA2(op , controlx) {\n         const fileList: FileList = controlx;\n         if (fileList && fileList.length > 0) {\n                 this.firstFileToBase64(fileList[0]).then((result: string) => {\n                 this.authenticationService.generateFromImage(result, 200, 300, 0.5, data => {\n                 switch (op) {\n                         case 'fotoa':  this.fotoimg = data;    this.Form.controls['foto'].setValue( this.authenticationService.procesafoto(this.Form.controls['foto'].value)); break;\n                          default:\n                  }\n                 });\n                 }, (err: any) => {\n                 switch (op) {\n                 case 'fotoa':  this.fotoimg = null;  this.Form.controls['foto1'].setValue('');  break;\n                 default:\n                 }\n                 });\n  }}\n  uploadPWA(op) {\n  switch (op) {\n  case 'fotoa':  if (this.fotoa == null ) { return;}\n  this.uploadPWA2(op , this.fotoa.nativeElement.files); break;\n  default:\n  }\n  }\n  private firstFileToBase64(fileImage: File): Promise<{}> {\n  return new Promise((resolve, reject) => {\n  const fileReader: FileReader = new FileReader();\n  if (fileReader && fileImage != null) {\n  fileReader.readAsDataURL(fileImage);\n  fileReader.onload = () => {\n  resolve(fileReader.result);\n  };\n  fileReader.onerror = (error) => {\n  reject(error);\n  };\n  } else {\n  reject(new Error('No file found'));\n  }\n  });\n  }\n        async takePicture2(op) {\n  if ( op === 'fotoa')  {     this.fotoa.nativeElement.click();  }\n        }\n        async fotodatos( op ) {\n          const actionSheet = await this.actionSheetController.create({\n            header: 'Foto',\n            cssClass: 'my-custom-class',\n            buttons: [{   text: 'Galeria',  role: 'destructive',  icon: 'image-outline',\n              handler: () => {\n                this.takePicture2(op);\n              }\n            }, {\n              text: 'Camara',\n              icon: 'camera-outline',\n              handler: () => {\n                this.takePicture(op);\n              }\n            }]\n          });\n          await actionSheet.present();\n        }\n      /****************************************COMBO DE DATOS */\n      async combodatos( op ,  catalogot, frmt, comp, labelx,sigraba) {\n          const modal = await this.modalController.create({\n            component: MyModalComboPage,   swipeToClose: false,     backdropDismiss: false,    animated: true,\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {grabax: sigraba , variables:  this.variables, userinfo: this.userinfo\n              ,  record2 : null , op:  catalogot, frm: frmt, idllave : this.idllave, titlex: 'Buscar ' + labelx}\n            // , cssClass: 'modal-fullscreen'\n          });\n          modal.onWillDismiss().then((data) => {\n            let datax: any = [];\n            datax = data;\n    if (datax.data !==  'close')       {\n        if (datax.data) {this.Form.controls[comp].setValue(datax.data.nombre);\n            //  this.Form.controls[comp].id = datax.data._id\n            } else {        this.Form.controls[comp].setValue('');       }\n          }\n});\n          return await modal.present();\n        }\n}\n","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { frmactorCreatePage } from './frmactor-create/frmactor-create.page';\n@Component({\nselector: 'page-frmactor-list',\ntemplateUrl: 'frmactor-list.page.html',\nstyleUrls: ['./frmactor-list.page.scss'],\n})\nexport class frmactorListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false;showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidllave:any;\nviewType = 'grid';\ntituloxx = '';\nefecto = 0;\nseguro ='';\nmsg = '';\napifoto: String;\nitemsList: Array<any>;\npublic currentSegment: string = \"Todos\";\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {  this.apifoto = this.authenticationService.getapifoto();\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nngOnInit() {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.tituloxx =this.router.getCurrentNavigation().extras.state.title;\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });   \n    this.currentSegment = 'todos';\n    this.pideregistros( this.currentSegment);\n  }\n  filterContacts(event: any) {\n    let selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n    this.pideregistros(selectedCategory);\n  }\n  pideregistros0() {\n   this.pideregistros(this.currentSegment);\n  }\n  pideregistros(op) {\n       this.itemsList = [];\n       this.efecto = 0 ;\n      // this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id + '/' + this.idllave, 'frmactors', 0).then((data) => {\n       this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id + '/' + this.idllave, 'frmactors', 0).then((data) => {\n       this.efecto=1;\n       this.items =  data;\n       this.itemsList = this.items;\n }, (err) => {\n   this.authenticationService.presentAlert(err.error , this.msg , '');\n });\n  }\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n  async otrasop(item: any) { \n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n       header: 'Seleccione Opción',\n       inputs: [\n        {\n          name: 'Grupousuarios',\n          type: 'radio',\n          label: 'Grupos de usuarios',\n          checked: true,\n          value: '/frmactorgrupoListPage°Grupos de usuarios ->' + item.nombre + '°'+ item.nombre,\n        }\n       ],\n       buttons: [\n         {\n           text: 'Cancel',\n           role: 'cancel',\n           cssClass: 'secondary',\n           handler: (todo) => {\n             console.log(todo);\n           }\n         }, {\n           text: 'Ok',\n           handler: (todo) => {\n             var arr = todo.split('°');\n             const navigationExtras: NavigationExtras = {\n               state: {\n                 variables: this.variables,\n                 user: null,\n                 idllave: item._id,\n                 idllave0: this.idllave,\n                 title: arr[1],\n                 title2: arr[2]\n               }\n             };\n             this.router.navigate([arr[0]], navigationExtras);\n           }\n         }\n       ]\n     });\n     await alert.present();   \n }\n   async deleteRecord(item: any) {\n    const alert = await this.alertController.create({\n      header: this.seguro,\n      message: '',\n      buttons: [\n        {\n          text: 'No',\n         cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n           text: 'Si',\n           handler: () => {\n             const recordID: string\t\t= item._id;\n             this.authenticationService.deleteReg(recordID + '/' + this.userinfo[0].email + '/' + this.userinfo[0].idempresa._id  + '/'\n             + 'na' , 'frmactors').then((data) => {\n               this.pideregistros( this.currentSegment);\n               }, (err) => {\n                 this.authenticationService.presentAlert(err.error, this.msg, '');\n             });\n           }\n         }\n       ]\n     });\n     await alert.present();\n   }\n  async updateRecord(item: any) {\n    const modal = await this.modalController.create({\n      component: frmactorCreatePage,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps:  { variables:  this.variables, record: item, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n      this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n}\n   async  addRecord() {\n    const modal = await this.modalController.create({\n      component: frmactorCreatePage,\n      swipeToClose: false,\n      backdropDismiss: false,\n     animated: true,\n      presentingElement: await this.modalController.getTop(),\n      componentProps:  { variables:  this.variables, record: null, userinfo: this.userinfo, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n        this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n   }\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n}\n"," <ion-header>\n <ion-toolbar color=\"primary\">\n   <ion-buttons slot=\"start\">\n    <ion-back-button defaultHref=\"FormsListPage\"></ion-back-button>\n   </ion-buttons>\n   <ion-title>\n     {{tituloxx}}\n   </ion-title>\n   <ion-buttons slot=\"end\">\n     <ion-button title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n       <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n     </ion-button>\n     <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n       <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n       <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n       <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n     </ion-button>\n   </ion-buttons>\n </ion-toolbar>\n <ion-toolbar class=\"filters-toolbar\">\n   <ion-row class=\"searchbar-row\" align-items-center>\n     <ion-col>\n       <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n     </ion-col>\n     <ion-col [hidden]=\"!showAgeFilter\" class=\"call-to-action-col\">\n       <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" title=\" {{ 'FILTROM' | translate }}\" (click)=\"showAgeFilter = !showAgeFilter\">\n         <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n       </ion-button>\n     </ion-col>\n   </ion-row>\n   <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n     <ion-row class=\"range-item-row\">\n       <ion-col size=\"12\">\n         <div class=\"range-header\">\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n           <span class=\"range-label\">Filter by age</span>\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n         </div>\n       </ion-col>\n       <ion-col size=\"12\">\n         <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n       </ion-col>\n     </ion-row>\n   </form>\n </ion-toolbar>\n</ion-header>\n<ion-content class=\"user-friends-content\">\n <ion-item-divider sticky>\n   <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n </ion-item-divider>\n <ion-segment (ionChange)=\"filterContacts($event)\" value=\"todos\">\n   <ion-segment-button value=\"todos\" checked>\n     {{ 'TODOSM' | translate }}\n   </ion-segment-button>\n   <ion-segment-button value=\"Activo\">\n     {{ 'ACTIVOSM' | translate }}\n    </ion-segment-button>\n   <ion-segment-button value=\"Inactivo\">\n     {{ 'INACTIVOSM' | translate }}\n   </ion-segment-button>\n </ion-segment>\n <ion-list *ngIf=\"efecto === 0\" >\n   <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n     <ion-label>\n       <skeleton-element></skeleton-element>\n       <skeleton-element></skeleton-element>\n       <skeleton-element width=\"67%\"></skeleton-element>\n     </ion-label>\n   </ion-item>\n </ion-list>\n <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n   <ion-item  *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n<ion-grid>\n<ion-row>\n  <ion-col  (click)=\"updateRecord(item)\" size=\"12\">\n     <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n    <ion-label class=\"ion-text-wrap\">\n        <ion-note slot=\"end\">No. {{i+1}}</ion-note> <br>\n<p>\n        <strong>Nombre:</strong> {{item.nombre}} <br>    \n    \n    \n</p>   <ion-badge color=\"medium\">{{item.estado}}</ion-badge>\n     </ion-label>\n</ion-col>\n</ion-row>\n  <ion-row>\n<ion-col size=\"12\">\n      <ion-toolbar  color=\"transparent\">\n        <ion-buttons slot=\"secondary\">\n          <ion-button  title=\"{{ 'ELIMINARM' | translate }}\"  (click)=\"deleteRecord(item)\" >\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n   </ion-item>\n </ion-list>\n <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n   <ion-row>\n     <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n       <ion-card  >\n         <ion-row class=\"user-stats-wrapper user-details-wrapper\">\n           <ion-col>\n             <span class=\"user-stat-value\">No.</span>\n             <span class=\"user-stat-name\">{{i+1}} </span>\n           </ion-col>\n           <ion-col>\n             <span class=\"user-stat-value\">{{item.estado}} </span>\n           </ion-col>\n         </ion-row>\n         <ion-item   [routerLink]=\"\">\n           <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n           <ion-label (click)=\"updateRecord(item)\"   class=\"ion-text-wrap\">\n <p> \n              <strong>Nombre:</strong> {{item.nombre}} <br>    \n            \n      \n </p>    </ion-label>\n         </ion-item>\n         <ion-card-content>\n         </ion-card-content>\n         <ion-row no-padding>\n           <ion-col  size=\"12\" >\n      <ion-toolbar  color=\"transparent\">\n        <ion-buttons slot=\"secondary\">\n          <ion-button  title=\"{{ 'ELIMINARM' | translate }}\"  (click)=\"deleteRecord(item)\" >\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n           </ion-col>\n         </ion-row>\n       </ion-card>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n   {{ 'NODATOS' | translate }}  \n </h3>\n <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n   <ion-infinite-scroll-content\n     loadingSpinner=\"bubbles\"\n     loadingText=\"Espere un momento...\">\n   </ion-infinite-scroll-content>\n </ion-infinite-scroll>\n</ion-content>\n","<form class=\"create-user-form ion-page\" [formGroup]=\"Form\" >\n<ion-header>\n        <ion-toolbar color=\"primary\">\n                <ion-buttons slot=\"end\">\n                        <ion-button (click)=\"dismissModal()\">\n                           <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                        </ion-button>\n                </ion-buttons>\n                <ion-title>{{tituloxx}}</ion-title>\n        </ion-toolbar>\n</ion-header>\n<ion-content class=\"create-form-content\">\n    <section class=\"user-details-fields fields-section\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Nombre<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-input inputMode=\"text\" #inputId  clearInput=\"true\" formControlName=\"nombre\" required></ion-input>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('nombre').hasError('required') && (Form.get('nombre').dirty || Form.get('nombre').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un nombre valido</span>\n</div>\n </div>\n\n   \n\n      <ion-item class=\"input-item\">\n              <ion-label >Estado<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-select #inputId  placeholder=\"{{ 'SELECTVALORM' | translate }}\" formControlName=\"estado\">\n              <ion-select-option text-wrap value=\"Activo\">Activo</ion-select-option>\n              <ion-select-option text-wrap value=\"Inactivo\">Inactivo</ion-select-option>\n              </ion-select>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('estado').hasError('required') && (Form.get('estado').dirty || Form.get('estado').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un estado valido</span>\n</div>\n </div>\n\n     </ion-list>\n  </section>\n</ion-content>\n<ion-footer>\n  <ion-row class=\"form-actions-wrapper\">\n    <ion-col>\n      <ion-button (click)=\"submitForm()\" color=\"primary\" expand=\"block\" fill=\"outline\" type=\"submit\" [disabled]=\"!Form.valid\">CREAR</ion-button>\n      </ion-col>\n  </ion-row>\n</ion-footer>\n</form>   \n"]}