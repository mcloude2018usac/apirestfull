{"version":3,"sources":["webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/DESARROLLO/ASOCIADOINVENTARIO/subcategoria-list/subcategoria-list.module.ts","webpack:///src/app/DESARROLLO/ASOCIADOINVENTARIO/subcategoria-list/subcategoria-create/subcategoria-create.page.ts","webpack:///src/app/DESARROLLO/ASOCIADOINVENTARIO/subcategoria-list/subcategoria-list.page.ts","webpack:///src/app/DESARROLLO/ASOCIADOINVENTARIO/subcategoria-list/subcategoria-list.page.html","webpack:///src/app/DESARROLLO/ASOCIADOINVENTARIO/subcategoria-list/subcategoria-create/subcategoria-create.page.html","webpack:///src/app/components/skeleton-element/skeleton-element.component.html"],"names":["SkeletonElementComponent","width","height","borderRadius","rounded","noAnimated","inline","styles","this","SubcategoriaListPageModule","modalController","translateService","authenticationService","navParams","actionSheetController","variables","userinfo","tituloxx","vgrupo","dismiss","setTimeout","inputElement","setFocus","get","idllave","idllave0","idempresa","Form","compose","required","pattern","subscribe","value","lpermiso","_ID","data","record","_id","controls","setValue","nombre","descripcion","estado","options","idpapa","bitacora","idafiliado","email","permiso","accion","createReg","then","result","valid","err","presentAlert","error","routerOutlet","router","alertController","showAgeFilter","showmenu","items","viewType","efecto","seguro","msg","currentSegment","searchSubject","ReplaySubject","getCurrentNavigation","extras","state","getcopiauser","title","searchQuery","rangeForm","dual","lower","upper","pideregistros","event","selectedCategory","detail","op","itemsList","getReg","next","query","filterList","list","filter","item","toLowerCase","includes","alert","create","cssClass","header","inputs","name","type","label","checked","buttons","text","role","handler","todo","console","log","arr","split","navigate","user","present","message","blah","deleteReg","modal","component","swipeToClose","presentingElement","nativeEl","componentProps","onWillDismiss","backdropDismiss","animated","getTop","target","complete","length","disabled"],"mappings":"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","file":"x","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\nimport { SubcategoriaCreatePage } from './subcategoria-create/subcategoria-create.page';\nimport { SubcategoriaListPage } from './subcategoria-list.page';\n@NgModule({\n  declarations: [\n    SubcategoriaListPage, SubcategoriaCreatePage\n  ],\n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule,\n    RouterModule.forChild([{ path: '', component: SubcategoriaListPage }]), TranslateModule.forChild(),\n  ],\n  entryComponents: [\n    SubcategoriaCreatePage\n  ],\n})\nexport class SubcategoriaListPageModule {}\n","import { Component, OnInit , ViewChild ,  ElementRef} from '@angular/core';\nimport { ModalController , NavParams , ActionSheetController, IonInput } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthenticationService } from '../../../services/Authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MyModalComboPage } from './../../../modals/my-modal-combo/my-modal-combo.page';\nimport {Plugins,  CameraResultType,  CameraSource} from '@capacitor/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n@Component({\n  selector: 'app-subcategoria-create',\n  templateUrl: './subcategoria-create.page.html',\n  styleUrls: ['./subcategoria-create.page.scss'],\n})\nexport class SubcategoriaCreatePage implements OnInit {\n  @ViewChild('inputId', {  static: false })  inputElement: IonInput;\n  Form: FormGroup;\n // @ViewChild('createForm', { static: false }) createForm: FormGroupDirective;\n  variables: any = [];\n  userinfo: any = [];\n  idllave: any ;\n  idllave0: any ;\n  tituloxx = '';\n  idempresa: any;\n  vgrupo: any = [];\n  _ID: any;\n  lpermiso: any;\n  constructor(\n    private modalController: ModalController,\n    public translateService: TranslateService    , private authenticationService: AuthenticationService,\n    private navParams: NavParams , public actionSheetController: ActionSheetController\n  ) { }\n  dismissModal() {     this.modalController.dismiss('close');      }\n  ngAfterViewInit() {    setTimeout(() => {       this.inputElement.setFocus();  }, 400);}\n  ionViewDidEnter(): void {               }\n  ngOnInit(): void {\n    this.variables = this.navParams.get('variables');\n    this.userinfo = this.navParams.get('userinfo');\n    this.idllave=  this.navParams.get('idllave');\n    this.idllave0=  this.navParams.get('idllave0');\n    this.tituloxx =  this.navParams.get('title');\n    this.idempresa =  this.navParams.get('idempresa');\n    \n    this.Form = new FormGroup({\n       'nombre': new FormControl('', Validators.compose([Validators.required,Validators.pattern('[a-zA-Z0-9 ]*')])),\n       'descripcion': new FormControl(''),\n       'estado': new FormControl('', Validators.required)\n    });\n    if (this.navParams.get('record') == null) {\n       this.translateService.get('NUEVOM').subscribe((value) => {   this.tituloxx = value +' '+ this.tituloxx;this.lpermiso = value; });\n\n    } else {\n       this.translateService.get('ACTUALIZAM').subscribe((value) => {this.tituloxx = value + ' '+ this.tituloxx; this.lpermiso = value; });\n       this._ID \t\t\t\t=\tthis.navParams.data.record._id;\n       this.Form.controls['nombre'].setValue(this.navParams.data.record.nombre);\n       this.Form.controls['descripcion'].setValue(this.navParams.data.record.descripcion);\n       this.Form.controls['estado'].setValue(this.navParams.data.record.estado);\n    }\n  }\n  //onSgrupoChange(selectedValue: any) {    this.sgrupo = selectedValue.detail.value ;(ionChange)='onSgrupoChange($event)'   }\n  submitForm() {\n    const   options: any\t     = {\n       idempresa: this.idempresa,\n        idpapa: this.idllave,\n       idllave0  : this.idllave0,\n       nombre  : this.Form.controls['nombre'].value,\n       descripcion  : this.Form.controls['descripcion'].value,\n       estado  : this.Form.controls['estado'].value,\n       bitacora: { idempresa : this.idempresa , idafiliado: '' ,\n       email: this.userinfo[0].email , permiso : this.lpermiso, accion: this.tituloxx}\n   };\n   if (this.navParams.get('record') == null) {\n        if (options) {\n          this.authenticationService.createReg('', options, 'subcategorias').then((result) => {\n            if (!this.Form.valid) { return; }\n            this.modalController.dismiss('ok');\n        }, (err) => {\n          this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n        });\n        }\n   } else {\n    if (options) {\n      this.authenticationService.createReg(this._ID, options, 'subcategorias').then((result) => {\n         if (!this.Form.valid) { return; }\n         this.modalController.dismiss('ok');\n     }, (err) => {\n      this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n     });\n  }}\n  }\n  /*\n  async takePicture(op) {\n  const image = await Plugins.Camera.getPhoto({\n  correctOrientation: true,\n            height: 200,\n            width: 200,\n                quality: 60,\n  allowEditing: true,\n            resultType: CameraResultType.DataUrl,\n            source: CameraSource.Camera\n          });\n          this.authenticationService.generateFromImage(image.dataUrl, 200, 200, 0.5, data => {\n            switch (op) {\n              case 'fotoa': this.fotoimg = data; break;\n                default:\n            }\n        });\n        }\n  uploadPWA2(op , controlx) {\n         const fileList: FileList = controlx;\n         if (fileList && fileList.length > 0) {\n                 this.firstFileToBase64(fileList[0]).then((result: string) => {\n                 this.authenticationService.generateFromImage(result, 200, 300, 0.5, data => {\n                 switch (op) {\n                         case 'fotoa':  this.fotoimg = data;  this.Form.controls['foto1'].setValue(data); break;\n                          default:\n                  }\n                 });\n                 }, (err: any) => {\n                 switch (op) {\n                 case 'fotoa':  this.fotoimg = null; break;\n                 default:\n                 }\n                 });\n  }}\n  uploadPWA(op) {\n  switch (op) {\n  case 'fotoa':  if (this.fotoa == null ) { return;}\n  this.uploadPWA2(op , this.fotoa.nativeElement.files); break;\n  default:\n  }\n  }\n  private firstFileToBase64(fileImage: File): Promise<{}> {\n  return new Promise((resolve, reject) => {\n  const fileReader: FileReader = new FileReader();\n  if (fileReader && fileImage != null) {\n  fileReader.readAsDataURL(fileImage);\n  fileReader.onload = () => {\n  resolve(fileReader.result);\n  };\n  fileReader.onerror = (error) => {\n  reject(error);\n  };\n  } else {\n  reject(new Error('No file found'));\n  }\n  });\n  }\n        async takePicture2(op) {\n  if ( op === 'fotoa')  {     this.fotoa.nativeElement.click();  }\n        }\n        async fotodatos( op ) {\n          const actionSheet = await this.actionSheetController.create({\n            header: 'Foto',\n            cssClass: 'my-custom-class',\n            buttons: [{   text: 'Galeria',  role: 'destructive',  icon: 'image-outline',\n              handler: () => {\n                this.takePicture2(op);\n              }\n            }, {\n              text: 'Camara',\n              icon: 'camera-outline',\n              handler: () => {\n                this.takePicture(op);\n              }\n            }]\n          });\n          await actionSheet.present();\n        }\n   \n      async combodatos( op ,  catalogot, frmt, comp, labelx) {\n          const modal = await this.modalController.create({\n            component: MyModalComboPage,   swipeToClose: false,     backdropDismiss: false,    animated: true,\n            presentingElement: await this.modalController.getTop(),\n            componentProps: { variables:  this.variables, userinfo: this.userinfo\n              ,  record2 : null , op: this.idllave + '-' + catalogot, frm: frmt, idllave : this.idllave, titlex: 'Buscar ' + labelx}\n            // , cssClass: 'modal-fullscreen'\n          });\n          modal.onWillDismiss().then((data) => {\n            let datax: any = [];\n            datax = data;\n            if (datax.data) {this.Form.controls[comp].setValue(datax.data.nombre);\n            //  this.Form.controls[comp].id = datax.data._id\n            } else {        this.Form.controls[comp].setValue('');       }\n          });\n          return await modal.present();\n        }\n        */\n}\n","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { SubcategoriaCreatePage } from './subcategoria-create/subcategoria-create.page';\n@Component({\nselector: 'page-subcategoria-list',\ntemplateUrl: 'subcategoria-list.page.html',\nstyleUrls: ['./subcategoria-list.page.scss'],\n})\nexport class SubcategoriaListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false;showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidllave:any;\nidllave0:any;\nidempresa: any;\nviewType = 'grid';\ntituloxx = '';\nefecto = 0;\nseguro ='';\nmsg = '';\nitemsList: Array<any>;\npublic currentSegment: string = \"Todos\";\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nngOnInit() {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n    this.idllave0 = this.router.getCurrentNavigation().extras.state.idllave0;\n    this.idempresa = this.router.getCurrentNavigation().extras.state.idempresa;\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.tituloxx = this.router.getCurrentNavigation().extras.state.title ;\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });   \n    this.currentSegment = 'todos';\n    this.pideregistros( this.currentSegment);\n  }\n  filterContacts(event: any) {\n    let selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n    this.pideregistros(selectedCategory);\n  }\n  pideregistros0() {\n   this.pideregistros(this.currentSegment);\n  }\n  pideregistros(op) {\n       this.itemsList = [];\n       this.efecto = 0 ;\n      // this.authenticationService.getReg('todos/' + op + '/' + this.idempresa + '/' + this.idllave, 'subcategorias', 0).then((data) => {\n       this.authenticationService.getReg('todos/' + op + '/' + this.idempresa + '/'+ this.idllave, 'subcategorias', 0).then((data) => {\n       this.efecto=1;\n       this.items =  data;\n       this.itemsList = this.items;\n }, (err) => {\n   this.authenticationService.presentAlert(err.error , this.msg , '');\n });\n  }\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n  async otrasop(item: any) { \n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n       header: 'Seleccione Opción',\n       inputs: [\n         {\n           name: 'Productos',\n           type: 'radio',\n           label: 'Productos',\n           value: '/ProductoListPage°PRODUCTOS',\n           checked: true\n         }\n       ],\n       buttons: [\n         {\n           text: 'Cancel',\n           role: 'cancel',\n           cssClass: 'secondary',\n           handler: (todo) => {\n             console.log(todo);\n           }\n         }, {\n           text: 'Ok',\n           handler: (todo) => {\n             var arr = todo.split('°');\n             const navigationExtras: NavigationExtras = {\n               state: {\n                 variables: this.variables,\n                 user: null,\n                 idempresa: this.idempresa,\n                 idllave: item._id,\n                 title: arr[1]\n               }\n             };\n             this.router.navigate([arr[0]], navigationExtras);\n           }\n         }\n       ]\n     });\n     await alert.present();   \n }\n   async deleteRecord(item: any) {\n    const alert = await this.alertController.create({\n      header: this.seguro,\n      message: '',\n      buttons: [\n        {\n          text: 'No',\n         cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n           text: 'Si',\n           handler: () => {\n             const recordID: string\t\t= item._id;\n             this.authenticationService.deleteReg(recordID + '/' + this.userinfo[0].email + '/' + this.idempresa  + '/'\n             + 'na' , 'subcategorias').then((data) => {\n               this.pideregistros( this.currentSegment);\n               }, (err) => {\n                 this.authenticationService.presentAlert(err.error, this.msg, '');\n             });\n           }\n         }\n       ]\n     });\n     await alert.present();\n   }\n  async updateRecord(item: any) {\n    const modal = await this.modalController.create({\n      component: SubcategoriaCreatePage,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps:  { variables:  this.variables, record: item, idempresa: this.idempresa, \n        userinfo: this.userinfo, idllave0: this.idllave0, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n      this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n}\n   async  addRecord() {\n    const modal = await this.modalController.create({\n      component: SubcategoriaCreatePage,\n      swipeToClose: false,\n      backdropDismiss: false,\n     animated: true,\n      presentingElement: await this.modalController.getTop(),\n      componentProps:  { variables:  this.variables, record: null, userinfo: this.userinfo, idempresa: this.idempresa,\n        idllave0: this.idllave0, idllave: this.idllave, title: this.tituloxx}\n      , cssClass: 'modal-fullscreen'\n    });\n    modal.onWillDismiss().then((data) => {\n         if ( data.data !== 'close' ) {\n        this.pideregistros( this.currentSegment);\n      }\n    });\n    return await modal.present();\n   }\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n}\n"," <ion-header>\n <ion-toolbar color=\"primary\">\n   <ion-buttons slot=\"start\">\n    <ion-back-button defaultHref=\"AsociadoListPage\"></ion-back-button>\n   </ion-buttons>\n   <ion-title>\n     {{tituloxx}}\n   </ion-title>\n   <ion-buttons slot=\"end\">\n     <ion-button title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n       <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n     </ion-button>\n     <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n       <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n       <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n       <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n     </ion-button>\n   </ion-buttons>\n </ion-toolbar>\n <ion-toolbar class=\"filters-toolbar\">\n   <ion-row class=\"searchbar-row\" align-items-center>\n     <ion-col>\n       <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n     </ion-col>\n     <ion-col [hidden]=\"!showAgeFilter\" class=\"call-to-action-col\">\n       <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" title=\" {{ 'FILTROM' | translate }}\" (click)=\"showAgeFilter = !showAgeFilter\">\n         <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n       </ion-button>\n     </ion-col>\n   </ion-row>\n   <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n     <ion-row class=\"range-item-row\">\n       <ion-col size=\"12\">\n         <div class=\"range-header\">\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n           <span class=\"range-label\">Filter by age</span>\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n         </div>\n       </ion-col>\n       <ion-col size=\"12\">\n         <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n       </ion-col>\n     </ion-row>\n   </form>\n </ion-toolbar>\n</ion-header>\n<ion-content class=\"user-friends-content\">\n <ion-item-divider sticky>\n   <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n </ion-item-divider>\n <ion-segment (ionChange)=\"filterContacts($event)\" value=\"todos\">\n   <ion-segment-button value=\"todos\" checked>\n     {{ 'TODOSM' | translate }}\n   </ion-segment-button>\n   <ion-segment-button value=\"Activo\">\n     {{ 'ACTIVOSM' | translate }}\n    </ion-segment-button>\n   <ion-segment-button value=\"Inactivo\">\n     {{ 'INACTIVOSM' | translate }}\n   </ion-segment-button>\n </ion-segment>\n <ion-list *ngIf=\"efecto === 0\" >\n   <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n     <ion-label>\n       <skeleton-element></skeleton-element>\n       <skeleton-element></skeleton-element>\n       <skeleton-element width=\"67%\"></skeleton-element>\n     </ion-label>\n   </ion-item>\n </ion-list>\n <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n   <ion-item  *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n\n    \n    <ion-grid>\n      <ion-row>\n        <ion-col  (click)=\"updateRecord(item)\" size=\"12\">\n\n     <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n    <ion-label class=\"ion-text-wrap\">\n        <ion-note slot=\"end\">No. {{i+1}}</ion-note> <br>\n        <p><strong>Nombre:</strong> {{item.nombre}} <br>\n          <strong> Descripcion:</strong> {{item.descripcion}}\n          </p>\n       <ion-badge color=\"medium\">{{item.estado}}</ion-badge>\n     </ion-label>\n\n    </ion-col>\n  </ion-row>\n\n  <ion-row>\n   \n    <ion-col size=\"12\">\n\n      <ion-toolbar  color='transparent'>\n        <ion-buttons slot=\"secondary\">\n        \n          <ion-button  title=\"{{ 'ELIMINARM' | translate }}\"  (click)=\"deleteRecord(item)\" >\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      \n        <ion-buttons slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n               \n        </ion-col>\n      </ion-row>\n\n    </ion-grid>\n\n   </ion-item>\n </ion-list>\n <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n   <ion-row>\n     <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n       <ion-card  >\n         <ion-row class=\"user-stats-wrapper user-details-wrapper\">\n           <ion-col>\n             <span class=\"user-stat-value\">No.</span>\n             <span class=\"user-stat-name\">{{i+1}} </span>\n           </ion-col>\n           <ion-col>\n             <span class=\"user-stat-value\">{{item.estado}} </span>\n           </ion-col>\n         </ion-row>\n         <ion-item   [routerLink]=\"\">\n           <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n           <ion-label (click)=\"updateRecord(item)\"   class=\"ion-text-wrap\">\n            <p><strong>Nombre:</strong> {{item.nombre}} <br>\n              <strong> Descripcion:</strong> {{item.descripcion}}\n              </p>\n           </ion-label>\n         </ion-item>\n         <ion-card-content>\n         </ion-card-content>\n         <ion-row no-padding>\n           <ion-col  size=\"12\">\n            <ion-toolbar  color='transparent'>\n              <ion-buttons slot=\"secondary\">\n              \n                <ion-button  title=\"{{ 'ELIMINARM' | translate }}\"  (click)=\"deleteRecord(item)\" >\n                  <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n                </ion-button>\n              </ion-buttons>\n            \n              <ion-buttons slot=\"primary\">\n                <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n                  <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n                </ion-button>\n              </ion-buttons>\n            </ion-toolbar>\n           </ion-col>\n         </ion-row>\n       </ion-card>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n   {{ 'NODATOS' | translate }}  \n </h3>\n <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n   <ion-infinite-scroll-content\n     loadingSpinner=\"bubbles\"\n     loadingText=\"Espere un momento...\">\n   </ion-infinite-scroll-content>\n </ion-infinite-scroll>\n</ion-content>\n","<form class=\"create-user-form ion-page\" [formGroup]=\"Form\" >\n<ion-header>\n        <ion-toolbar color=\"primary\">\n                <ion-buttons slot=\"end\">\n                        <ion-button (click)=\"dismissModal()\">\n                           <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                        </ion-button>\n                </ion-buttons>\n                <ion-title>{{tituloxx}}</ion-title>\n        </ion-toolbar>\n</ion-header>\n<ion-content class=\"create-form-content\">\n    <section class=\"user-details-fields fields-section\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Nombre<ion-text color=\"danger\">*</ion-text></ion-label>\n              <ion-input #inputId inputMode=\"text\" clearInput=\"true\" formControlName=\"nombre\" required></ion-input>\n      </ion-item>\n<div class=\"error-container\">\n<div class=\"error-message\" *ngIf=\"Form.get('nombre').hasError('required') && (Form.get('nombre').dirty || Form.get('nombre').touched)\">\n  <ion-icon name=\"information-circle-outline\"></ion-icon>\n  <span>Ingrese un nombre valido</span>\n</div>\n </div>\n\n      <ion-item class=\"input-item\">\n              <ion-label  position=\"floating\">Descripcion</ion-label>\n              <ion-input inputMode=\"text\" clearInput=\"true\" formControlName=\"descripcion\" required></ion-input>\n      </ion-item>\n\n      \n      <ion-item class=\"input-item\">\n        <ion-label  position=\"floating\">Estado<ion-text color=\"danger\">*</ion-text></ion-label>\n        <ion-select placeholder=\"{{ 'SELECTVALORM' | translate }}\" formControlName=\"estado\">\n        <ion-select-option value=\"Activo\">Activo</ion-select-option>\n        <ion-select-option value=\"Inactivo\">Inactivo</ion-select-option>\n        </ion-select>\n</ion-item>\n<div class=\"error-container\">\n      <div class=\"error-message\" *ngIf=\"Form.get('estado').hasError('required') && (Form.get('estado').dirty || Form.get('estado').touched)\">\n        <ion-icon name=\"information-circle-outline\"></ion-icon>\n        <span>Ingrese un estado valido</span>\n      </div>\n       </div>\n\n\n       \n     </ion-list>\n  </section>\n</ion-content>\n<ion-footer>\n  <ion-row class=\"form-actions-wrapper\">\n    <ion-col>\n      <ion-button (click)=\"submitForm()\" color=\"primary\" expand=\"block\" fill=\"outline\" type=\"submit\" [disabled]=\"!Form.valid\">CREAR</ion-button>\n      </ion-col>\n  </ion-row>\n</ion-footer>\n</form>   \n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n"]}