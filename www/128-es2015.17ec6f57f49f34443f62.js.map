{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":["Img","hostRef","this","onLoad","ionImgDidLoad","emit","onError","ionError","ionImgWillLoad","addIO","undefined","src","window","removeIO","io","IntersectionObserver","data","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","class","decoding","alt","part","g","style"],"mappings":"6FAAA,2EAGA,MAEMA,EAAM,MACR,YAAYC,GACR,YAAiBC,KAAMD,GACvBC,KAAKC,OAAS,KACVD,KAAKE,cAAcC,QAEvBH,KAAKI,QAAU,KACXJ,KAAKK,SAASF,QAElBH,KAAKM,eAAiB,YAAYN,KAAM,iBAAkB,GAC1DA,KAAKE,cAAgB,YAAYF,KAAM,gBAAiB,GACxDA,KAAKK,SAAW,YAAYL,KAAM,WAAY,GAElD,aACIA,KAAKO,QAET,mBACIP,KAAKO,QAET,aACqBC,IAAbR,KAAKS,MAGL,yBAA0BC,QAC1BV,KAAKW,WACLX,KAAKY,GAAK,IAAIC,qBAAqBC,IAI3BA,EAAK,GAAGC,iBACRf,KAAKgB,OACLhB,KAAKW,cAGbX,KAAKY,GAAGK,QAAQjB,KAAKkB,KAIrBC,WAAW,IAAMnB,KAAKgB,OAAQ,MAGtC,OACIhB,KAAKoB,UAAYpB,KAAKI,QACtBJ,KAAKqB,QAAUrB,KAAKS,IACpBT,KAAKM,eAAeH,OAExB,WACQH,KAAKY,KACLZ,KAAKY,GAAGU,aACRtB,KAAKY,QAAKJ,GAGlB,SACI,OAAQ,YAAE,IAAM,CAAEe,MAAO,YAAWvB,OAAS,YAAE,MAAO,CAAEwB,SAAU,QAASf,IAAKT,KAAKqB,QAASI,IAAKzB,KAAKyB,IAAKxB,OAAQD,KAAKC,OAAQG,QAASJ,KAAKoB,UAAWM,KAAM,WAErK,SAAW,OAAO,SAAAC,EAAA,CAAW3B,MAC7B,sBAAwB,MAAO,CAC3B,IAAO,CAAC,iBAGhBF,EAAI8B,MA9DW","file":"x","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.onLoad = () => {\n            this.ionImgDidLoad.emit();\n        };\n        this.onError = () => {\n            this.ionError.emit();\n        };\n        this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n        this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n        this.ionError = createEvent(this, \"ionError\", 7);\n    }\n    srcChanged() {\n        this.addIO();\n    }\n    componentDidLoad() {\n        this.addIO();\n    }\n    addIO() {\n        if (this.src === undefined) {\n            return;\n        }\n        if ('IntersectionObserver' in window) {\n            this.removeIO();\n            this.io = new IntersectionObserver(data => {\n                // because there will only ever be one instance\n                // of the element we are observing\n                // we can just use data[0]\n                if (data[0].isIntersecting) {\n                    this.load();\n                    this.removeIO();\n                }\n            });\n            this.io.observe(this.el);\n        }\n        else {\n            // fall back to setTimeout for Safari and IE\n            setTimeout(() => this.load(), 200);\n        }\n    }\n    load() {\n        this.loadError = this.onError;\n        this.loadSrc = this.src;\n        this.ionImgWillLoad.emit();\n    }\n    removeIO() {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"src\": [\"srcChanged\"]\n    }; }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"]}