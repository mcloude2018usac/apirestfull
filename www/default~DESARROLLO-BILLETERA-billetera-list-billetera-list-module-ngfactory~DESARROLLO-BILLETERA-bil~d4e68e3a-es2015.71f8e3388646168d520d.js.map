{"version":3,"sources":["webpack:///src/app/DESARROLLO/modals/my-modalscanpay/my-modalscanpay.module.ts","webpack:///src/app/DESARROLLO/modals/my-modalcreditos/my-modalcredito.page.html","webpack:///src/app/DESARROLLO/modals/my-modalcreditos/my-modalcredito.page.ts","webpack:///src/app/DESARROLLO/modals/my-modalcreditos/my-modalcredito.module.ts","webpack:///src/app/DESARROLLO/modals/my-modalscanpay/my-modalscanpay.page.html","webpack:///src/app/DESARROLLO/modals/my-modalscanpay/my-modalscanpay.page.ts"],"names":["MyModalscanpayPageModule","MyModalcreditoPage","translateService","modalController","authenticationService","navParams","title","items2","msg","userinfo","items","defaultSelectedRadio","this","getcopiauser","passcode","finalPin","mypinseguro","codpersonal","message","pageStatus","int","newPincount","fingerPin","num","size","s","length","tituloxx","get","metodopago","subscribe","value","seguro","pideregistros","setTimeout","selectTwo","dismiss","data","item","tpagoid","radioGroup","op","itemsList","getReg","idempresa","_id","then","err","presentAlert","error","event","detail","MyModalcreditoPageModule","MyModalscanpayPage","alertController","loadingCtrl","toastCtrl","ngZone","plt","scanActive","scanResult","loading","zoom","monto","is","window","navigator","console","log","moneda","tipo","canvasElement","canvas","nativeElement","canvasContext","getContext","videoElement","video","startScan","create","position","buttons","text","handler","open","present","stream","mediaDevices","getUserMedia","facingMode","srcObject","setAttribute","play","requestAnimationFrame","scan","bind","readyState","HAVE_ENOUGH_DATA","height","videoHeight","width","videoWidth","drawImage","imageData","getImageData","code","inversionAttempts","decryptvalue","arr","split","tokenactual","verificapago","cobronormal","fileinput","click","files","file","img","Image","onload","cobronormalreves","src","URL","createObjectURL","datat","estado","cobronormalsinsaldo","result","Number","saldo","options","cobroservicio","nombre","direccion","bitacora","idafiliado","email","permiso","accion","createReg","StartTimer","timer","x","trama","operacion","dservicio","cservicio","nodispositivo","noprov","idsuscriptor","tipocompra","tokencompra","url","tpago","idempresa0","idsuscriptor2","id","mensage","alert","cssClass","blah","arr2","seguroacepta"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MyModalscanpayPage } from './my-modalscanpay.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    IonicModule\n   \n  ],\n  declarations: [MyModalscanpayPage],\n  entryComponents: [\n    MyModalscanpayPage\n  ],\n})\nexport class MyModalscanpayPageModule {}\n","\n\n<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n  \n          <ion-buttons slot=\"end\">\n                  <ion-button (click)=\"closeModal()\">\n                     <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                  </ion-button>\n          </ion-buttons>\n          <ion-title>{{tituloxx}}</ion-title>\n         \n  </ion-toolbar>   \n\n\n\n</ion-header>\n<!-- <ion-content padding class=\"center-vertical\">-->\n<ion-content  [fullscreen]=\"true\" class=\"ion-padding\" >\n\n\n\n\n\n  <ion-item-divider  color=\"primary\">\n    <ion-label>\n      Canal de pago\n    </ion-label>\n  </ion-item-divider>\n\n\n\n  <ion-list>\n    <ion-radio-group value=\"efectivo\">\n    \n      <div  >\n        <ion-radio-group allow-empty-selection=\"true\" name=\"radio-group\" (ionChange)=\"radioSelect($event)\" #radioGroup>\n        <ion-item >\n          <ion-label> <strong>Saldo actual</strong></ion-label>\n          <ion-radio  slot=\"start\" color=\"success\" value=\"efectivo\"></ion-radio>\n        </ion-item  >\n      \n        <ion-item  *ngFor=\"let item of items;\">  \n         \n          <ion-grid [class.cardON]=\"'Activo'\" >\n            <ion-row>\n              <ion-col class=\"state\">\n                <div class=\"msg\">\n                  <span [class.ON]=\"item.estado=='Activo'\" [class.OFF]=\"item.estado=='Inactivo'\"></span>  {{item.estado}}\n                </div>\n              </ion-col>\n              <ion-col class=\"bank\">\n                {{item.banco}}\n              </ion-col>\n             \n            </ion-row>\n            <ion-row>\n              <ion-col class=\"chip\" size=\"2\">\n                <ion-img src=\"assets/img/chip.png\"></ion-img> \n              </ion-col>\n              <ion-col class=\"number3\" size='10'>\n                {{item.nombre}}\n               </ion-col>\n            </ion-row>\n            <ion-row class=\"digits\">\n              <ion-col class=\"number\">\n               ****\n              </ion-col>\n              <ion-col class=\"number\">\n                ****\n              </ion-col>\n              <ion-col class=\"number\">\n                ****\n              </ion-col>\n              <ion-col class=\"number\">\n                {{padLeadingZeros(this.authenticationService.decryptvalue(item.n4))}}\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col class=\"date\">\n                Expira: {{item.mes}} / {{item.ano}}\n              </ion-col>\n              <ion-col class=\"bank\">\n                {{item.tipo}}\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n  \n          \n          \n          <ion-radio slot=\"start\" color=\"success\" [value]=\"item._id\"></ion-radio>\n        </ion-item>\n      </ion-radio-group>\n      </div>\n   \n\n     \n    </ion-radio-group>\n\n   \n  </ion-list>\n    \n\n  <ion-button  expand=\"block\" (click)=\"pagar()\" color=\"primary\" >\n  \n  PAGAR\n    </ion-button>\n\n</ion-content>","\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { ModalController , NavParams, IonRadioGroup } from '@ionic/angular';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n\n@Component({\n  selector: 'app-my-modalcredito',\n  templateUrl: './my-modalcredito.page.html',\n  styleUrls: ['./my-modalcredito.page.scss'],\n})\nexport class MyModalcreditoPage implements OnInit {\n\t@ViewChild('radioGroup') radioGroup: IonRadioGroup\n\tForm: FormGroup;\n  title = 'AGM project';\n  passcode: any;\n  pageStatus: any;\n  codeone: any;\n  codetwo: any;\n  codethree: any;\n  codefour: any;\n  int: any;\n  items2: any  = [] ;\n  newPincount: any;\n  message: any;\n  mypinseguro: any;\n  finalPin: any;\n  tpagoid:any;\n  fingerPin: any;\n  tituloxx: any;\n  msg = '';\n  seguro: any;\n  metodopago: any;\n  userinfo: any = [];\n\n  items: any  = [] ;\n  defaultSelectedRadio = \"efectivo\";\n\nitemsList: Array<any>;\n\n  public cards: any;\n\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n\n  constructor( public translateService: TranslateService    , private modalController: ModalController, private authenticationService: AuthenticationService,\n    private navParams: NavParams\n  ) {\n\tthis.userinfo = this.authenticationService.getcopiauser();\n    this.passcode = '';\n\t  this.finalPin = '';\n\t  this.mypinseguro = this.userinfo[0].codpersonal;\n  \tthis.message = true;\n  \tthis.pageStatus = 'Enter Pin'\n  \tthis.int = 0;\n  \tthis.newPincount = 0;\n\tthis.fingerPin = false;\n\n\n  }\n\n  padLeadingZeros(num, size) {\n    let s = num +'';\n    while (s.length < size) { s = \"0\" + s; }\n    return s;\n}\n ngOnInit() {\n\n\tthis.tituloxx = this.navParams.get('title');\nthis.metodopago = this.navParams.get('metodopago');\nthis.userinfo = this.authenticationService.getcopiauser();\n\nthis.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\nthis.translateService.get('MSGM').subscribe((value) => {   this.msg = value;  });\n//this.radioGroup.value = 'efectivo'\n\nthis.pideregistros('Activo');\n\n\n\n }\n\n ngAfterViewInit() {    setTimeout(() => {      this.selectTwo();  }, 400); }\n\npagar() {\n\tthis.modalController.dismiss({data: this.metodopago, item: this.tpagoid});\n}\n  async closeModal() {\n    this.modalController.dismiss({data: 'close'});\n  }\n\n\n  selectTwo() {\n    this.radioGroup.value = 'efectivo'\n  }\n  pideregistros(op) {\n    this.itemsList = [];\n    \n  \n    this.authenticationService.getReg('todos/' + op + '/' + this.userinfo[0].idempresa._id + '/' +  this.userinfo[0]._id, 'tarjetacreditos', 0).then((data) => {\n \n    this.items =  data;\n    this.itemsList = this.items;\n}, (err) => {\nthis.authenticationService.presentAlert(err.error , this.msg , '');\n});\n}\n\nradioSelect(event) {\n   this.tpagoid= event.detail.value\n \n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MyModalcreditoPage } from './my-modalcredito.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\nimport { environment } from '../../../../environments/environment';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule,  TranslateModule.forChild(),\n    IonicModule,\n  \n  ],\n  declarations: [MyModalcreditoPage],\n  entryComponents: [\n    MyModalcreditoPage\n  ]\n \n})\nexport class MyModalcreditoPageModule {}\n","\n\n<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n  \n          <ion-buttons slot=\"end\">\n            <ion-button title=\"Parar escaner\" (click)=\"stopScan()\" color=\"danger\" *ngIf=\"scanActive\">\n            \n              <ion-icon slot=\"start\" name=\"stop-circle-outline\"></ion-icon>\n            </ion-button>\n            <ion-button title=\"Reset\" (click)=\"reset()\" color=\"warning\" *ngIf=\"scanResult\">\n             \n              <ion-icon slot=\"start\" name=\"refresh-circle-outline\"></ion-icon>\n            </ion-button>\n\n\n            <ion-button title=\"Iniciar escaner\" (click)=\"startScan()\">\n           \n              <ion-icon slot=\"icon-only\" name=\"qr-code-outline\"></ion-icon>\n        </ion-button>\n            <ion-button title=\"leer imagen qr de galeria\" (click)=\"captureImage()\">\n                 <ion-icon slot=\"icon-only\" name=\"image-outline\"></ion-icon>\n           </ion-button>\n                  <ion-button (click)=\"closeModal()\">\n                     <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n                  </ion-button>\n          </ion-buttons>\n          <ion-title>{{tituloxx}}</ion-title>\n         \n  </ion-toolbar>   \n\n\n\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n  <input #fileinput type=\"file\" accept=\"image/*;capture=camera\" hidden (change)=\"handleFile($event.target.files)\">\n \n  <!-- Trigger the file input -->\n\n  <br>\n \n<h3 *ngIf=\" monto !== 0\" class=\"detail-title\">Monto a cobrar: <strong> {{monto | currency:moneda}}</strong></h3>\n\n\n \n  <!-- Shows our camera stream -->\n  <video #video [hidden]=\"!scanActive\" width=\"100%\"></video>\n \n  <!-- Used to render the camera stream images -->\n  <canvas #canvas hidden></canvas>\n \n  <!-- Stop our scanner preview if active -->\n\n</ion-content>","\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport {AlertController , ToastController, ModalController , LoadingController ,  NavParams , Platform } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthenticationService } from '../../services/Authentication.service';\n\n\nimport jsQR from 'jsqr';\n\n\n@Component({\n  selector: 'app-my-modalscanpay',\n  templateUrl: './my-modalscanpay.page.html',\n  styleUrls: ['./my-modalscanpay.page.scss'],\n})\nexport class  MyModalscanpayPage implements OnInit {\n  @ViewChild('video', { static: false }) video: ElementRef;\n  @ViewChild('canvas', { static: false }) canvas: ElementRef;\n  @ViewChild('fileinput', { static: false }) fileinput: ElementRef;\n  Form: FormGroup;\n  canvasElement: any;\n  videoElement: any;\n  canvasContext: any;\n  scanActive = false;\n  scanResult = null;\n  loading: HTMLIonLoadingElement = null;\n\n  tokenactual: any;\n  tipo: any;\n  title = 'AGM project';\n  latitude: number;\n  longitude: number;\n  zoom = 16 ;\n  address: string;\n  uubx: string;\n  userinfo: any = [];\n\n  tituloxx: any;\n  moneda: any;\n  monto: any = 0;\n  private timer;\n  @ViewChild('search', {static: false})\n  public searchElementRef: ElementRef;\n\n\n  constructor( public alertController: AlertController,  private modalController: ModalController,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController,  private authenticationService: AuthenticationService,\n\n    private ngZone: NgZone,\n    private navParams: NavParams,\n    private plt: Platform\n  ) {\n    const isInStandaloneMode = () =>\n    'standalone' in window.navigator && window.navigator['standalone'];\n  if (this.plt.is('ios') && isInStandaloneMode()) {\n    console.log('I am a an iOS PWA!');\n    // E.g. hide the scan functionality!\n  }\n\n   }\n\n  dismissModal() {     this.modalController.dismiss({data: 'close'});      }\n ngOnInit() {\n  this.userinfo = this.authenticationService.getcopiauser();\n  this.tituloxx = this.navParams.get('title');\n  this.moneda = this.navParams.get('moneda');\n  this.monto = (this.navParams.get('monto'));\n  this.tipo = this.navParams.get('tipo');\n\n\n  }\n\n  ngAfterViewInit() {\n    this.canvasElement = this.canvas.nativeElement;\n    this.canvasContext = this.canvasElement.getContext('2d');\n    this.videoElement = this.video.nativeElement;\n\n    this.startScan();\n  }\n\n  async showQrToast() {\n    const toast = await this.toastCtrl.create({\n      message: `Open ${this.scanResult}?`,\n      position: 'top',\n      buttons: [\n        {\n          text: 'Open',\n          handler: () => {\n            window.open(this.scanResult, '_system', 'location=yes');\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n  reset() {\n    this.scanResult = null;\n  }\n\n  stopScan() {\n    this.scanActive = false;\n  }\n\n\n  async startScan() {\n    // Not working on iOS standalone mode!\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: { facingMode: 'environment' }\n    });\n\n    this.videoElement.srcObject = stream;\n    // Required for Safari\n    this.videoElement.setAttribute('playsinline', true);\n\n    this.loading = await this.loadingCtrl.create({});\n    await this.loading.present();\n\n    this.videoElement.play();\n    requestAnimationFrame(this.scan.bind(this));\n  }\n\n  async scan() {\n    if (this.videoElement.readyState === this.videoElement.HAVE_ENOUGH_DATA) {\n      if (this.loading) {\n        await this.loading.dismiss();\n        this.loading = null;\n        this.scanActive = true;\n      }\n\n      this.canvasElement.height = this.videoElement.videoHeight;\n      this.canvasElement.width = this.videoElement.videoWidth;\n\n      this.canvasContext.drawImage(\n        this.videoElement,\n        0,\n        0,\n        this.canvasElement.width,\n        this.canvasElement.height\n      );\n      const imageData = this.canvasContext.getImageData(\n        0,\n        0,\n        this.canvasElement.width,\n        this.canvasElement.height\n      );\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: 'dontInvert'\n      });\n\n      if (code) {\n        this.scanActive = false;\n        this.scanResult = this.authenticationService.decryptvalue(code.data);\n\n        const arr = this.scanResult.split('°');\n\n        this.tokenactual = arr[6];\n        if (this.tipo === 'pagoqr' ) {\n          this.verificapago(arr);\n        } else {\n          this.cobronormal(arr);\n\n        }\n\n\n\n      } else {\n        if (this.scanActive) {\n          requestAnimationFrame(this.scan.bind(this));\n        }\n      }\n    } else {\n      requestAnimationFrame(this.scan.bind(this));\n    }\n  }\n\n  captureImage() {\n    this.fileinput.nativeElement.click();\n  }\n\n  handleFile(files: FileList) {\n    const file = files.item(0);\n\n    const img = new Image();\n    img.onload = () => {\n      this.canvasContext.drawImage(img, 0, 0, this.canvasElement.width, this.canvasElement.height);\n      const imageData = this.canvasContext.getImageData(\n        0,\n        0,\n        this.canvasElement.width,\n        this.canvasElement.height\n      );\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: 'dontInvert'\n      });\n\n      if (code) {\n        this.scanResult =this.authenticationService.decryptvalue( code.data);\n\n  const arr = this.scanResult.split('°');\n\n  this.tokenactual = arr[6];\n\n  if (  this.tipo === 'cobrapagoqr') {\n    this.cobronormalreves(arr);\n  } else {\n    if (this.tipo === 'pagoqr' ) {\n      this.verificapago(arr);\n    } else {\n      this.cobronormal(arr);\n    }\n  }\n\n\n\n\n\n      }\n    };\n    img.src = URL.createObjectURL(file);\n  }\n\n  verificapago(arr) {\n\n    this.authenticationService.getReg( this.tokenactual + '/3', 'compratokens', 0).then((data) => {\n      let datat: any = [];\n      datat = data;\n     if ( datat.length > 0) {\n\n\n      if (data[0].estado === 3) {\n\n        this.cobronormalsinsaldo(arr);\n\n      } else {\n        if (data[0].estado === 0) {\n\n          this.authenticationService.getReg( arr[1] + '/personadispid/' +\n          arr[0], 'personals', 0).then((result) => {\n             if (Number(result[0].saldo) >= Number(this.monto)) {\n\n               // COBRA Y AUTORIza\n               const   options: any\t     = {\n                 estado: 2,\n                 cobroservicio: this.userinfo[0].idempresa.nombre + '<br>' + ' en la ubicación:' + this.userinfo[0].idempresa.direccion +\n                  '<br> Quiere cobrar ' + this.moneda + ' ' + this.monto + '<br> ¿ Desea autorizar la transaccion?',\n                 bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                 email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n             };\n\n             if (options) {\n               this.authenticationService.createReg(this.tokenactual, options, 'compratokens').then((result) => {\n                 this.StartTimer(arr);\n\n             }, (err) => {\n               this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n             });\n\n             }\n\n\n\n\n             } else {\n              // FONDOS INSUFUCIENTES\n\n              const   options: any\t     = {\n                estado: 10,\n                cobroservicio: 'Fondos insuficientes',\n                bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n            };\n\n            if (options) {\n              this.authenticationService.createReg(this.tokenactual, options, 'compratokens').then((result) => {\n                this.authenticationService.presentAlert('Fondos insuficientes' , 'Precaución' , '');\n\n            }, (err) => {\n              this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n            });\n\n            }\n\n\n\n\n             }\n\n          }, (err) => {\n            this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n          });\n\n        } else {\n          this.StartTimer(arr);\n        }\n      }\n     } else {\n      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n     }\n\n\n\n    }, (err) => {\n      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n    });\n\n\n\n\n\n  }\n\n  StartTimer(arr) {\n    this.timer = setTimeout(x => {\n\n        this.authenticationService.getReg( this.tokenactual + '/3', 'compratokens', 0).then((data) => {\n          let datat: any = [];\n          datat = data;\n         if ( datat.length > 0) {\n\n\n          if (data[0].estado === 3) {\n\n            this.cobronormalsinsaldo(arr);\n\n          } else {\n            this.StartTimer(arr);\n          }\n         } else {\n          this.StartTimer(arr);\n         }\n\n\n\n        }, (err) => {\n          this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n        });\n\n\n\n\n       }, 3000);\n      }\n\n\n\n  async closeModal() {\n    this.modalController.dismiss({data: 'close'});\n  }\n\n\n\n  cobronormal(arr) {\n    this.authenticationService.getReg(arr[6] + '/2', 'compratokens', 0).then((data) => {\n      let datat: any = [];\n      datat = data;\n\n\n     if ( datat.length > 0) {\n\n      if (data[0].estado === 0) {\n        const tranat = this.authenticationService.decryptvalue(datat[0].trama) + '°' + datat[0]._id + '°' + datat[0].tipo;\n        if (tranat === this.scanResult) {\n\n\n        if (this.monto === arr[4]) {\n          const   options: any\t     = {\n            operacion: 'pagaservicio',\n            dservicio: 'Cobro por pago de servicio',\n            cservicio: 'Cobro por servicio',\n            nodispositivo: 'servicio',\n            noprov: '',\n            idempresa: this.userinfo[0].idempresa._id,\n           idsuscriptor : arr[1],\n           tipocompra: 'servicio',\n           tokencompra: datat[0]._id,\n          nombre : arr[2],\n           monto : this.monto,\n           url: '',\n           tpago: 'Efectivo',\n           estado : 'Facturado',\n           bitacora: {idempresa: this.userinfo[0].idempresa._id, idafiliado: '', email: this.userinfo[0].email,\n            permiso: 'Crea', accion: 'Compra de saldo'},\n            idempresa0: arr[1],\n           idsuscriptor2 : {id: this.userinfo[0]._id, nombre: this.userinfo[0].nombre} ,\n          };\n\n          if (options) {\n            this.authenticationService.createReg('', options, 'comprasaldos').then((result) => {\n\n              this.modalController.dismiss({data: 'Se ha realizado una venta a: ' + arr[2] +\n               '<br> Por un monto de ' + this.moneda + ' ' + this.monto});\n\n          }, (err) => {\n            this.authenticationService.presentAlert(err.error , 'Precaución', '');\n          });\n        }\n\n        } else {\n          this.authenticationService.presentAlert('El Monto no coincide con lo que el cliente programo.'\n          + '<br> El cliente quiere comprar: ' + this.moneda + ' ' + arr[4] + '<br> Se quiere acreditar: '\n          + this.moneda  + ' ' +  this.monto, 'Precaución', '');\n\n        }\n\n\n\n        } else {      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n        }\n\n\n\n      } else {\n        this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n\n      }\n     } else {\n      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n     }\n     });\n\n\n\n\n  }\n\n  async seguroacepta( mensage,arr,datat) {\n    const alert = await this.alertController.create({\n    \n      message: mensage,\n      buttons: [\n        {\n          text: 'No Aceptar',\n         cssClass: 'secondary',\n          handler: (blah) => {\n\n            const   options: any\t     = {\n              estado:33,\n              cobroservicio:  'Cliente no autorizo transaccion ',\n              bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n              email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n          };\n\n          if (options) {\n            this.authenticationService.createReg(this.tokenactual , options, 'compratokens').then((result) => {\n            \n              this.modalController.dismiss('ok');\n          }, (err) => {\n            this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n          });\n  \n          }\n\n          }\n        }, {\n           text: 'Aceptar',\n           handler: () => {\n             // actualizar toquen\n\n             var arr2= (arr[2]).split('<');\n       \n             const   options: any\t     = {\n               operacion: 'pagaservicio',\n               dservicio: 'Cobro por pago de servicio',\n               cservicio: 'Cobro por servicio',\n               nodispositivo: 'servicio',\n               noprov: '',\n               idempresa: arr[0],\n              idsuscriptor : this.userinfo[0]._id,\n              tipocompra: 'servicio',\n              tokencompra: datat[0]._id,\n             nombre : this.userinfo[0].nombre,\n              monto : arr[4],\n              url: '',\n              tpago: 'Efectivo',\n              estado : 'Facturado',\n              bitacora: {idempresa: arr[0], idafiliado: '', email: this.userinfo[0].email,\n               permiso: 'Crea', accion: 'Cobro por pago de servicio'},\n               idempresa0: this.userinfo[0]._id,\n              idsuscriptor2 : {id: arr[1], nombre: arr2[0]} ,\n             };\n   \n             if (options) {\n               this.authenticationService.createReg('', options, 'comprasaldos').then((result) => {\n   \n                \n\n             const   options: any\t     = {\n              estado:33,\n              cobroservicio:  'Cobro realizado con exito ',\n              bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n              email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n          };\n\n          if (options) {\n            this.authenticationService.createReg(this.tokenactual , options, 'compratokens').then((result) => {\n            \n              this.modalController.dismiss('ok');\n          }, (err) => {\n            this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n          });\n  \n          }\n               \n   \n             }, (err) => {\n              const   options: any\t     = {\n                estado:33,\n                cobroservicio:  'Cliente no autorizo transaccion ',\n                bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n            };\n  \n            if (options) {\n              this.authenticationService.createReg(this.tokenactual , options, 'compratokens').then((result) => {\n              \n                this.modalController.dismiss('ok');\n            }, (err) => {\n              this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n            });\n    \n            }\n               this.authenticationService.presentAlert(err.error , 'Precaución', '');\n             });\n           }\n\n\n\n\n\n           }\n         }\n       ]\n     });\n     await alert.present();\n   }\n\n\n\n  cobronormalreves(arr) {\n    this.authenticationService.getReg(arr[6] + '/2', 'compratokens', 0).then((data) => {\n      let datat: any = [];\n      datat = data;\n\n\n     if ( datat.length > 0) {\n\n      if (data[0].estado === 0) {\n        const tranat = this.authenticationService.decryptvalue(datat[0].trama) + '°' + datat[0].tipo + '°' + datat[0]._id + '°' + datat[0].tipo;\n        if (tranat === this.scanResult) {\n\n        //preguntar que estan intentando cobrar 200  \n\n        \n\n\n        this.seguroacepta(arr[2] +\n        '<br> Quiere cobrar ' + this.moneda + ' ' + arr[4] + '<br> ¿ Desea autorizar la transaccion?'\n        ,arr,datat);\n\n\n        \n\n     \n\n\n\n        } else {      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n        }\n\n\n\n      } else {\n        this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n\n      }\n     } else {\n      this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n     }\n     });\n\n\n\n\n  }\n\n  cobronormalsinsaldo(arr) {\n\n    this.authenticationService.getReg( arr[1] + '/personadispid/' +\n    arr[0], 'personals', 0).then((result) => {\n       if (Number(result[0].saldo) >= Number(this.monto)) {\n\n\n        this.authenticationService.getReg(arr[6] + '/2', 'compratokens', 0).then((data) => {\n          let datat: any = [];\n          datat = data;\n   \n\n\n              const   options: any\t     = {\n                operacion: 'pagaservicio',\n                dservicio: 'Cobro por pago de servicio',\n                cservicio: 'Cobro por servicio',\n                nodispositivo: 'servicio',\n                noprov: '',\n                idempresa: this.userinfo[0].idempresa._id,\n               idsuscriptor : arr[1],\n               tipocompra: 'servicio',\n               tokencompra: datat[0]._id,\n              nombre : arr[2],\n               monto : this.monto,\n               url: '',\n               tpago: 'Efectivo',\n               estado : 'Facturado',\n               bitacora: {idempresa: this.userinfo[0].idempresa._id, idafiliado: '', email: this.userinfo[0].email,\n                permiso: 'Crea', accion: 'Compra de saldo'},\n                idempresa0: arr[1],\n               idsuscriptor2 : {id: this.userinfo[0]._id, nombre: this.userinfo[0].nombre} ,\n              };\n\n              if (options) {\n                this.authenticationService.createReg('', options, 'comprasaldos').then((result) => {\n\n                  this.modalController.dismiss({data: 'Se ha realizado una venta a: ' + arr[2] +\n                   '<br> Por un monto de ' + this.moneda + ' ' + this.monto});\n\n              }, (err) => {\n                this.authenticationService.presentAlert(err.error , 'Precaución', '');\n              });\n            }\n\n\n\n\n\n        }, (err) => {\n          this.authenticationService.presentAlert('Transacción insegura', 'Precaución', '');\n        });\n\n\n\n\n\n       } else {\n\n\n        const   options: any\t     = {\n          estado: 100,\n          cobroservicio: 'Fondos insuficientes, transaccion anulada',\n          bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n          email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + this.tokenactual}\n      };\n\n      if (options) {\n        this.authenticationService.createReg(this.tokenactual, options, 'compratokens').then((result) => {\n          this.authenticationService.presentAlert('Fondos insuficientes, transaccion anulada', 'Precaución', '');\n\n      }, (err) => {\n        this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n      });\n\n      }\n\n\n\n\n       }\n\n      });\n\n\n\n\n  }\n}\n"]}