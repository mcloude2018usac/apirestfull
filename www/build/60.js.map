{"version":3,"sources":["../../src/pages/USAC/unidadacademica/tipounidad-list/tipounidad-list.module.ts","../../src/pages/USAC/unidadacademica/tipounidad-list/tipounidad-list.ts"],"names":[],"mappings":"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","file":"60.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TipounidadListPage } from './tipounidad-list';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {  PipesModule} from '../../../../pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    TipounidadListPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TipounidadListPage),\n    TranslateModule.forChild(),\n    PipesModule\n  ],\n})\nexport class TipounidadListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/USAC/unidadacademica/tipounidad-list/tipounidad-list.module.ts","import { Component } from '@angular/core';\nimport { ActionSheetController  ,AlertController, IonicPage,ModalController, NavController, NavParams, InfiniteScroll } from 'ionic-angular';\nimport { Auth ,NotificationProvider } from '../../../../providers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Storage } from '@ionic/storage';\nimport { InAppBrowser, InAppBrowserOptions } from '@ionic-native/in-app-browser';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-tipounidad-list',\n  templateUrl: 'tipounidad-list.html',\n})\nexport class TipounidadListPage {\n  public loading: boolean = true;\n  items: any=[];\n  items2: any=[];\n    generated = '';\n    public hasFilter: boolean = false;\n    idafiliado:any='na';\n    idempresa:any;\n  public gLimit: number = 50;\n  public PageSegmet: string = 'foods';\n  public gSearchQuery: string = '';\n  username: string = \"\";\n//private barcodeScanner:BarcodeScanner,\n  constructor( public iab: InAppBrowser,public actionSheetCtrl: ActionSheetController,public alertCtrl: AlertController,public storage: Storage, public msj: NotificationProvider, public translateService: TranslateService\n    ,public navCtrl: NavController,\n    private _MODAL  \t\t: ModalController, public navParams: NavParams,\n     public regService: Auth\n\n    ) {\n      this.translateService.get('APPX').subscribe((value) => {\n        this.idempresa=value\n\n    })\n\n  }\n\n\n\n  public clearSearchg(): void {\n    this.gSearchQuery = '';\n  }\n  showFilter()\n  {\n\n\n\n\n  }\n\n  showFilter3()\n  {\n\n    let prompt = this.alertCtrl.create({\n      title:' Eliminar asignación',\n      message: 'Ingrese NOV/ carné',\n      inputs: [\n        {\n          name: 'NOV',\n          placeholder: 'Ingrese NOV/ Carnét'\n\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar'\n        },\n        {\n          text: 'Eliminar',\n          handler: todo => {\n\n                if(todo){\n\n                  this.regService.getReglibreSext2(todo.NOV + '/resultado','estudiantepcb').then((data) => {\n\n\n                  let alert = this.alertCtrl.create({ title:'La asignación a eliminar es de '+ data[0].NOMBRES + ', Esta seguro de realizar esta operación?',\n                  buttons: [\n                    {text: 'Si',\n                      handler: () => {\n\n                        this.regService.getReg2b('1/2/'+todo.NOV,'asignapcbs').then((data) => {\n                        //  this.items=data;\n\n                          let recordID \t\t: string\t\t=data[0]._id;\n                          this.regService.deleteReg(recordID+'/'+this.username+ '/' + this.idempresa + '/' + this.idafiliado,'asignapcbs').then((data) => {\n                            this.msj.showError3('Eliminación','Registro eliminado con exito');\n                            }, (err) => {\n                              this.msj.showError3('Error',err.error);\n                          });\n\n                    }, (err) => {\n                      this.msj.showError3('Error',err.error);\n                    });\n\n\n\n\n\n                      }\n                    },\n                    {\n                      text: 'No',  handler: () => { }\n                    }\n                  ]\n                });\n                alert.present();\n\n\n              });\n\n\n                }\n\n\n          }\n        }\n      ]\n    });\n\n    prompt.present();\n\n  }\n\n\n  showFilter22()\n  {\n\n\n    let prompt = this.alertCtrl.create({\n      title:' Actualizar nombre de NOV/ Carnét ',\n      message: '',\n      inputs: [\n        {\n          name: 'NOV',\n          placeholder: 'Ingrese NOV/ Carnét'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar'\n        },\n        {\n          text: 'Buscar Resultado',\n          handler: todo => {\n                if(todo){\n                  this.regService.getReglibreSext2(todo.NOV + '/resultado','estudiantepcb').then((data) => {\n\n\n\n                                let prompt = this.alertCtrl.create({\n                                  title:'Actualizar nombre de resultado ',\n                                  message: '',\n                                  inputs: [\n                                    {\n                                      name: 'NOMBRE',\n                                      placeholder: 'Ingrese nombre a actualizar'\n                                      ,value: data[0].NOMBRES\n                                    }\n                                  ],\n                                  buttons: [\n                                    {\n                                      text: 'Cancelar'\n                                    },\n                                    {\n                                      text: 'Actualizar',\n                                      handler: todo2 => {\n\n                                        let   options       : any\t     = {\n\n                                        nombre : todo2.NOMBRE,\n\n                                        };\n\n\n\n                                        this.regService.createReg(todo.NOV,options,'estudiantepcb').then((result) => {\n\n                                          this.msj.showError3('Mensaje','Registro actualizado con exito');\n                                          }, (err) => {\n\n                                            this.msj.showError3('Mensaje',err.error);\n                                          });\n\n\n                                      }\n                                    }\n                                  ]\n                                });\n\n                                prompt.present();\n\n\n\n\n                  }, (err) => {   this.msj.showError3('Resultado','Resultado no encontrado.');         });\n                }\n          }\n        }\n      ]\n    });\n\n    prompt.present();\n\n  }\n\n  showFilter222()\n  {\n\n\n    let prompt = this.alertCtrl.create({\n      title:' Actualizar de  NOV ',\n      message: '',\n      inputs: [\n        {\n          name: 'NOV',\n          placeholder: 'Ingrese NOV/ Carnét'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar'\n        },\n        {\n          text: 'Buscar Resultado',\n          handler: todo => {\n                if(todo){\n                  this.regService.getReglibreSext2(todo.NOV ,'estudiantevt').then((data) => {\n\n\n\n                                let prompt = this.alertCtrl.create({\n                                  title:'Actualizar nombre de resultado ',\n                                  message: '',\n                                  inputs: [\n                                    {\n                                      name: 'NOMBRE',\n                                      placeholder: 'Ingrese nombre a actualizar'\n                                      ,value: data[0].nombre\n                                    }\n                                  ],\n                                  buttons: [\n                                    {\n                                      text: 'Cancelar'\n                                    },\n                                    {\n                                      text: 'Actualizar',\n                                      handler: todo2 => {\n\n                                        let   options       : any\t     = {\n\n                                        nombre : todo2.NOMBRE,\n                                        operacion:'act'\n\n                                        };\n\n\n\n                                        this.regService.createReg(todo.NOV,options,'estudiantevt').then((result) => {\n\n                                          this.msj.showError3('Mensaje','Registro actualizado con exito');\n                                          }, (err) => {\n\n                                            this.msj.showError3('Mensaje',err.error);\n                                          });\n\n\n                                      }\n                                    }\n                                  ]\n                                });\n\n                                prompt.present();\n\n\n\n\n                  }, (err) => {   this.msj.showError3('Resultado','Resultado no encontrado.');         });\n                }\n          }\n        }\n      ]\n    });\n\n    prompt.present();\n\n  }\n\n\n  pideregistros() {\n      let self = this;\n      self.loading = true;\n      this.regService.getReg('todos','tipounidads').then((data) => {\n        this.items=data;\n        this.items2=data;\n        self.loading = false;\n  }, (err) => {\n    this.msj.showError3('Error',err.error);\n   // this.translateService.get('NO_OPERACION').subscribe((value) => { this.msj.showError3('Error',value);  })\n  });\n  }\n  ngOnInit() {\n    this.storage.get('username').then((value) => {\n      this.username = value;\n  });\n  }\n  ionViewDidLoad() {\n    this.pideregistros();\n  }\n\n  public loadMore(ev: InfiniteScroll) {\n    this.gLimit += 50;\n    setTimeout(() => ev.complete(), 1000);\n  }\n\n\n  deleteRecord(item : any, no) : void\n  {\n\n    let alert = this.alertCtrl.create({ title: 'Esta seguro de realizar esta operación?',\n    buttons: [\n      {text: 'Si',\n        handler: () => {\n\n          let recordID \t\t: string\t\t= item._id;\n          this.regService.deleteReg(recordID+'/'+this.username+ '/' + this.idempresa + '/' + this.idafiliado,'tipounidads').then((data) => {\n              this.items.splice(no, 1);\n              this.items = this.items.concat([]);\n              this.items2=this.items\n            }, (err) => {\n              this.msj.showError3('Error',err.error);\n          });\n\n        }\n      },\n      {\n        text: 'No',  handler: () => { }\n      }\n    ]\n  });\n  alert.present();\n\n\n\n\n  }\n  value:any;\n\n  updateRecord(item : any,no) : void\n   {\n    let addModal = this._MODAL .create('TipounidadCreatePage', { record : item },{showBackdrop: true,enableBackdropDismiss: false});\n    addModal.onDidDismiss(data => {\n      if (data) {\n        this.items.splice(no, 1);\n        this.items = this.items.concat([data]);\n        this.items2=this.items\n      }\n    })\n    addModal.present();\n    //  this.navCtrl.push('EmpresaCreatePage', { record : item });\n   }\n\n\n   OnExport2 = function (item)\n   {\n\n\n    let prompt = this.alertCtrl.create({\n      title:' Ingrese periodo (2019-01)',\n      inputs: [\n        {\n          name: 'Periodo'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar'\n        },\n        {\n          text: 'Buscar',\n          handler: todo => {\n\n                if(todo){\n                  if(todo!='')\n                  {\n                    this.regService.abrelinkinterno('datosfijos/excel-asignaU/'+todo.Periodo+ '/' + item.nombre );\n                  }\n\n\n                }\n\n\n          }\n        }\n      ]\n    });\n\n    prompt.present();\n\n\n   }\n  OnExport = function ()\n  {\n\n\n    let prompt = this.alertCtrl.create({\n      title:' Ingrese periodo (2019-01)',\n      inputs: [\n        {\n          name: 'Periodo'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar'\n        },\n        {\n          text: 'Buscar',\n          handler: todo => {\n\n                if(todo){\n                  if(todo!='')\n                  {\n                    this.regService.abrelinkinterno('datosfijos/excel-asigna/'+todo.Periodo);\n                  }\n\n\n                }\n\n\n          }\n        }\n      ]\n    });\n\n    prompt.present();\n\n\n\n\n  }\n\n  OnExport4= function ()\n  {\n    let options: InAppBrowserOptions = {\n      toolbarcolor: \"#488aff\",\n      hideurlbar: \"yes\",\n      closebuttoncolor: \"#fff\",\n      navigationbuttoncolor: \"#fff\"\n    };\nlet url='http://52.90.195.238:3000/pivot.html?v1=/api/pivotem1/db1/asignasun/1/2/3&v2=classic'\n  let target = \"_blank\";\n this.iab.create(url,target,options);\n//let url='http://52.90.195.238:3000/pivot.html?v1=/api/pivotem1/db1/asignasun/1/2/3&v2=classic'\n//this.navCtrl.push('FrameViewPage',{titulo:'Reporte SUN asignación',link:url });\n\n}\n\n  OnExport3= function ()\n  {\n\n\n    let prompt = this.alertCtrl.create({\n      title:' Ingrese periodo (2019-01)',\n      inputs: [\n        {\n          name: 'Periodo'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar'\n        },\n        {\n          text: 'Buscar',\n          handler: todo => {\n\n                if(todo){\n                  if(todo!='')\n                  {\n                    this.regService.abrelinkinterno('datosfijos/excel-asigna3/'+todo.Periodo);\n                  }\n\n\n                }\n\n\n          }\n        }\n      ]\n    });\n\n    prompt.present();\n\n\n\n\n  }\n   addRecord() : void\n   {\n    let addModal = this._MODAL .create('TipounidadCreatePage',{ record : null },{showBackdrop: true,enableBackdropDismiss: false});\n    addModal.onDidDismiss(data => {\n      if (data) {\n        this.items = this.items.concat([data]);\n        this.items2=this.items\n      }\n    })\n    addModal.present();\n\n      //this.navCtrl.push('EmpresaCreatePage');\n   }\n\n   conferenciaRecord(item : any) : void\n   {\n\n      this.navCtrl.push('UnidadacademicaListPage', { record : item });\n   }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/USAC/unidadacademica/tipounidad-list/tipounidad-list.ts"],"sourceRoot":""}