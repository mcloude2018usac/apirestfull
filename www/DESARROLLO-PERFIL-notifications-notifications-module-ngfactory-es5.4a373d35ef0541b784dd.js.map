{"version":3,"sources":["webpack:///src/app/DESARROLLO/PERFIL/notifications/notifications.module.ts","webpack:///src/app/DESARROLLO/PERFIL/notifications/notifications.page.ts","webpack:///src/app/DESARROLLO/PERFIL/notifications/notifications.page.html"],"names":["NotificationsPageModule","router","alertController","translateService","modalController","navCtrl","route","authenticationService","showAgeFilter","showmenu","items","variables","userinfo","viewType","tituloxx","efecto","simenu","seguro","msg","searchSubject","ReplaySubject","this","apifoto","getapifoto","user","navigate","state","nombre","estado","foto","userid","_id","item","record","toUserId","email","toUserName","avatar","grupal","record2","alert","create","header","message","inputs","name","type","placeholder","buttons","text","cssClass","handler","blah","todo","presentAlert","getReg","idempresa","then","data","datat","options","idsuscriptor","id","idsuscriptor2","nota","bitacora","idafiliado","permiso","accion","createReg","result","pideregistros","err","error","present","document","querySelector","focus","deleteReg","itemsList","getcopiauser","logo1","dalogo1","get","subscribe","value"],"mappings":"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","file":"x","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ComponentsModule } from '../../../components/components.module';\n\nimport { NotificationsPage } from './notifications.page';\n\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule, TranslateModule.forChild(),\n    ComponentsModule,\n    RouterModule.forChild([{ path: '', component: NotificationsPage }]),\n  ],\n  declarations: [ NotificationsPage ]\n  \n})\nexport class NotificationsPageModule {}\n","import { ActivatedRoute } from '@angular/router';\n\n\nimport { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController  , NavController,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router , NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: [\n    './styles/notifications.page.scss',\n    './styles/notifications.shell.scss'\n  ]\n})\nexport class NotificationsPage implements OnInit {\n  @ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false;\nshowmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidempresa: any;\nviewType = 'grid';\ntituloxx = '';\nefecto = 0;\nitemsList: Array<any>;\nsimenu = false;\nlogo1: any;\nseguro = '';\nmsg = '';\napifoto: String ;\n\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\n  notifications: any;\n\n  constructor(   private router: Router,\n    public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   , private navCtrl: NavController, private route: ActivatedRoute  , private authenticationService: AuthenticationService) {\n    this.apifoto = this.authenticationService.getapifoto();\n   }\n   private showConversationPage(user) {\n\n    const navigationExtras: NavigationExtras = {\n      state: {\n        variables: '',\n        user: null,\n        nombre: user.nombre,\n        estado: user.estado,\n        foto:  user.foto,\n        userid: user._id,\n        item: user,\n\n    record : {  toUserId: this.userinfo[0]._id,  email: this.userinfo[0].email,\n      toUserName: this.userinfo[0].nombre, avatar: this.apifoto + this.userinfo[0].foto} , grupal: 'no',\n\n\n      record2: {  toUserId: user._id, email: user.email,\n    toUserName: user.nombre, avatar: this.apifoto +  user.foto}\n\n\n      }\n    };\n\n\n\n\n\n    this.router.navigate(['conversation'], navigationExtras);\n\n\n  }\n\n  async  addRecord() {\n\n    const alert = await this.alertController.create({\n      header: 'Ingrese correo electr贸nico con el que se registro el usuario',\n      message: '',\n      inputs: [\n        {\n          name: 'nombre',\n          type: 'text',\n\n          placeholder: 'Ingrese correo electr贸nico'\n        }],\n      buttons: [\n        {\n          text: 'Cancelar',\n         cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n           text: 'Aceptar',\n           handler: (todo) => {\n\n            if (todo.nombre === this.userinfo[0].email) {\n              this.authenticationService.presentAlert('Usuario no valido' , 'Precauci贸n' , '');\n            } else {\n\nif (todo.nombre !== '') {\n\n            this.authenticationService.getReg(todo.nombre + '/emailsolonuevo/' + this.userinfo[0].idempresa._id, 'personals', 0).then((data) => {\n              let datat: any = [];\n              datat = data;\n              const   options: any\t     = {\n                idsuscriptor : {id: datat[0]._id, nombre: datat[0].nombre} ,\n                nombre: datat[0].nombre,\n                idempresa: datat[0].idempresa,\n                estado : 'Activo',\n                idsuscriptor2 : {id:  this.userinfo[0]._id, nombre:  this.userinfo[0].nombre, email:  datat[0].email} ,\n                nota : '',\n                bitacora: {idempresa: this.userinfo[0].idempresa._id, idafiliado: '', email: this.userinfo[0].email, permiso: 'Crea', accion:  + ' Agrega amigo chat '}\n               };\n\n               if (options) {\n                this.authenticationService.createReg('', options, 'userchats').then((result) => {\n                  this.pideregistros();\n\n\n              }, (err) => {\n                this.authenticationService.presentAlert(err.error , 'Precauci贸n' , '');\n              });\n              }\n\n\n            });\n\n           }\n\n          }\n\n           }\n         }\n       ]\n     });\n     await alert.present().then(() => {\n      const firstInput: any = document.querySelector('ion-alert input');\n      firstInput.focus();\n      return;\n    });\n\n\n  }\n\n\n  async deleteRecord(item: any) {\n    const alert = await this.alertController.create({\n      header: this.seguro,\n      message: '',\n      buttons: [\n        {\n          text: 'No',\n         cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n           text: 'Si',\n           handler: () => {\n             const recordID: string\t\t= item._id;\n             this.authenticationService.deleteReg(recordID + '/' + this.userinfo[0].email + '/' + this.userinfo[0].idempresa._id + '/'\n             + 'na' , 'userchats').then((data) => {\n               this.pideregistros();\n               }, (err) => {\n                 this.authenticationService.presentAlert(err.error, this.msg, '');\n             });\n           }\n         }\n       ]\n     });\n     await alert.present();\n   }\n\n   pideregistros() {\n    this.itemsList = [];\n    this.efecto = 0 ;\n\n\n    this.authenticationService.getReg( this.userinfo[0].email + '/mios/' + this.userinfo[0].idempresa._id, 'userchats', 0).then((data) => {\n    this.efecto = 1;\n    this.items =  data;\n    this.itemsList = this.items;\n}, (err) => {\nthis.authenticationService.presentAlert(err.error , this.msg , '');\n});\n}\n\n\n  ngOnInit(): void {\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.logo1 = this.authenticationService.dalogo1(this.userinfo);\n\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value;  });\n    this.pideregistros();\n\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Notificaciones\n    </ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button title=\" {{ 'AGREGARM' | translate }}\" (click)=\"addRecord()\">\n        <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n      </ion-button>\n      <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros()\">\n        <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n      </ion-button>\n      <img alt=\"logo\" id=\"header_logo\" height=\"33\"  [src]=\"apifoto + logo1\">\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"notifications-content\">\n  <ng-container  *ngIf=\"(itemsList?.length > 0)\">\n    <ion-item-group>\n      <ion-item-divider sticky>\n        <ion-label>Usuarios Registrados</ion-label>\n      </ion-item-divider>\n      <ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let item of itemsList ;let i = index;\" [routerLink]=\"\" (click)=\"showConversationPage(item.idsuscriptor.id)\">\n        <ion-row class=\"notification-item-wrapper\">\n          <ion-col size=\"2\">\n            <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n              <app-image-shell class=\"notification-image\" [src]=\"apifoto + item.idsuscriptor.id.foto\" [alt]=\"'user image'\"></app-image-shell>\n            </app-aspect-ratio>\n          </ion-col>\n          <ion-col class=\"details-wrapper\">\n            <h2 class=\"details-name\">{{ item.idsuscriptor.id.nombre }}</h2>\n            <p class=\"details-description\">{{ item.idsuscriptor.id.email }}</p>\n          </ion-col>\n          <ion-col size=\"2\" class=\"date-wrapper\">\n            <h3 class=\"notification-date\">{{ item.idsuscriptor.id.role}}</h3>\n          </ion-col>\n        </ion-row>\n      </ion-item>\n    </ion-item-group>\n  \n  </ng-container>\n</ion-content>\n"]}