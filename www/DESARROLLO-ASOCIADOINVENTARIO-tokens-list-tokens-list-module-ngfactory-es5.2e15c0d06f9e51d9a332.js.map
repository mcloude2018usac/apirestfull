{"version":3,"sources":["webpack:///src/app/components/skeleton-element/skeleton-element.component.ts","webpack:///src/app/components/skeleton-element/skeleton-element.component.html","webpack:///src/app/DESARROLLO/ASOCIADOINVENTARIO/tokens-list/tokens-list.module.ts","webpack:///src/app/DESARROLLO/ASOCIADOINVENTARIO/tokens-list/tokens-list.page.ts","webpack:///src/app/DESARROLLO/ASOCIADOINVENTARIO/tokens-list/tokens-list.page.html"],"names":["SkeletonElementComponent","width","height","borderRadius","rounded","noAnimated","inline","styles","this","tokensListPageModule","routerOutlet","router","authenticationService","alertController","translateService","modalController","showAgeFilter","showmenu","items","variables","userinfo","viewType","tituloxx","efecto","seguro","msg","currentSegment","searchSubject","ReplaySubject","apifoto","getapifoto","getCurrentNavigation","extras","state","idllave","getcopiauser","titulo","moneda","idempresa","searchQuery","get","subscribe","value","rangeForm","dual","lower","upper","pideregistros","event","selectedCategory","detail","op","itemsList","getReg","email","_id","then","data","err","presentAlert","error","next","controls","query","filterList","list","filter","item","nombre","toLowerCase","includes","alert","opcion","push","name","type","label","checked","create","cssClass","header","inputs","buttons","text","role","handler","todo","console","log","tranat","decryptvalue","trama","tipo","arr","split","options","operacion","idsuscriptor","id","tokencompra","descripcion","tipocompra","monto","monto2","url","tpago","estado","bitacora","idafiliado","permiso","accion","idempresa0","idsuscriptor2","createReg","result","cobroservicio","present","message","blah","deleteReg","setTimeout","target","complete","length","disabled"],"mappings":"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","file":"x","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'skeleton-element',\n  templateUrl: './skeleton-element.component.html',\n  styleUrls: ['./skeleton-element.component.scss'],\n})\nexport class SkeletonElementComponent implements OnInit {\n  @Input() width: string = '100%';\n  @Input() height: string = '16px';\n  @Input() borderRadius: string = '0';\n  @Input() rounded: boolean = false;\n  @Input() noAnimated: boolean = false;\n  @Input() inline: boolean = false;\n\n  styles: any = {};\n\n  ngOnInit() {\n    this.styles = {\n      width: this.width,\n      height: this.height,\n      borderRadius: this.borderRadius,\n    }\n\n    if (this.rounded) {\n      this.styles.borderRadius = '999em';\n    }\n  }\n}\n","<div\n  [ngClass]=\"{\n    'no-animated': noAnimated,\n    'inline': inline\n  }\"\n  [ngStyle]=\"styles\"\n></div>\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule} from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\n\nimport { tokensListPage } from './tokens-list.page';\n@NgModule({\n  declarations: [\n    tokensListPage\n  ],\n  imports: [\n    CommonModule,IonicModule, ComponentsModule, FormsModule,  ReactiveFormsModule, NgxIonicImageViewerModule,\n    RouterModule.forChild([{ path: '', component: tokensListPage }]), TranslateModule.forChild(),\n  ]\n \n})\nexport class tokensListPageModule {}\n","import { Component , OnInit , ViewChild } from '@angular/core';\nimport {AlertController, ModalController ,  IonRouterOutlet} from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport {  Router, NavigationExtras } from '@angular/router';\nimport { AuthenticationService } from '../../services/Authentication.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ReplaySubject} from 'rxjs';\nimport { IonInfiniteScroll } from '@ionic/angular';\n\n@Component({\nselector: 'page-tokens-list',\ntemplateUrl: 'tokens-list.page.html',\nstyleUrls: ['./tokens-list.page.scss'],\n})\nexport class tokensListPage implements OnInit {\n@ViewChild(IonInfiniteScroll, { static : false }) infiniteScroll: IonInfiniteScroll;\nrangeForm: FormGroup;\nsearchQuery: string;\nshowAgeFilter = false; showmenu = false;\nitems: any  = [] ;\nvariables: any = [];\nuserinfo: any = [];\nidllave: any;\nviewType = 'grid';\ntituloxx = '';\nmoneda: any;\nefecto = 0;\nseguro = '';\nmsg = '';\napifoto: String;\nitemsList: Array<any>;\npublic currentSegment = 'Todos';\nsearchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\nconstructor(  private routerOutlet: IonRouterOutlet , private router: Router, private authenticationService: AuthenticationService,\n   public alertController: AlertController,     public translateService: TranslateService    ,    private modalController: ModalController\n   ) {  this.apifoto = this.authenticationService.getapifoto();\n }\nchangeToList() { this.viewType = 'list'; }\nchangeToGrid() {   this.viewType = 'grid';  }\nngOnInit() {\n    this.variables = this.router.getCurrentNavigation().extras.state.variables;\n    this.idllave = this.router.getCurrentNavigation().extras.state.idllave;\n    this.userinfo = this.authenticationService.getcopiauser();\n    this.tituloxx = this.router.getCurrentNavigation().extras.state.titulo ;\n    this.moneda = this.userinfo[0].idempresa.moneda;\n    this.searchQuery = '';\n    this.translateService.get('SEGUROM').subscribe((value) => {   this.seguro = value;  });\n    this.translateService.get('MSGM').subscribe((value) => {   this.msg = value;  });\n    this.rangeForm = new FormGroup({    dual: new FormControl({lower: 1, upper: 100})   });\n    this.currentSegment = '0';\n    this.pideregistros( this.currentSegment);\n  }\n  filterContacts(event: any) {\n    const selectedCategory = event.detail.value;\n    this.currentSegment = selectedCategory;\n\n    this.pideregistros(selectedCategory);\n  }\n  pideregistros0() {\n   this.pideregistros(this.currentSegment);\n  }\n  pideregistros(op) {\n       this.itemsList = [];\n       this.efecto = 0 ;\n       if (op === '0' ) {\n        this.authenticationService.getReg(this.userinfo[0].email + '/' + op + '/' + this.userinfo[0].idempresa._id + '/trasferencia' , 'compratokens', 0).then((data) => {\n          this.efecto = 1;\n          this.items =  data;\n          this.itemsList = this.items;\n    }, (err) => {\n      this.authenticationService.presentAlert(err.error , this.msg , '');\n    });\n\n       } else {\n       if ( op === '1') {\n        this.authenticationService.getReg(this.userinfo[0].email + '/' + '1' + '/' + this.userinfo[0].idempresa._id + '/trasferencia' , 'compratokens', 0).then((data) => {\n          this.efecto = 1;\n          this.items =  data;\n          this.itemsList = this.items;\n    }, (err) => {\n      this.authenticationService.presentAlert(err.error , this.msg , '');\n    });\n\n       } else {\n        this.authenticationService.getReg(this.userinfo[0].email + '/' + op + '/' + this.userinfo[0].idempresa._id + '/trasferencia' , 'compratokens', 0).then((data) => {\n          this.efecto = 1;\n          this.items =  data;\n          this.itemsList = this.items;\n    }, (err) => {\n      this.authenticationService.presentAlert(err.error , this.msg , '');\n    });\n       }}\n\n  }\n  searchList() {\n    this.searchSubject.next({\n     lower: this.rangeForm.controls.dual.value.lower,\n     upper: this.rangeForm.controls.dual.value.upper,\n     query: this.searchQuery\n   });\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n    this.itemsList = this.filterList(this.items, query);\n  }\n filterList(list, query): Array<any> {\n   return list.filter(item => item.nombre.toLowerCase().includes(query.toLowerCase()));\n  }\n  async otrasop(item: any) {\nconst opcion: any = [];\n\n\n     if (this.currentSegment === '0') {\n      opcion.push(\n        {\n          name: '0',\n          type: 'radio',\n          label: 'Cobrar Transferencia',\n          checked: true,\n          value: 'Cobrar Transferencia' ,\n        }\n      );\n     }\n\nif (this.currentSegment === '20') {\n\n      opcion.push(\n        {\n          name: '0',\n          type: 'radio',\n          label: 'Anular Transferencia',\n          checked: true,\n          value: 'Anular Transferencia' ,\n        }\n      );\n\n     }\n\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n       header: 'Seleccione Opción',\n       inputs: opcion,\n       buttons: [\n         {\n           text: 'Cancel',\n           role: 'cancel',\n           cssClass: 'secondary',\n           handler: (todo) => {\n             console.log(todo);\n           }\n         }, {\n           text: 'Ok',\n           handler: (todo) => {\n          \n\n            let datat: any = [];\n            datat = item;\n            const tranat = this.authenticationService.decryptvalue(item.trama ) + '°' + item.tipo + '°' + item._id + '°' + item.tipo;\n\n                  if (todo === 'Cobrar Transferencia') {\n\n                      const arr = tranat.split('°');\n                          const   options: any\t     = {\n                            operacion: 'transferencia',\n                            idempresa: item.idempresa,\n                           idsuscriptor : {id: arr[1], nombre: arr[2]} ,\n                           tokencompra: item._id,\n                           descripcion: 'Transferencia (-)',\n                           tipocompra: 'Transferencia',\n                          nombre : arr[2],\n                           monto : arr[4],\n                           monto2 : arr[4],\n                           url: '',\n                           tpago: 'Efectivo',\n                           estado : 'Facturado',\n                           bitacora: {idempresa: this.userinfo[0].idempresa._id, idafiliado: '', email: this.userinfo[0].email,\n                            permiso: 'Crea', accion: 'transferencia'},\n                            idempresa0: this.userinfo[0].idempresa._id,\n                           idsuscriptor2 : {id: this.userinfo[0]._id, nombre: this.userinfo[0].nombre} ,\n                          };\n\n                          if (options) {\n                            this.authenticationService.createReg('', options, 'comprasaldos').then((result) => {\n\n\n                              const   options: any\t     = {\n                                estado: 20,\n                                cobroservicio: ' ' + arr[2] +\n                                ', Se ha acreditado  un monto de ' + this.moneda + ' ' + arr[4],\n                                bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                                email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + arr[7]}\n                            };\n\n                            if (options) {\n                              this.authenticationService.createReg(arr[7], options, 'compratokens').then((result) => {\n\n                                this.authenticationService.presentAlert('Se ha realizado una venta a: ' + arr[2] +\n                                '<br> Por un monto de ' + this.moneda + ' ' + arr[4] , 'Precaución' , '');\n\n                                this.pideregistros(this.currentSegment);\n\n                            }, (err) => {\n                              this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n                            });\n\n                            }\n\n                          }, (err) => {\n                            this.authenticationService.presentAlert(err.error , 'Precaución', '');\n                          });\n                        }\n\n\n                  }\n                  if (todo === 'Anular Transferencia') {\n                    const arr = tranat.split('°');\n\n                    const   options: any\t     = {\n                      estado: -1,\n                      cobroservicio: ' ' + arr[2] +\n                      ', Se ha ANULADO la transaccion con  un monto de ' + this.moneda + ' ' + arr[4],\n                      bitacora: { idempresa : this.userinfo[0].idempresa._id , idafiliado: '' ,\n                      email: this.userinfo[0].email , permiso : 'Actualiza', accion: 'acepta token ' + arr[7]}\n                  };\n\n                  if (options) {\n                    this.authenticationService.createReg(arr[7], options, 'compratokens').then((result) => {\n\n                      this.authenticationService.presentAlert('Se ha anulado la transferencia: ' , 'Precaución' , '');\n\n                      this.pideregistros(this.currentSegment);\n\n                  }, (err) => {\n                    this.authenticationService.presentAlert(err.error , 'Precaución' , '');\n                  });\n\n                  }\n\n\n                  }\n           }\n         }\n       ]\n     });\n     await alert.present();\n }\n   async deleteRecord(item: any) {\n    const alert = await this.alertController.create({\n      header: this.seguro,\n      message: '',\n      buttons: [\n        {\n          text: 'No',\n         cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n           text: 'Si',\n           handler: () => {\n             const recordID: string\t\t= item._id;\n             this.authenticationService.deleteReg(recordID + '/' + this.userinfo[0].email + '/' + this.userinfo[0].idempresa._id  + '/'\n             + 'na' , 'tokenss').then((data) => {\n               this.pideregistros( this.currentSegment);\n               }, (err) => {\n                 this.authenticationService.presentAlert(err.error, this.msg, '');\n             });\n           }\n         }\n       ]\n     });\n     await alert.present();\n   }\n\n   loadData(event) {\n    setTimeout(() => {\n      event.target.complete();\n      if ( this.items.length === 1000) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n}\n"," <ion-header>\n <ion-toolbar color=\"primary\">\n   <ion-buttons slot=\"start\">\n    \n    <ion-back-button defaultHref=\"Billetera2ListPage\"></ion-back-button>\n   </ion-buttons>\n   <ion-title>\n     {{tituloxx}}\n   </ion-title>\n   <ion-buttons slot=\"end\">\n    \n     <ion-button title=\" {{ 'REFRESCARM' | translate }}\" (click)=\"pideregistros0()\">\n       <ion-icon slot=\"icon-only\" name=\"refresh-circle-outline\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'grid'\" (click)=\"changeToList()\">\n       <ion-icon slot=\"icon-only\" name=\"grid\"></ion-icon>\n     </ion-button>\n     <ion-button *ngIf=\"viewType === 'list'\" (click)=\"changeToGrid()\">\n       <ion-icon slot=\"icon-only\" name=\"list\"></ion-icon>\n     </ion-button>\n   </ion-buttons>\n </ion-toolbar>\n <ion-toolbar class=\"filters-toolbar\">\n   <ion-row class=\"searchbar-row\" align-items-center>\n     <ion-col>\n       <ion-searchbar animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"{{ 'BUSCARM' | translate }}\"></ion-searchbar>\n     </ion-col>\n     <ion-col [hidden]=\"!showAgeFilter\" class=\"call-to-action-col\">\n       <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" title=\" {{ 'FILTROM' | translate }}\" (click)=\"showAgeFilter = !showAgeFilter\">\n         <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n       </ion-button>\n     </ion-col>\n   </ion-row>\n   <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n     <ion-row class=\"range-item-row\">\n       <ion-col size=\"12\">\n         <div class=\"range-header\">\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n           <span class=\"range-label\">Filter by age</span>\n           <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n         </div>\n       </ion-col>\n       <ion-col size=\"12\">\n         <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n       </ion-col>\n     </ion-row>\n   </form>\n </ion-toolbar>\n</ion-header>\n<ion-content class=\"user-friends-content\">\n <ion-item-divider sticky>\n   <ion-label *ngIf=\"(itemsList?.length > 0) \" >{{ 'NOREGISTROSM' | translate }}: {{itemsList.length}}</ion-label>\n </ion-item-divider>\n <ion-segment (ionChange)=\"filterContacts($event)\" value=\"todos\">\n   <ion-segment-button value=\"0\">\n    Pendientes\n    </ion-segment-button>\n   <ion-segment-button value=\"1\">\n   Cobradas\n   </ion-segment-button>\n   <ion-segment-button value=\"20\">\n    Enviadas\n    </ion-segment-button>\n    <ion-segment-button value=\"-1\">\n      Anuladas\n      </ion-segment-button>\n </ion-segment>\n <ion-list *ngIf=\"efecto === 0\" >\n   <ion-item lines=\"none\" *ngFor=\"let item of [0,1,2,3,4,5,6]\">\n     <ion-label>\n       <skeleton-element></skeleton-element>\n       <skeleton-element></skeleton-element>\n       <skeleton-element width=\"67%\"></skeleton-element>\n     </ion-label>\n   </ion-item>\n </ion-list>\n <ion-list  *ngIf=\"(itemsList?.length > 0) && (viewType === 'list')\">\n   <ion-item  *ngFor=\"let item of itemsList;let i = index; \" [routerLink]=\"\">\n<ion-grid>\n<ion-row>\n  <ion-col size=\"12\">\n     <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n    <ion-label class=\"ion-text-wrap\">\n        <ion-note slot=\"end\">No. {{i+1}}</ion-note> <br>\n<p>\n  <strong> Tipo:</strong> {{item.tipo}}<br>   \n\n       \n  <strong *ngIf=\"currentSegment!=='20'\">Transferencia de : {{(item.nombre).split('°')[2]}} <br>    </strong> \n\n  <strong *ngIf=\"currentSegment==='20'\">Transferir a : {{(item.nombre).split('°')[5]}} <br>    </strong> \n  <strong >Monto  : {{(item.nombre).split('°')[4]}} <br>    </strong> \n \n    \n</p>   <ion-badge color=\"medium\"> <strong  *ngIf=\"item.estado===0 && currentSegment==='20'\"> Pendiente </strong> \n  <strong  *ngIf=\"item.estado===1 && currentSegment==='20'\">Cobrado</strong>\n  <strong  *ngIf=\"item.estado===20 && currentSegment==='20'\">Cobrado</strong> \n  <strong  *ngIf=\"item.estado===-1 \">Anulada</strong> </ion-badge>\n     </ion-label>\n</ion-col>\n</ion-row>\n  <ion-row>\n<ion-col size=\"12\">\n      <ion-toolbar  color=\"transparent\">\n       \n        <ion-buttons *ngIf=\"item.estado===0 && (currentSegment==='20' || currentSegment==='0')\" slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n   </ion-item>\n </ion-list>\n <ion-grid *ngIf=\"(itemsList?.length > 0) && (viewType === 'grid')\">\n   <ion-row>\n     <ion-col *ngFor=\"let item of itemsList;let i = index;\" size-lg=\"6\"  size-sm=\"6\" size=\"12\">\n       <ion-card  >\n         <ion-row class=\"user-stats-wrapper user-details-wrapper\">\n           <ion-col>\n             <span class=\"user-stat-value\">No.</span>\n             <span class=\"user-stat-name\">{{i+1}} </span>\n           </ion-col>\n           <ion-col>\n             <span class=\"user-stat-value\">  <strong  *ngIf=\"item.estado===0 && currentSegment==='20'\"> Pendiente </strong> \n              <strong  *ngIf=\"item.estado===1 && currentSegment==='20'\">Cobrado</strong> \n              <strong  *ngIf=\"item.estado===20 && currentSegment==='20'\">Cobrado</strong> \n              <strong  *ngIf=\"item.estado===-1 \">Anulada</strong>\n            </span>\n           </ion-col>\n         </ion-row>\n         <ion-item   [routerLink]=\"\">\n           <ion-icon name=\"server-outline\" slot=\"start\"></ion-icon>\n           <ion-label   class=\"ion-text-wrap\">\n <p> \n  <strong>Tipo:</strong> {{item.tipo}} <br> \n  \n       \n  <strong *ngIf=\"currentSegment!=='20'\">Transferencia de : {{(item.nombre).split('°')[2]}} <br>    </strong> \n\n  <strong *ngIf=\"currentSegment==='20'\">Transferir a : {{(item.nombre).split('°')[5]}} <br>    </strong>  \n              <strong >Monto  : {{(item.nombre).split('°')[4]}} <br>    </strong> \n             \n      \n </p>    </ion-label>\n         </ion-item>\n         <ion-card-content>\n         </ion-card-content>\n         <ion-row no-padding>\n           <ion-col  size=\"12\" >\n      <ion-toolbar  color=\"transparent\">\n      \n        <ion-buttons *ngIf=\"item.estado===0 && (currentSegment==='20' || currentSegment==='0')\" slot=\"primary\">\n          <ion-button title= \"{{ 'MENUM' | translate }}\" (click)=\"otrasop(item)\"   color=\"secondary\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n           </ion-col>\n         </ion-row>\n       </ion-card>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n <h3 *ngIf=\"itemsList?.length == 0\" class=\"empty-list-message\">\n   {{ 'NODATOS' | translate }}  \n </h3>\n <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\n   <ion-infinite-scroll-content\n     loadingSpinner=\"bubbles\"\n     loadingText=\"Espere un momento...\">\n   </ion-infinite-scroll-content>\n </ion-infinite-scroll>\n</ion-content>\n"]}